Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id B9B76B601
	for <lists+linux-arm-kernel@lfdr.de>; Sun, 28 Apr 2019 14:54:16 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-Id:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=IIGWlRky7ZS3u0ebuAP1wZ9NIYPeZ/5frKsQpXy6lUU=; b=TDc7p2dMF0GTyz
	/5TMV13hBe+Z8BHC7GGizOdxk2Hgb6fFPUzUXgB6t6F7aoJFkf85jVk83yoEWtFyM4XPijRvP5ufh
	ZdvISCkwD64l+DwXbTBVVdsnZN3XpIFygzTDQMT/nKWCaS5V+uRgSBDoqJqt0YJh8bJgozM+1+99p
	YQigYNs3FL5/IQhKsackRTe62/hPu0n3Xksfu/dAog19JcRBmccX5hFvXl/85XYdTxxPPw9UzlSiU
	IbLay2HkgrwGDoJyl7MXiY/x7ShJwJnlTVumANcgXdDrUeFlRfLTwi8YpDhTGRyyrSEPTgj1FbJiY
	3glvv8Wv859pZ+F5qtkg==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.90_1 #2 (Red Hat Linux))
	id 1hKjJu-0002EJ-5y; Sun, 28 Apr 2019 12:54:14 +0000
Received: from smtp-out.xnet.cz ([178.217.244.18])
 by bombadil.infradead.org with esmtps (Exim 4.90_1 #2 (Red Hat Linux))
 id 1hKjJS-0001qG-2U; Sun, 28 Apr 2019 12:53:48 +0000
Received: from meh.true.cz (meh.true.cz [108.61.167.218])
 (Authenticated sender: petr@true.cz)
 by smtp-out.xnet.cz (Postfix) with ESMTPSA id 60B384536;
 Sun, 28 Apr 2019 14:53:43 +0200 (CEST)
Received: by meh.true.cz (OpenSMTPD) with ESMTP id cb8cecff;
 Sun, 28 Apr 2019 14:53:41 +0200 (CEST)
From: =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
To: netdev@vger.kernel.org, devicetree@vger.kernel.org,
 linux-kernel@vger.kernel.org, "David S. Miller" <davem@davemloft.net>,
 Rob Herring <robh+dt@kernel.org>, Mark Rutland <mark.rutland@arm.com>,
 Andrew Lunn <andrew@lunn.ch>, Vivien Didelot <vivien.didelot@gmail.com>,
 Florian Fainelli <f.fainelli@gmail.com>,
 Yisen Zhuang <yisen.zhuang@huawei.com>,
 Salil Mehta <salil.mehta@huawei.com>,
 Woojung Huh <woojung.huh@microchip.com>,
 Microchip Linux Driver Support <UNGLinuxDriver@microchip.com>,
 Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
 Masahiro Yamada <yamada.masahiro@socionext.com>,
 Jassi Brar <jaswinder.singh@linaro.org>, Kalle Valo <kvalo@codeaurora.org>,
 Matthias Brugger <matthias.bgg@gmail.com>
Subject: [PATCH v2 2/4] dt-bindings: doc: Reflect new NVMEM of_get_mac_address
 behaviour
Date: Sun, 28 Apr 2019 14:53:20 +0200
Message-Id: <1556456002-13430-3-git-send-email-ynezz@true.cz>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1556456002-13430-1-git-send-email-ynezz@true.cz>
References: <1556456002-13430-1-git-send-email-ynezz@true.cz>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20190428_055346_658176_41F1B8F3 
X-CRM114-Status: GOOD (  20.96  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [178.217.244.18 listed in list.dnswl.org]
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: Maxime Ripard <maxime.ripard@bootlin.com>, linux-wireless@vger.kernel.org,
 linux-mediatek@lists.infradead.org,
 Srinivas Kandagatla <srinivas.kandagatla@linaro.org>,
 Alban Bedel <albeu@free.fr>, =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>,
 Frank Rowand <frowand.list@gmail.com>, linux-arm-kernel@lists.infradead.org,
 Heiner Kallweit <hkallweit1@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

QXMgb2ZfZ2V0X21hY19hZGRyZXNzIG5vdyBzdXBwb3J0cyBOVk1FTSB1bmRlciB0aGUgaG9vZCwg
d2UgbmVlZCB0byB1cGRhdGUKdGhlIGJpbmRpbmdzIGRvY3VtZW50YXRpb24gd2l0aCB0aGUgbmV3
IG52bWVtLWNlbGwqIHByb3BlcnRpZXMsIHdoaWNoIHdvdWxkCm1lYW4gY29weSZwYXN0aW5nIGEg
bG90IG9mIHJlZHVuZGFudCBpbmZvcm1hdGlvbiB0byBldmVyeSBiaW5kaW5nCmRvY3VtZW50YXRp
b24gY3VycmVudGx5IHJlZmVyZW5jaW5nIHNvbWUgb2YgdGhlIE1BQyBhZGRyZXNzIHByb3BlcnRp
ZXMuCgpTbyBJJ3ZlIGp1c3QgcmVtb3ZlZCBhbGwgdGhlIHJlZmVyZW5jZXMgdG8gdGhlIG9wdGlv
bmFsIE1BQyBhZGRyZXNzCnByb3BlcnRpZXMgYW5kIHJlcGxhY2VkIHRoZW0gd2l0aCB0aGUgcmVm
ZXJlbmNlIHRvIHRoZSBuZXQvZXRoZXJuZXQudHh0CmZpbGUuICBXaGlsZSBhdCBpdCwgSSd2ZSBh
bHNvIHJlbW92ZWQgb3RoZXIgb3B0aW9uYWwgRXRoZXJuZXQgcHJvcGVydGllcy4KClNpZ25lZC1v
ZmYtYnk6IFBldHIgxaB0ZXRpYXIgPHluZXp6QHRydWUuY3o+Ci0tLQoKIENoYW5nZXMgc2luY2Ug
djE6CgogKiBpbnN0ZWFkIG9mIHVwZGF0aW5nIGFsbCBiaW5kaW5ncyBkb2N1bWVudGF0aW9uIHdp
dGggbnZtZW0gcHJvcGVydGllcywKICAgSSd2ZSBqdXN0IHVwZGF0ZWQgdGhvc2UgZG9jcyB3aGlj
aCB3ZXJlIGFscmVhZHkgcmVmZXJlbmNpbmcgTUFDIGFkZHJlc3MKICAgcHJvcGVydGllcyBhbmQg
cmVwbGFjZWQgdGhlbSB3aXRoIHJlZmVyZW5jZSB0byBjb21tb24gbmV0L2V0aGVybmV0LnR4dAoK
IERvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvYWx0ZXJhX3RzZS50eHQgICAg
ICAgIHwgIDUgKystLS0KIERvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvYW1k
LXhnYmUudHh0ICAgICAgICAgIHwgIDUgKysrLS0KIERvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvYnJjbSxhbWFjLnR4dCAgICAgICAgIHwgIDQgKystLQogRG9jdW1lbnRhdGlv
bi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9jcHN3LnR4dCAgICAgICAgICAgICAgfCAgNSArKyst
LQogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9kYXZpbmNpX2VtYWMudHh0
ICAgICAgfCAgNSArKystLQogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9k
c2EvZHNhLnR4dCAgICAgICAgICAgfCAxMyArKy0tLS0tLS0tLS0tCiBEb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dCAgICAgICAgICB8ICA2ICsrKystLQog
RG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9oaXNpbGljb24tZmVtYWMudHh0
ICAgfCAgNiArKy0tLS0KIC4uLi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9oaXNpbGljb24taGl4
NWhkMi1nbWFjLnR4dCAgICAgIHwgIDcgKysrLS0tLQogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVl
L2JpbmRpbmdzL25ldC9rZXlzdG9uZS1uZXRjcC50eHQgICAgfCAgOCArKystLS0tLQogRG9jdW1l
bnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9tYWNiLnR4dCAgICAgICAgICAgICAgfCAg
NSArKy0tLQogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9tYXJ2ZWxsLXB4
YTE2OC50eHQgICAgfCAgNSArKystLQogLi4uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L21pY3Jv
Y2hpcCxlbmMyOGo2MC50eHQgICAgICAgICAgfCAgMyArKy0KIERvY3VtZW50YXRpb24vZGV2aWNl
dHJlZS9iaW5kaW5ncy9uZXQvbWljcm9jaGlwLGxhbjc4eHgudHh0IHwgIDUgKystLS0KIERvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvcWNhLHFjYTcwMDAudHh0ICAgICAgIHwg
IDQgKysrLQogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zYW1zdW5nLXN4
Z2JlLnR4dCAgICAgfCAgNiArKy0tLS0KIC4uLi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zbnBz
LGR3Yy1xb3MtZXRoZXJuZXQudHh0ICAgICAgIHwgIDYgKysrLS0tCiAuLi4vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvc29jaW9uZXh0LHVuaXBoaWVyLWF2ZTQudHh0ICAgICB8ICA0ICsrLS0KIERv
Y3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvc29jaW9uZXh0LW5ldHNlYy50eHQg
IHwgIDcgKysrLS0tLQogLi4uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3dpcmVsZXNzL21lZGlh
dGVrLG10NzYudHh0ICAgICAgfCAgNSArKystLQogLi4uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0
L3dpcmVsZXNzL3FjYSxhdGg5ay50eHQgICAgICAgICAgfCAgNCArKy0tCiAyMSBmaWxlcyBjaGFu
Z2VkLCA1NCBpbnNlcnRpb25zKCspLCA2NCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9Eb2N1
bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2FsdGVyYV90c2UudHh0IGIvRG9jdW1l
bnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9hbHRlcmFfdHNlLnR4dAppbmRleCAwZTIx
ZGY5Li5jODVhNTg5IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGlu
Z3MvbmV0L2FsdGVyYV90c2UudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5k
aW5ncy9uZXQvYWx0ZXJhX3RzZS50eHQKQEAgLTQ2LDkgKzQ2LDggQEAgUmVxdWlyZWQgcHJvcGVy
dGllczoKIAktIHJlZzogcGh5IGlkIHVzZWQgdG8gY29tbXVuaWNhdGUgdG8gcGh5LgogCS0gZGV2
aWNlX3R5cGU6IE11c3QgYmUgImV0aGVybmV0LXBoeSIuCiAKLU9wdGlvbmFsIHByb3BlcnRpZXM6
Ci0tIGxvY2FsLW1hYy1hZGRyZXNzOiBTZWUgZXRoZXJuZXQudHh0IGluIHRoZSBzYW1lIGRpcmVj
dG9yeS4KLS0gbWF4LWZyYW1lLXNpemU6IFNlZSBldGhlcm5ldC50eHQgaW4gdGhlIHNhbWUgZGly
ZWN0b3J5LgorRm9yIGFsbCBvdGhlciBvcHRpb25hbCBFdGhlcm5ldCBwcm9wZXJ0aWVzLCBwbGVh
c2UgcmVmZXIgdG8KK0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJu
ZXQudHh0LgogCiBFeGFtcGxlOgogCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRy
ZWUvYmluZGluZ3MvbmV0L2FtZC14Z2JlLnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvYW1kLXhnYmUudHh0CmluZGV4IDkzZGNiNzkuLmI2MDc3NjUgMTAwNjQ0Ci0t
LSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvYW1kLXhnYmUudHh0Cisr
KyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvYW1kLXhnYmUudHh0CkBA
IC0yNCw4ICsyNCw2IEBAIFJlcXVpcmVkIHByb3BlcnRpZXM6CiAtIHBoeS1tb2RlOiBTZWUgZXRo
ZXJuZXQudHh0IGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5CiAKIE9wdGlvbmFsIHByb3BlcnRp
ZXM6Ci0tIG1hYy1hZGRyZXNzOiBtYWMgYWRkcmVzcyB0byBiZSBhc3NpZ25lZCB0byB0aGUgZGV2
aWNlLiBDYW4gYmUgb3ZlcnJpZGRlbgotICBieSBVRUZJLgogLSBkbWEtY29oZXJlbnQ6IFByZXNl
bnQgaWYgZG1hIG9wZXJhdGlvbnMgYXJlIGNvaGVyZW50CiAtIGFtZCxwZXItY2hhbm5lbC1pbnRl
cnJ1cHQ6IEluZGljYXRlcyB0aGF0IFJ4IGFuZCBUeCBjb21wbGV0ZSB3aWxsIGdlbmVyYXRlCiAg
IGEgdW5pcXVlIGludGVycnVwdCBmb3IgZWFjaCBETUEgY2hhbm5lbCAtIHRoaXMgcmVxdWlyZXMg
YW4gYWRkaXRpb25hbApAQCAtNDgsNiArNDYsOSBAQCBwcm9wZXJ0eSBpcyB1c2VkLgogLSBhbWQs
c2VyZGVzLWRmZS10YXAtY29uZmlnOiBERkUgdGFwcyBhdmFpbGFibGUgdG8gcnVuCiAtIGFtZCxz
ZXJkZXMtZGZlLXRhcC1lbmFibGU6IERGRSB0YXBzIHRvIGVuYWJsZQogCitGb3IgYWxsIG90aGVy
IG9wdGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bworRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQuCisKIEV4YW1wbGU6CiAJ
eGdiZUBlMDcwMDAwMCB7CiAJCWNvbXBhdGlibGUgPSAiYW1kLHhnYmUtc2VhdHRsZS12MWEiOwpk
aWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9icmNtLGFt
YWMudHh0IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9icmNtLGFtYWMu
dHh0CmluZGV4IDBiZmFkNjUuLjVlMGJhMjcgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2
aWNldHJlZS9iaW5kaW5ncy9uZXQvYnJjbSxhbWFjLnR4dAorKysgYi9Eb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvbmV0L2JyY20sYW1hYy50eHQKQEAgLTE2LDggKzE2LDggQEAgUmVx
dWlyZWQgcHJvcGVydGllczoKIAkJCQlyZWdpc3RlcnMgKHJlcXVpcmVkIGZvciBOb3J0aHN0YXIy
KQogIC0gaW50ZXJydXB0czoJSW50ZXJydXB0IG51bWJlcgogCi1PcHRpb25hbCBwcm9wZXJ0aWVz
OgotLSBtYWMtYWRkcmVzczoJU2VlIGV0aGVybmV0LnR4dCBmaWxlIGluIHRoZSBzYW1lIGRpcmVj
dG9yeQorRm9yIGFsbCBvdGhlciBvcHRpb25hbCBFdGhlcm5ldCBwcm9wZXJ0aWVzLCBwbGVhc2Ug
cmVmZXIgdG8KK0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQu
dHh0LgogCiBFeGFtcGxlczoKIApkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVl
L2JpbmRpbmdzL25ldC9jcHN3LnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5n
cy9uZXQvY3Bzdy50eHQKaW5kZXggMzI2NGUxOS4uMzcwMTYxYzkgMTAwNjQ0Ci0tLSBhL0RvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvY3Bzdy50eHQKKysrIGIvRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9jcHN3LnR4dApAQCAtNDksOSArNDksMTAgQEAg
UmVxdWlyZWQgcHJvcGVydGllczoKIAogT3B0aW9uYWwgcHJvcGVydGllczoKIC0gZHVhbF9lbWFj
X3Jlc192bGFuCTogU3BlY2lmaWVzIFZJRCB0byBiZSB1c2VkIHRvIHNlZ3JlZ2F0ZSB0aGUgcG9y
dHMKLS0gbWFjLWFkZHJlc3MJCTogU2VlIGV0aGVybmV0LnR4dCBmaWxlIGluIHRoZSBzYW1lIGRp
cmVjdG9yeQogLSBwaHlfaWQJCTogU3BlY2lmaWVzIHNsYXZlIHBoeSBpZCAoZGVwcmVjYXRlZCwg
dXNlIHBoeS1oYW5kbGUpCi0tIHBoeS1oYW5kbGUJCTogU2VlIGV0aGVybmV0LnR4dCBmaWxlIGlu
IHRoZSBzYW1lIGRpcmVjdG9yeQorCitGb3IgYWxsIG90aGVyIG9wdGlvbmFsIEV0aGVybmV0IHBy
b3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bworRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRp
bmdzL25ldC9ldGhlcm5ldC50eHQuCiAKIFNsYXZlIHN1Yi1ub2RlczoKIC0gZml4ZWQtbGluawkJ
OiBTZWUgZml4ZWQtbGluay50eHQgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZGF2aW5jaV9lbWFjLnR4
dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZGF2aW5jaV9lbWFjLnR4
dAppbmRleCBjYTgzZGNjLi5kMjUwYzhlIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2Rldmlj
ZXRyZWUvYmluZGluZ3MvbmV0L2RhdmluY2lfZW1hYy50eHQKKysrIGIvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9kYXZpbmNpX2VtYWMudHh0CkBAIC0yMCwxMSArMjAsMTIg
QEAgUmVxdWlyZWQgcHJvcGVydGllczoKIE9wdGlvbmFsIHByb3BlcnRpZXM6CiAtIHBoeS1oYW5k
bGU6IFNlZSBldGhlcm5ldC50eHQgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuCiAgICAgICAg
ICAgICAgIElmIGFic2VudCwgZGF2aW5jaV9lbWFjIGRyaXZlciBkZWZhdWx0cyB0byAxMDAvRlVM
TC4KLS0gbnZtZW0tY2VsbHM6IHBoYW5kbGUsIHJlZmVyZW5jZSB0byBhbiBudm1lbSBub2RlIGZv
ciB0aGUgTUFDIGFkZHJlc3MKLS0gbnZtZW0tY2VsbC1uYW1lczogc3RyaW5nLCBzaG91bGQgYmUg
Im1hYy1hZGRyZXNzIiBpZiBudm1lbSBpcyB0byBiZSB1c2VkCiAtIHRpLGRhdmluY2ktcm1paS1l
bjogMSBieXRlLCAxIG1lYW5zIHVzZSBSTUlJCiAtIHRpLGRhdmluY2ktbm8tYmQtcmFtOiBib29s
ZWFuLCBkb2VzIEVNQUMgaGF2ZSBCRCBSQU0/CiAKK0ZvciBhbGwgb3RoZXIgb3B0aW9uYWwgRXRo
ZXJuZXQgcHJvcGVydGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1bWVudGF0aW9uL2RldmljZXRy
ZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dC4KKwogRXhhbXBsZSAoZW5id19jbWMgYm9hcmQp
OgogCWV0aDA6IGVtYWNAMWUyMDAwMCB7CiAJCWNvbXBhdGlibGUgPSAidGksZGF2aW5jaS1kbTY0
NjctZW1hYyI7CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3Mv
bmV0L2RzYS9kc2EudHh0IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9k
c2EvZHNhLnR4dAppbmRleCBkNjZhNTI5Li42YzhkYTQ0IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0
aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2RzYS9kc2EudHh0CisrKyBiL0RvY3VtZW50YXRp
b24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZHNhL2RzYS50eHQKQEAgLTU4LDIyICs1OCwxMyBA
QCBBIHVzZXIgcG9ydCBoYXMgdGhlIGZvbGxvd2luZyBvcHRpb25hbCBwcm9wZXJ0eToKIFBvcnQg
Y2hpbGQgbm9kZXMgbWF5IGFsc28gY29udGFpbiB0aGUgZm9sbG93aW5nIG9wdGlvbmFsIHN0YW5k
YXJkaXNlZAogcHJvcGVydGllcywgZGVzY3JpYmVkIGluIGJpbmRpbmcgZG9jdW1lbnRzOgogCi0t
IHBoeS1oYW5kbGUJCTogUGhhbmRsZSB0byBhIFBIWSBvbiBhbiBNRElPIGJ1cy4gU2VlCi0JCQkg
IERvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0Ci0JCQkg
IGZvciBkZXRhaWxzLgotCi0tIHBoeS1tb2RlCQk6IFNlZQotCQkJICBEb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dAotCQkJICBmb3IgZGV0YWlscy4KLQog
LSBmaXhlZC1saW5rCQk6IEZpeGVkLWxpbmsgc3Vibm9kZSBkZXNjcmliaW5nIGEgbGluayB0byBh
IG5vbi1NRElPCiAJCQkgIG1hbmFnZWQgZW50aXR5LiBTZWUKIAkJCSAgRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9maXhlZC1saW5rLnR4dAogCQkJICBmb3IgZGV0YWlscy4K
IAotLSBsb2NhbC1tYWMtYWRkcmVzcwk6IFNlZQotCQkJICBEb2N1bWVudGF0aW9uL2RldmljZXRy
ZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dAotCQkJICBmb3IgZGV0YWlscy4KK0ZvciBhbGwg
b3RoZXIgb3B0aW9uYWwgRXRoZXJuZXQgcHJvcGVydGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1
bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dC4KIAogRXhhbXBs
ZQogCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2V0
aGVybmV0LnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJu
ZXQudHh0CmluZGV4IDI5NzRlNjMuLmU2ZTAxZTAgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24v
ZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0CisrKyBiL0RvY3VtZW50YXRpb24v
ZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0CkBAIC00LDEyICs0LDE0IEBAIE5P
VEU6IEFsbCAncGh5KicgcHJvcGVydGllcyBkb2N1bWVudGVkIGJlbG93IGFyZSBFdGhlcm5ldCBz
cGVjaWZpYy4gRm9yIHRoZQogZ2VuZXJpYyBQSFkgJ3BoeXMnIHByb3BlcnR5LCBzZWUKIERvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9waHkvcGh5LWJpbmRpbmdzLnR4dC4KIAotLSBs
b2NhbC1tYWMtYWRkcmVzczogYXJyYXkgb2YgNiBieXRlcywgc3BlY2lmaWVzIHRoZSBNQUMgYWRk
cmVzcyB0aGF0IHdhcwotICBhc3NpZ25lZCB0byB0aGUgbmV0d29yayBkZXZpY2U7CiAtIG1hYy1h
ZGRyZXNzOiBhcnJheSBvZiA2IGJ5dGVzLCBzcGVjaWZpZXMgdGhlIE1BQyBhZGRyZXNzIHRoYXQg
d2FzIGxhc3QgdXNlZCBieQogICB0aGUgYm9vdCBwcm9ncmFtOyBzaG91bGQgYmUgdXNlZCBpbiBj
YXNlcyB3aGVyZSB0aGUgTUFDIGFkZHJlc3MgYXNzaWduZWQgdG8KICAgdGhlIGRldmljZSBieSB0
aGUgYm9vdCBwcm9ncmFtIGlzIGRpZmZlcmVudCBmcm9tIHRoZSAibG9jYWwtbWFjLWFkZHJlc3Mi
CiAgIHByb3BlcnR5OworLSBsb2NhbC1tYWMtYWRkcmVzczogYXJyYXkgb2YgNiBieXRlcywgc3Bl
Y2lmaWVzIHRoZSBNQUMgYWRkcmVzcyB0aGF0IHdhcworICBhc3NpZ25lZCB0byB0aGUgbmV0d29y
ayBkZXZpY2U7CistIG52bWVtLWNlbGxzOiBwaGFuZGxlLCByZWZlcmVuY2UgdG8gYW4gbnZtZW0g
bm9kZSBmb3IgdGhlIE1BQyBhZGRyZXNzCistIG52bWVtLWNlbGwtbmFtZXM6IHN0cmluZywgc2hv
dWxkIGJlICJtYWMtYWRkcmVzcyIgaWYgbnZtZW0gaXMgdG8gYmUgdXNlZAogLSBtYXgtc3BlZWQ6
IG51bWJlciwgc3BlY2lmaWVzIG1heGltdW0gc3BlZWQgaW4gTWJpdC9zIHN1cHBvcnRlZCBieSB0
aGUgZGV2aWNlOwogLSBtYXgtZnJhbWUtc2l6ZTogbnVtYmVyLCBtYXhpbXVtIHRyYW5zZmVyIHVu
aXQgKElFRUUgZGVmaW5lZCBNVFUpLCByYXRoZXIgdGhhbgogICB0aGUgbWF4aW11bSBmcmFtZSBz
aXplICh0aGVyZSdzIGNvbnRyYWRpY3Rpb24gaW4gdGhlIERldmljZXRyZWUKZGlmZiAtLWdpdCBh
L0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvaGlzaWxpY29uLWZlbWFjLnR4
dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvaGlzaWxpY29uLWZlbWFj
LnR4dAppbmRleCBkMTFhZjVlLi45OWFkNGQ1IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvbmV0L2hpc2lsaWNvbi1mZW1hYy50eHQKKysrIGIvRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9oaXNpbGljb24tZmVtYWMudHh0CkBAIC0xNCwx
NSArMTQsMTMgQEAgUmVxdWlyZWQgcHJvcGVydGllczoKIAl0aGUgUEhZIHJlc2V0IHNpZ25hbChv
cHRpb25hbCkuCiAtIHJlc2V0LW5hbWVzOiBzaG91bGQgY29udGFpbiB0aGUgcmVzZXQgc2lnbmFs
IG5hbWUgIm1hYyIocmVxdWlyZWQpCiAJYW5kICJwaHkiKG9wdGlvbmFsKS4KLS0gbWFjLWFkZHJl
c3M6IHNlZSBldGhlcm5ldC50eHQgWzFdLgotLSBwaHktbW9kZTogc2VlIGV0aGVybmV0LnR4dCBb
MV0uCi0tIHBoeS1oYW5kbGU6IHNlZSBldGhlcm5ldC50eHQgWzFdLgogLSBoaXNpbGljb24scGh5
LXJlc2V0LWRlbGF5cy11czogdHJpcGxldCBvZiBkZWxheXMgaWYgUEhZIHJlc2V0IHNpZ25hbCBn
aXZlbi4KIAlUaGUgMXN0IGNlbGwgaXMgcmVzZXQgcHJlLWRlbGF5IGluIG1pY3JvIHNlY29uZHMu
CiAJVGhlIDJuZCBjZWxsIGlzIHJlc2V0IHB1bHNlIGluIG1pY3JvIHNlY29uZHMuCiAJVGhlIDNy
ZCBjZWxsIGlzIHJlc2V0IHBvc3QtZGVsYXkgaW4gbWljcm8gc2Vjb25kcy4KIAotWzFdIERvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0CitGb3IgYWxsIG90
aGVyIG9wdGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bworRG9jdW1l
bnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQuCiAKIEV4YW1wbGU6
CiAJaGlzaV9mZW1hYzogZXRoZXJuZXRAMTAwOTAwMDAgewpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9oaXNpbGljb24taGl4NWhkMi1nbWFjLnR4dCBi
L0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvaGlzaWxpY29uLWhpeDVoZDIt
Z21hYy50eHQKaW5kZXggZWVhNzNhZC4uZjRhYWQyYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlv
bi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9oaXNpbGljb24taGl4NWhkMi1nbWFjLnR4dAorKysg
Yi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2hpc2lsaWNvbi1oaXg1aGQy
LWdtYWMudHh0CkBAIC0xNiw5ICsxNiw2IEBAIFJlcXVpcmVkIHByb3BlcnRpZXM6CiAtIGludGVy
cnVwdHM6IHNob3VsZCBjb250YWluIHRoZSBNQUMgaW50ZXJydXB0LgogLSAjYWRkcmVzcy1jZWxs
czogbXVzdCBiZSA8MT4uCiAtICNzaXplLWNlbGxzOiBtdXN0IGJlIDwwPi4KLS0gcGh5LW1vZGU6
IHNlZSBldGhlcm5ldC50eHQgWzFdLgotLSBwaHktaGFuZGxlOiBzZWUgZXRoZXJuZXQudHh0IFsx
XS4KLS0gbWFjLWFkZHJlc3M6IHNlZSBldGhlcm5ldC50eHQgWzFdLgogLSBjbG9ja3M6IGNsb2Nr
IHBoYW5kbGUgYW5kIHNwZWNpZmllciBwYWlyLgogLSBjbG9jay1uYW1lczogY29udGFpbiB0aGUg
Y2xvY2sgbmFtZSAibWFjX2NvcmUiKHJlcXVpcmVkKSBhbmQgIm1hY19pZmMiKG9wdGlvbmFsKS4K
IC0gcmVzZXRzOiBzaG91bGQgY29udGFpbiB0aGUgcGhhbmRsZSB0byB0aGUgTUFDIGNvcmUgcmVz
ZXQgc2lnbmFsKG9wdGlvbmFsKSwKQEAgLTMxLDkgKzI4LDExIEBAIFJlcXVpcmVkIHByb3BlcnRp
ZXM6CiAJVGhlIDJuZCBjZWxsIGlzIHJlc2V0IHB1bHNlIGluIG1pY3JvIHNlY29uZHMuCiAJVGhl
IDNyZCBjZWxsIGlzIHJlc2V0IHBvc3QtZGVsYXkgaW4gbWljcm8gc2Vjb25kcy4KIAorRm9yIGFs
bCBvdGhlciBvcHRpb25hbCBFdGhlcm5ldCBwcm9wZXJ0aWVzLCBwbGVhc2UgcmVmZXIgdG8KK0Rv
Y3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0LgorCiAtIFBI
WSBzdWJub2RlOiBpbmhlcml0cyBmcm9tIHBoeSBiaW5kaW5nIFsyXQogCi1bMV0gRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQKIFsyXSBEb2N1bWVudGF0
aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3BoeS50eHQKIAogRXhhbXBsZToKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQva2V5c3RvbmUtbmV0Y3Au
dHh0IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9rZXlzdG9uZS1uZXRj
cC50eHQKaW5kZXggMDRiYTFkYy4uMmM5ZThhYyAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9rZXlzdG9uZS1uZXRjcC50eHQKKysrIGIvRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9rZXlzdG9uZS1uZXRjcC50eHQKQEAgLTEzNSwx
NCArMTM1LDEyIEBAIE9wdGlvbmFsIHByb3BlcnRpZXM6CiAJCWFyZSBzd2FwcGVkLiAgVGhlIG5l
dGNwIGRyaXZlciB3aWxsIHN3YXAgdGhlIHR3byBEV09SRHMKIAkJYmFjayB0byB0aGUgcHJvcGVy
IG9yZGVyIHdoZW4gdGhpcyBwcm9wZXJ0eSBpcyBzZXQgdG8gMgogCQl3aGVuIGl0IG9idGFpbnMg
dGhlIG1hYyBhZGRyZXNzIGZyb20gZWZ1c2UuCi0tIGxvY2FsLW1hYy1hZGRyZXNzOgl0aGUgZHJp
dmVyIGlzIGRlc2lnbmVkIHRvIHVzZSB0aGUgb2ZfZ2V0X21hY19hZGRyZXNzIGFwaQotCQkJb25s
eSBpZiBlZnVzZS1tYWMgaXMgMC4gV2hlbiBlZnVzZS1tYWMgaXMgMCwgdGhlIE1BQwotCQkJYWRk
cmVzcyBpcyBvYnRhaW5lZCBmcm9tIGxvY2FsLW1hYy1hZGRyZXNzLiBJZiB0aGlzCi0JCQlhdHRy
aWJ1dGUgaXMgbm90IHByZXNlbnQsIHRoZW4gdGhlIGRyaXZlciB3aWxsIHVzZSBhCi0JCQlyYW5k
b20gTUFDIGFkZHJlc3MuCiAtICJuZXRjcC1kZXZpY2UgbGFiZWwiOglwaGFuZGxlIHRvIHRoZSBk
ZXZpY2Ugc3BlY2lmaWNhdGlvbiBmb3IgZWFjaCBvZiBOZXRDUAogCQkJc3ViLW1vZHVsZSBhdHRh
Y2hlZCB0byB0aGlzIGludGVyZmFjZS4KIAorRm9yIGFsbCBvdGhlciBvcHRpb25hbCBFdGhlcm5l
dCBwcm9wZXJ0aWVzLCBwbGVhc2UgcmVmZXIgdG8KK0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0LgorCiBFeGFtcGxlIGJpbmRpbmc6CiAKIG5ldGNwOiBu
ZXRjcEAyMDAwMDAwIHsKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5k
aW5ncy9uZXQvbWFjYi50eHQgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0
L21hY2IudHh0CmluZGV4IDhiODA1MTUuLjU4OTIzZjMgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRp
b24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvbWFjYi50eHQKKysrIGIvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9tYWNiLnR4dApAQCAtMjYsOSArMjYsOCBAQCBSZXF1aXJl
ZCBwcm9wZXJ0aWVzOgogCU9wdGlvbmFsIGVsZW1lbnRzOiAndHN1X2NsaycKIC0gY2xvY2tzOiBQ
aGFuZGxlcyB0byBpbnB1dCBjbG9ja3MuCiAKLU9wdGlvbmFsIHByb3BlcnRpZXM6Ci0tIG52bWVt
LWNlbGxzOiBwaGFuZGxlLCByZWZlcmVuY2UgdG8gYW4gbnZtZW0gbm9kZSBmb3IgdGhlIE1BQyBh
ZGRyZXNzCi0tIG52bWVtLWNlbGwtbmFtZXM6IHN0cmluZywgc2hvdWxkIGJlICJtYWMtYWRkcmVz
cyIgaWYgbnZtZW0gaXMgdG8gYmUgdXNlZAorRm9yIGFsbCBvdGhlciBvcHRpb25hbCBFdGhlcm5l
dCBwcm9wZXJ0aWVzLCBwbGVhc2UgcmVmZXIgdG8KK0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0LgogCiBPcHRpb25hbCBwcm9wZXJ0aWVzIGZvciBQSFkg
Y2hpbGQgbm9kZToKIC0gcmVzZXQtZ3Bpb3MgOiBTaG91bGQgc3BlY2lmeSB0aGUgZ3BpbyBmb3Ig
cGh5IHJlc2V0CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3Mv
bmV0L21hcnZlbGwtcHhhMTY4LnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5n
cy9uZXQvbWFydmVsbC1weGExNjgudHh0CmluZGV4IDg0NWExNDguLjBkMzZmY2IgMTAwNjQ0Ci0t
LSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvbWFydmVsbC1weGExNjgu
dHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvbWFydmVsbC1w
eGExNjgudHh0CkBAIC0xMCw4ICsxMCw5IEBAIE9wdGlvbmFsIHByb3BlcnRpZXM6CiAtIHBvcnQt
aWQ6IEV0aGVybmV0IHBvcnQgbnVtYmVyLiBTaG91bGQgYmUgJzAnLCcxJyBvciAnMicuCiAtICNh
ZGRyZXNzLWNlbGxzOiBtdXN0IGJlIDEgd2hlbiB1c2luZyBzdWItbm9kZXMuCiAtICNzaXplLWNl
bGxzOiBtdXN0IGJlIDAgd2hlbiB1c2luZyBzdWItbm9kZXMuCi0tIHBoeS1oYW5kbGU6IHNlZSBl
dGhlcm5ldC50eHQgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuCi0tIGxvY2FsLW1hYy1hZGRy
ZXNzOiBzZWUgZXRoZXJuZXQudHh0IGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LgorCitGb3Ig
YWxsIG90aGVyIG9wdGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bwor
RG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQuCiAKIFN1
Yi1ub2RlczoKIEVhY2ggUEhZIGNhbiBiZSByZXByZXNlbnRlZCBhcyBhIHN1Yi1ub2RlLiBUaGlz
IGlzIG5vdCBtYW5kYXRvcnkuCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUv
YmluZGluZ3MvbmV0L21pY3JvY2hpcCxlbmMyOGo2MC50eHQgYi9Eb2N1bWVudGF0aW9uL2Rldmlj
ZXRyZWUvYmluZGluZ3MvbmV0L21pY3JvY2hpcCxlbmMyOGo2MC50eHQKaW5kZXggMjQ2MjZlMC4u
ZGMxNWViYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25l
dC9taWNyb2NoaXAsZW5jMjhqNjAudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvbWljcm9jaGlwLGVuYzI4ajYwLnR4dApAQCAtMjEsOCArMjEsOSBAQCBPcHRp
b25hbCBwcm9wZXJ0aWVzOgogLSBzcGktbWF4LWZyZXF1ZW5jeTogTWF4aW11bSBmcmVxdWVuY3kg
b2YgdGhlIFNQSSBidXMgd2hlbiBhY2Nlc3NpbmcgdGhlIEVOQzI4SjYwLgogICBBY2NvcmRpbmcg
dG8gdGhlIEVOQzI4SjgwIGRhdGFzaGVldCwgdGhlIGNoaXAgYWxsb3dzIGEgbWF4aW11bSBvZiAy
MCBNSHosIGhvd2V2ZXIsCiAgIGJvYXJkIGRlc2lnbnMgbWF5IG5lZWQgdG8gbGltaXQgdGhpcyB2
YWx1ZS4KLS0gbG9jYWwtbWFjLWFkZHJlc3M6IFNlZSBldGhlcm5ldC50eHQgaW4gdGhlIHNhbWUg
ZGlyZWN0b3J5LgogCitGb3IgYWxsIG90aGVyIG9wdGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMs
IHBsZWFzZSByZWZlciB0bworRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9l
dGhlcm5ldC50eHQuCiAKIEV4YW1wbGUgKGZvciBOWFAgaS5NWDI4IHdpdGggcGluIGNvbnRyb2wg
c3R1ZmYgZm9yIEdQSU8gaXJxKToKIApkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0
cmVlL2JpbmRpbmdzL25ldC9taWNyb2NoaXAsbGFuNzh4eC50eHQgYi9Eb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvbmV0L21pY3JvY2hpcCxsYW43OHh4LnR4dAppbmRleCA3Njc4NmEw
Li43ODI0NTgxIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3Mv
bmV0L21pY3JvY2hpcCxsYW43OHh4LnR4dAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUv
YmluZGluZ3MvbmV0L21pY3JvY2hpcCxsYW43OHh4LnR4dApAQCAtNyw5ICs3LDggQEAgVGhlIERl
dmljZSBUcmVlIHByb3BlcnRpZXMsIGlmIHByZXNlbnQsIG92ZXJyaWRlIHRoZSBPVFAgYW5kIEVF
UFJPTS4KIFJlcXVpcmVkIHByb3BlcnRpZXM6CiAtIGNvbXBhdGlibGU6IFNob3VsZCBiZSBvbmUg
b2YgInVzYjQyNCw3ODAwIiwgInVzYjQyNCw3ODAxIiBvciAidXNiNDI0LDc4NTAiLgogCi1PcHRp
b25hbCBwcm9wZXJ0aWVzOgotLSBsb2NhbC1tYWMtYWRkcmVzczogICBzZWUgZXRoZXJuZXQudHh0
Ci0tIG1hYy1hZGRyZXNzOiAgICAgICAgIHNlZSBldGhlcm5ldC50eHQKK0ZvciBhbGwgb3RoZXIg
b3B0aW9uYWwgRXRoZXJuZXQgcHJvcGVydGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1bWVudGF0
aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dC4KIAogT3B0aW9uYWwgcHJv
cGVydGllcyBvZiB0aGUgZW1iZWRkZWQgUEhZOgogLSBtaWNyb2NoaXAsbGVkLW1vZGVzOiBhIDAu
LjQgZWxlbWVudCB2ZWN0b3IsIHdpdGggZWFjaCBlbGVtZW50IGNvbmZpZ3VyaW5nCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3FjYSxxY2E3MDAwLnR4
dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvcWNhLHFjYTcwMDAudHh0
CmluZGV4IGU0YThhNTEuLjI2Y2NlMWMgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNl
dHJlZS9iaW5kaW5ncy9uZXQvcWNhLHFjYTcwMDAudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2
aWNldHJlZS9iaW5kaW5ncy9uZXQvcWNhLHFjYTcwMDAudHh0CkBAIC0yMyw3ICsyMyw2IEBAIE9w
dGlvbmFsIHByb3BlcnRpZXM6CiAJCSAgICAgIE51bWJlcnMgc21hbGxlciB0aGFuIDEwMDAwMDAg
b3IgZ3JlYXRlciB0aGFuIDE2MDAwMDAwCiAJCSAgICAgIGFyZSBpbnZhbGlkLiBNaXNzaW5nIHRo
ZSBwcm9wZXJ0eSB3aWxsIHNldCB0aGUgU1BJCiAJCSAgICAgIGZyZXF1ZW5jeSB0byA4MDAwMDAw
IEhlcnR6LgotLSBsb2NhbC1tYWMtYWRkcmVzcyA6IHNlZSAuL2V0aGVybmV0LnR4dAogLSBxY2Es
bGVnYWN5LW1vZGUgICA6IFNldCB0aGUgU1BJIGRhdGEgdHJhbnNmZXIgb2YgdGhlIFFDQTcwMDAg
dG8gbGVnYWN5IG1vZGUuCiAJCSAgICAgIEluIHRoaXMgbW9kZSB0aGUgU1BJIG1hc3RlciBtdXN0
IHRvZ2dsZSB0aGUgY2hpcCBzZWxlY3QKIAkJICAgICAgYmV0d2VlbiBlYWNoIGRhdGEgd29yZC4g
SW4gYnVyc3QgbW9kZSB0aGVzZSBnYXBzIGFyZW4ndApAQCAtMzEsNiArMzAsOSBAQCBPcHRpb25h
bCBwcm9wZXJ0aWVzOgogCQkgICAgICB0aGUgUUNBNzAwMCBpcyBzZXR1cCB2aWEgR1BJTyBwaW4g
c3RyYXBwaW5nLiBJZiB0aGUKIAkJICAgICAgcHJvcGVydHkgaXMgbWlzc2luZyB0aGUgZHJpdmVy
IGRlZmF1bHRzIHRvIGJ1cnN0IG1vZGUuCiAKK0ZvciBhbGwgb3RoZXIgb3B0aW9uYWwgRXRoZXJu
ZXQgcHJvcGVydGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1bWVudGF0aW9uL2RldmljZXRyZWUv
YmluZGluZ3MvbmV0L2V0aGVybmV0LnR4dC4KKwogU1BJIEV4YW1wbGU6CiAKIC8qIEZyZWVzY2Fs
ZSBpLk1YMjggU1BJIG1hc3RlciovCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRy
ZWUvYmluZGluZ3MvbmV0L3NhbXN1bmctc3hnYmUudHh0IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0
cmVlL2JpbmRpbmdzL25ldC9zYW1zdW5nLXN4Z2JlLnR4dAppbmRleCA0NmU1OTExLi4wOWJkODUw
IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3NhbXN1
bmctc3hnYmUudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQv
c2Ftc3VuZy1zeGdiZS50eHQKQEAgLTIwLDEwICsyMCw4IEBAIFJlcXVpcmVkIHByb3BlcnRpZXM6
CiAgIFdoZW4gZml4ZWQgbGVuZ3RoIGlzIG5lZWRlZCBmb3IgYnVyc3QgbW9kZSwgaXQgY2FuIGJl
IHNldCB3aXRoaW4gYWxsb3dhYmxlCiAgIHJhbmdlLgogCi1PcHRpb25hbCBwcm9wZXJ0aWVzOgot
LSBtYWMtYWRkcmVzczogNiBieXRlcywgbWFjIGFkZHJlc3MKLS0gbWF4LWZyYW1lLXNpemU6IE1h
eGltdW0gVHJhbnNmZXIgVW5pdCAoSUVFRSBkZWZpbmVkIE1UVSksIHJhdGhlcgotCQkgIHRoYW4g
dGhlIG1heGltdW0gZnJhbWUgc2l6ZS4KK0ZvciBhbGwgb3RoZXIgb3B0aW9uYWwgRXRoZXJuZXQg
cHJvcGVydGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmlu
ZGluZ3MvbmV0L2V0aGVybmV0LnR4dC4KIAogRXhhbXBsZToKIApkaWZmIC0tZ2l0IGEvRG9jdW1l
bnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zbnBzLGR3Yy1xb3MtZXRoZXJuZXQudHh0
IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zbnBzLGR3Yy1xb3MtZXRo
ZXJuZXQudHh0CmluZGV4IDM2ZjFhZWYuLmRiNGM2OTggMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRp
b24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvc25wcyxkd2MtcW9zLWV0aGVybmV0LnR4dAorKysg
Yi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3NucHMsZHdjLXFvcy1ldGhl
cm5ldC50eHQKQEAgLTEwMyw4ICsxMDMsNiBAQCBSZXF1aXJlZCBwcm9wZXJ0aWVzOgogCiBPcHRp
b25hbCBwcm9wZXJ0aWVzOgogLSBkbWEtY29oZXJlbnQ6IFByZXNlbnQgaWYgZG1hIG9wZXJhdGlv
bnMgYXJlIGNvaGVyZW50Ci0tIG1hYy1hZGRyZXNzOiBTZWUgZXRoZXJuZXQudHh0IGluIHRoZSBz
YW1lIGRpcmVjdG9yeQotLSBsb2NhbC1tYWMtYWRkcmVzczogU2VlIGV0aGVybmV0LnR4dCBpbiB0
aGUgc2FtZSBkaXJlY3RvcnkKIC0gcGh5LXJlc2V0LWdwaW9zOiBQaGFuZGxlIGFuZCBzcGVjaWZp
ZXIgZm9yIGFueSBHUElPIHVzZWQgdG8gcmVzZXQgdGhlIFBIWS4KICAgU2VlIC4uL2dwaW8vZ3Bp
by50eHQuCiAtIHNucHMsZW4tbHBpOiBJZiBwcmVzZW50IGl0IGVuYWJsZXMgdXNlIG9mIHRoZSBB
WEkgbG93LXBvd2VyIGludGVyZmFjZQpAQCAtMTE4LDcgKzExNiw2IEBAIE9wdGlvbmFsIHByb3Bl
cnRpZXM6CiAtIHNucHMscnhwYmw6IERNQSBQcm9ncmFtbWFibGUgYnVyc3QgbGVuZ3RoIGZvciB0
aGUgUlggRE1BCiAtIHNucHMsZW4tdHgtbHBpLWNsb2NrZ2F0aW5nOiBFbmFibGUgZ2F0aW5nIG9m
IHRoZSBNQUMgVFggY2xvY2sgZHVyaW5nCiAgIFRYIGxvdy1wb3dlciBtb2RlLgotLSBwaHktaGFu
ZGxlOiBTZWUgZXRoZXJuZXQudHh0IGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5CiAtIG1kaW8g
ZGV2aWNlIHRyZWUgc3Vibm9kZTogV2hlbiB0aGUgR01BQyBoYXMgYSBwaHkgY29ubmVjdGVkIHRv
IGl0cyBsb2NhbAogICAgIG1kaW8sIHRoZXJlIG11c3QgYmUgZGV2aWNlIHRyZWUgc3Vibm9kZSB3
aXRoIHRoZSBmb2xsb3dpbmcKICAgICByZXF1aXJlZCBwcm9wZXJ0aWVzOgpAQCAtMTMzLDYgKzEz
MCw5IEBAIE9wdGlvbmFsIHByb3BlcnRpZXM6CiAgICAgLSBkZXZpY2VfdHlwZTogTXVzdCBiZSAi
ZXRoZXJuZXQtcGh5Ii4KICAgICAtIGZpeGVkLW1vZGUgZGV2aWNlIHRyZWUgc3Vibm9kZTogc2Vl
IGZpeGVkLWxpbmsudHh0IGluIHRoZSBzYW1lIGRpcmVjdG9yeQogCitGb3IgYWxsIG90aGVyIG9w
dGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bworRG9jdW1lbnRhdGlv
bi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQuCisKIEV4YW1wbGVzOgogZXRo
ZXJuZXQyQDQwMDEwMDAwIHsKIAljbG9jay1uYW1lcyA9ICJwaHlfcmVmX2NsayIsICJhcGJfcGNs
ayI7CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3Nv
Y2lvbmV4dCx1bmlwaGllci1hdmU0LnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5k
aW5ncy9uZXQvc29jaW9uZXh0LHVuaXBoaWVyLWF2ZTQudHh0CmluZGV4IGZjOGYwMTcuLmQ5MGQy
N2UgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvc29j
aW9uZXh0LHVuaXBoaWVyLWF2ZTQudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy9uZXQvc29jaW9uZXh0LHVuaXBoaWVyLWF2ZTQudHh0CkBAIC0zMSw4ICszMSw4IEBA
IFJlcXVpcmVkIHByb3BlcnRpZXM6CiAgLSBzb2Npb25leHQsc3lzY29uLXBoeS1tb2RlOiBBIHBo
YW5kbGUgdG8gc3lzY29uIHdpdGggb25lIGFyZ3VtZW50CiAJdGhhdCBjb25maWd1cmVzIHBoeSBt
b2RlLiBUaGUgYXJndW1lbnQgaXMgdGhlIElEIG9mIE1BQyBpbnN0YW5jZS4KIAotT3B0aW9uYWwg
cHJvcGVydGllczoKLSAtIGxvY2FsLW1hYy1hZGRyZXNzOiBTZWUgZXRoZXJuZXQudHh0IGluIHRo
ZSBzYW1lIGRpcmVjdG9yeS4KK0ZvciBhbGwgb3RoZXIgb3B0aW9uYWwgRXRoZXJuZXQgcHJvcGVy
dGllcywgcGxlYXNlIHJlZmVyIHRvCitEb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3Mv
bmV0L2V0aGVybmV0LnR4dC4KIAogUmVxdWlyZWQgc3Vibm9kZToKICAtIG1kaW86IEEgY29udGFp
bmVyIGZvciBjaGlsZCBub2RlcyByZXByZXNlbnRpbmcgcGh5IG5vZGVzLgpkaWZmIC0tZ2l0IGEv
RG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zb2Npb25leHQtbmV0c2VjLnR4
dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvc29jaW9uZXh0LW5ldHNl
Yy50eHQKaW5kZXggMGNmZjk0Zi4uMzA3M2MxNiAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9zb2Npb25leHQtbmV0c2VjLnR4dAorKysgYi9Eb2N1bWVu
dGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3NvY2lvbmV4dC1uZXRzZWMudHh0CkBAIC0y
NiwxMCArMjYsOSBAQCBSZXF1aXJlZCBwcm9wZXJ0aWVzOgogT3B0aW9uYWwgcHJvcGVydGllczog
KFNlZSBldGhlcm5ldC50eHQgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkpCiAtIGRtYS1jb2hl
cmVudDogQm9vbGVhbiBwcm9wZXJ0eSwgbXVzdCBvbmx5IGJlIHByZXNlbnQgaWYgbWVtb3J5CiAJ
YWNjZXNzZXMgcGVyZm9ybWVkIGJ5IHRoZSBkZXZpY2UgYXJlIGNhY2hlIGNvaGVyZW50LgotLSBs
b2NhbC1tYWMtYWRkcmVzczogU2VlIGV0aGVybmV0LnR4dCBpbiB0aGUgc2FtZSBkaXJlY3Rvcnku
Ci0tIG1hYy1hZGRyZXNzOiBTZWUgZXRoZXJuZXQudHh0IGluIHRoZSBzYW1lIGRpcmVjdG9yeS4K
LS0gbWF4LXNwZWVkOiBTZWUgZXRoZXJuZXQudHh0IGluIHRoZSBzYW1lIGRpcmVjdG9yeS4KLS0g
bWF4LWZyYW1lLXNpemU6IFNlZSBldGhlcm5ldC50eHQgaW4gdGhlIHNhbWUgZGlyZWN0b3J5Lgor
CitGb3IgYWxsIG90aGVyIG9wdGlvbmFsIEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZl
ciB0bworRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQu
CiAKIEV4YW1wbGU6CiAJZXRoMDogZXRoZXJuZXRANTIyZDAwMDAgewpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC93aXJlbGVzcy9tZWRpYXRlayxtdDc2
LnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvd2lyZWxlc3MvbWVk
aWF0ZWssbXQ3Ni50eHQKaW5kZXggN2I5YTc3Ni4uYmNjY2JiOSAxMDA2NDQKLS0tIGEvRG9jdW1l
bnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC93aXJlbGVzcy9tZWRpYXRlayxtdDc2LnR4
dAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3dpcmVsZXNzL21l
ZGlhdGVrLG10NzYudHh0CkBAIC0xMywxMSArMTMsMTIgQEAgcHJvcGVydGllczoKIAogT3B0aW9u
YWwgcHJvcGVydGllczoKIAotLSBtYWMtYWRkcmVzczogU2VlIGV0aGVybmV0LnR4dCBpbiB0aGUg
cGFyZW50IGRpcmVjdG9yeQotLSBsb2NhbC1tYWMtYWRkcmVzczogU2VlIGV0aGVybmV0LnR4dCBp
biB0aGUgcGFyZW50IGRpcmVjdG9yeQogLSBpZWVlODAyMTEtZnJlcS1saW1pdDogU2VlIGllZWU4
MDIxMS50eHQKIC0gbWVkaWF0ZWssbXRkLWVlcHJvbTogU3BlY2lmeSBhIE1URCBwYXJ0aXRpb24g
KyBvZmZzZXQgY29udGFpbmluZyBFRVBST00gZGF0YQogCitGb3IgYWxsIG90aGVyIG9wdGlvbmFs
IEV0aGVybmV0IHByb3BlcnRpZXMsIHBsZWFzZSByZWZlciB0bworRG9jdW1lbnRhdGlvbi9kZXZp
Y2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQuCisKIE9wdGlvbmFsIG5vZGVzOgogLSBs
ZWQ6IFByb3BlcnRpZXMgZm9yIGEgY29ubmVjdGVkIExFRAogICBPcHRpb25hbCBwcm9wZXJ0aWVz
OgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC93aXJl
bGVzcy9xY2EsYXRoOWsudHh0IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25l
dC93aXJlbGVzcy9xY2EsYXRoOWsudHh0CmluZGV4IGI3Mzk2YzguLmQwNzU0MmYgMTAwNjQ0Ci0t
LSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvd2lyZWxlc3MvcWNhLGF0
aDlrLnR4dAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3dpcmVs
ZXNzL3FjYSxhdGg5ay50eHQKQEAgLTM0LDkgKzM0LDkgQEAgT3B0aW9uYWwgcHJvcGVydGllczoK
IAkJCWF0aDlrIHdpcmVsZXNzIGNoaXAgKGluIHRoaXMgY2FzZSB0aGUgY2FsaWJyYXRpb24gLwog
CQkJRUVQUk9NIGRhdGEgd2lsbCBiZSBsb2FkZWQgZnJvbSB1c2Vyc3BhY2UgdXNpbmcgdGhlCiAJ
CQlrZXJuZWwgZmlybXdhcmUgbG9hZGVyKS4KLS0gbWFjLWFkZHJlc3M6IFNlZSBldGhlcm5ldC50
eHQgaW4gdGhlIHBhcmVudCBkaXJlY3RvcnkKLS0gbG9jYWwtbWFjLWFkZHJlc3M6IFNlZSBldGhl
cm5ldC50eHQgaW4gdGhlIHBhcmVudCBkaXJlY3RvcnkKIAorRm9yIGFsbCBvdGhlciBvcHRpb25h
bCBFdGhlcm5ldCBwcm9wZXJ0aWVzLCBwbGVhc2UgcmVmZXIgdG8KK0RvY3VtZW50YXRpb24vZGV2
aWNldHJlZS9iaW5kaW5ncy9uZXQvZXRoZXJuZXQudHh0LgogCiBJbiB0aGlzIGV4YW1wbGUsIHRo
ZSBub2RlIGlzIGRlZmluZWQgYXMgY2hpbGQgbm9kZSBvZiB0aGUgUENJIGNvbnRyb2xsZXI6CiAm
cGNpMCB7Ci0tIAoxLjkuMQoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCmxpbnV4LWFybS1rZXJuZWwgbWFpbGluZyBsaXN0CmxpbnV4LWFybS1rZXJuZWxA
bGlzdHMuaW5mcmFkZWFkLm9yZwpodHRwOi8vbGlzdHMuaW5mcmFkZWFkLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2xpbnV4LWFybS1rZXJuZWwK
