Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 748A010C7AE
	for <lists+linux-arm-kernel@lfdr.de>; Thu, 28 Nov 2019 12:03:39 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-ID:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=gkv1cwF5GU8JgpxC0kqnPEnrzzpCnX6NLWdIjjQiVsI=; b=dRIYTU6/nPL52r
	k/hnD7F3d4YulRXeM0bnfg6dWpBI3pS23t+fZHGyu6SqQmTW1Puny5BWA+aF+sGs1ZOHbM5xKt5QD
	lFfgTSSIFMvY5Sphu+ldVDNQU49gOtnz9QdmqIunJJCxypgmn1h7gt9cQO0q39u38gjAwoOieOvza
	AAk+K4rmzIy/vfW4v/phN6JNc9uuuLDXBOcNQUxlqyYljcfRA6ay9/4LSudR8hPPHNp38lk6WE3XL
	kR266qigHVcvYb4Rcn4ETuc3TENUMYXZ4PR6gmyZt3H73Cqyq8nZ4WBGPEtWwehksYLBW1W3Z2Lo1
	CvN0Cc91+EKKAmUOqCbQ==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1iaHaD-0004iD-HD; Thu, 28 Nov 2019 11:03:37 +0000
Received: from fllv0015.ext.ti.com ([198.47.19.141])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iaHX8-0002Ay-31
 for linux-arm-kernel@lists.infradead.org; Thu, 28 Nov 2019 11:00:30 +0000
Received: from fllv0035.itg.ti.com ([10.64.41.0])
 by fllv0015.ext.ti.com (8.15.2/8.15.2) with ESMTP id xASB0K6G117565;
 Thu, 28 Nov 2019 05:00:20 -0600
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ti.com;
 s=ti-com-17Q1; t=1574938820;
 bh=aKh3OKAT5EF32QaQs5rAAL9fJLbM4pX3WwqzFr82+kM=;
 h=From:To:CC:Subject:Date:In-Reply-To:References;
 b=pfouPufCrHjpnaytdwVCLxa0LgjjfbkRh79yLw7lWSbftKEUrWmvw3roAUUh6vJA4
 hCyCpaXjg2p5cYx7mbW3GGkaj64jrm82GJQJvP2B38mV3IbMP0Zfk4qzmgGAm+Ur2D
 cRob+jWLiq96KCDlXFBaPfQj3EifGQLDDeEfSMeI=
Received: from DFLE105.ent.ti.com (dfle105.ent.ti.com [10.64.6.26])
 by fllv0035.itg.ti.com (8.15.2/8.15.2) with ESMTP id xASB0KxZ007147;
 Thu, 28 Nov 2019 05:00:20 -0600
Received: from DFLE103.ent.ti.com (10.64.6.24) by DFLE105.ent.ti.com
 (10.64.6.26) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id 15.1.1847.3; Thu, 28
 Nov 2019 05:00:20 -0600
Received: from lelv0326.itg.ti.com (10.180.67.84) by DFLE103.ent.ti.com
 (10.64.6.24) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id 15.1.1847.3 via
 Frontend Transport; Thu, 28 Nov 2019 05:00:20 -0600
Received: from feketebors.ti.com (ileax41-snat.itg.ti.com [10.172.224.153])
 by lelv0326.itg.ti.com (8.15.2/8.15.2) with ESMTP id xASAxgJO073287;
 Thu, 28 Nov 2019 05:00:17 -0600
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
To: <vkoul@kernel.org>, <robh+dt@kernel.org>, <nm@ti.com>,
 <ssantosh@kernel.org>
Subject: [PATCH v6 10/17] dmaengine: ti: New driver for K3 UDMA - split#2:
 probe/remove, xlate and filter_fn
Date: Thu, 28 Nov 2019 12:59:38 +0200
Message-ID: <20191128105945.13071-11-peter.ujfalusi@ti.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191128105945.13071-1-peter.ujfalusi@ti.com>
References: <20191128105945.13071-1-peter.ujfalusi@ti.com>
MIME-Version: 1.0
X-EXCLAIMER-MD-CONFIG: e1e8a2fd-e40a-4ac6-ac9b-f7e9cc9ee180
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191128_030026_249435_B66D68B7 
X-CRM114-Status: GOOD (  16.42  )
X-Spam-Score: -2.5 (--)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (-2.5 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [198.47.19.141 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 -0.0 DKIMWL_WL_HIGH         DKIMwl.org - Whitelisted High sender
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: devicetree@vger.kernel.org, grygorii.strashko@ti.com, lokeshvutla@ti.com,
 j-keerthy@ti.com, linux-kernel@vger.kernel.org, t-kristo@ti.com,
 tony@atomide.com, dmaengine@vger.kernel.org, dan.j.williams@intel.com,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

U3BsaXQgcGF0Y2ggZm9yIHJldmlldyBjb250YWluaW5nOiBtb2R1bGUgcHJvYmUvcmVtb3ZlIGZ1
bmN0aW9ucywgb2ZfeGxhdGUKYW5kIGZpbHRlcl9mbiBmb3Igc2xhdmUgY2hhbm5lbCByZXF1ZXN0
cy4KCkRNQSBkcml2ZXIgZm9yClRleGFzIEluc3RydW1lbnRzIEszIE5BVlNTIFVuaWZpZWQgRE1B
IOKAkyBQZXJpcGhlcmFsIFJvb3QgQ29tcGxleCAoVURNQS1QKQoKVGhlIFVETUEtUCBpcyBpbnRl
bmRlZCB0byBwZXJmb3JtIHNpbWlsYXIgKGJ1dCBzaWduaWZpY2FudGx5IHVwZ3JhZGVkKSBmdW5j
dGlvbnMKYXMgdGhlIHBhY2tldC1vcmllbnRlZCBETUEgdXNlZCBvbiBwcmV2aW91cyBTb0MgZGV2
aWNlcy4gVGhlIFVETUEtUCBtb2R1bGUKc3VwcG9ydHMgdGhlIHRyYW5zbWlzc2lvbiBhbmQgcmVj
ZXB0aW9uIG9mIHZhcmlvdXMgcGFja2V0IHR5cGVzLiBUaGUgVURNQS1QIGlzCmFyY2hpdGVjdGVk
IHRvIGZhY2lsaXRhdGUgdGhlIHNlZ21lbnRhdGlvbiBhbmQgcmVhc3NlbWJseSBvZiBTb0MgRE1B
IGRhdGEKc3RydWN0dXJlIGNvbXBsaWFudCBwYWNrZXRzIHRvL2Zyb20gc21hbGxlciBkYXRhIGJs
b2NrcyB0aGF0IGFyZSBuYXRpdmVseQpjb21wYXRpYmxlIHdpdGggdGhlIHNwZWNpZmljIHJlcXVp
cmVtZW50cyBvZiBlYWNoIGNvbm5lY3RlZCBwZXJpcGhlcmFsLiBNdWx0aXBsZQpUeCBhbmQgUngg
Y2hhbm5lbHMgYXJlIHByb3ZpZGVkIHdpdGhpbiB0aGUgRE1BIHdoaWNoIGFsbG93IG11bHRpcGxl
IHNlZ21lbnRhdGlvbgpvciByZWFzc2VtYmx5IG9wZXJhdGlvbnMgdG8gYmUgb25nb2luZy4gVGhl
IERNQSBjb250cm9sbGVyIG1haW50YWlucyBzdGF0ZQppbmZvcm1hdGlvbiBmb3IgZWFjaCBvZiB0
aGUgY2hhbm5lbHMgd2hpY2ggYWxsb3dzIHBhY2tldCBzZWdtZW50YXRpb24gYW5kCnJlYXNzZW1i
bHkgb3BlcmF0aW9ucyB0byBiZSB0aW1lIGRpdmlzaW9uIG11bHRpcGxleGVkIGJldHdlZW4gY2hh
bm5lbHMgaW4gb3JkZXIKdG8gc2hhcmUgdGhlIHVuZGVybHlpbmcgRE1BIGhhcmR3YXJlLiBBbiBl
eHRlcm5hbCBETUEgc2NoZWR1bGVyIGlzIHVzZWQgdG8KY29udHJvbCB0aGUgb3JkZXJpbmcgYW5k
IHJhdGUgYXQgd2hpY2ggdGhpcyBtdWx0aXBsZXhpbmcgb2NjdXJzIGZvciBUcmFuc21pdApvcGVy
YXRpb25zLiBUaGUgb3JkZXJpbmcgYW5kIHJhdGUgb2YgUmVjZWl2ZSBvcGVyYXRpb25zIGlzIGlu
ZGlyZWN0bHkgY29udHJvbGxlZApieSB0aGUgb3JkZXIgaW4gd2hpY2ggYmxvY2tzIGFyZSBwdXNo
ZWQgaW50byB0aGUgRE1BIG9uIHRoZSBSeCBQU0ktTCBpbnRlcmZhY2UuCgpUaGUgVURNQS1QIGFs
c28gc3VwcG9ydHMgYWN0aW5nIGFzIGJvdGggYSBVVEMgYW5kIFVETUEtQyBmb3IgaXRzIGludGVy
bmFsCmNoYW5uZWxzLiBDaGFubmVscyBpbiB0aGUgVURNQS1QIGNhbiBiZSBjb25maWd1cmVkIHRv
IGJlIGVpdGhlciBQYWNrZXQtQmFzZWQgb3IKVGhpcmQtUGFydHkgY2hhbm5lbHMgb24gYSBjaGFu
bmVsIGJ5IGNoYW5uZWwgYmFzaXMuCgpUaGUgaW5pdGlhbCBkcml2ZXIgc3VwcG9ydHM6Ci0gTUVN
X1RPX01FTSAoVFIgbW9kZSkKLSBERVZfVE9fTUVNIChQYWNrZXQgLyBUUiBtb2RlKQotIE1FTV9U
T19ERVYgKFBhY2tldCAvIFRSIG1vZGUpCi0gQ3ljbGljIChQYWNrZXQgLyBUUiBtb2RlKQotIE1l
dGFkYXRhIGZvciBkZXNjcmlwdG9ycwoKU2lnbmVkLW9mZi1ieTogUGV0ZXIgVWpmYWx1c2kgPHBl
dGVyLnVqZmFsdXNpQHRpLmNvbT4KLS0tCiBkcml2ZXJzL2RtYS90aS9rMy11ZG1hLmMgfCA1MjEg
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiAxIGZpbGUgY2hhbmdlZCwg
NTIxIGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS90aS9rMy11ZG1hLmMg
Yi9kcml2ZXJzL2RtYS90aS9rMy11ZG1hLmMKaW5kZXggMGY3ZTU2ZjA0YTU2Li5hYmQ1MTI0MmUz
OTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hL3RpL2szLXVkbWEuYworKysgYi9kcml2ZXJzL2Rt
YS90aS9rMy11ZG1hLmMKQEAgLTEwNDcsMyArMTA0Nyw1MjQgQEAgc3RhdGljIGlycXJldHVybl90
IHVkbWFfdWRtYV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICpkYXRhKQogCiAJcmV0dXJuIElS
UV9IQU5ETEVEOwogfQorCitzdGF0aWMgc3RydWN0IHBsYXRmb3JtX2RyaXZlciB1ZG1hX2RyaXZl
cjsKKworc3RhdGljIGJvb2wgdWRtYV9kbWFfZmlsdGVyX2ZuKHN0cnVjdCBkbWFfY2hhbiAqY2hh
biwgdm9pZCAqcGFyYW0pCit7CisJc3RydWN0IHBzaWxfZW5kcG9pbnRfY29uZmlnICplcF9jb25m
aWc7CisJc3RydWN0IHVkbWFfY2hhbiAqdWM7CisJc3RydWN0IHVkbWFfZGV2ICp1ZDsKKwl1MzIg
KmFyZ3M7CisKKwlpZiAoY2hhbi0+ZGV2aWNlLT5kZXYtPmRyaXZlciAhPSAmdWRtYV9kcml2ZXIu
ZHJpdmVyKQorCQlyZXR1cm4gZmFsc2U7CisKKwl1YyA9IHRvX3VkbWFfY2hhbihjaGFuKTsKKwl1
ZCA9IHVjLT51ZDsKKwlhcmdzID0gcGFyYW07CisJdWMtPnJlbW90ZV90aHJlYWRfaWQgPSBhcmdz
WzBdOworCisJaWYgKHVjLT5yZW1vdGVfdGhyZWFkX2lkICYgSzNfUFNJTF9EU1RfVEhSRUFEX0lE
X09GRlNFVCkKKwkJdWMtPmRpciA9IERNQV9NRU1fVE9fREVWOworCWVsc2UKKwkJdWMtPmRpciA9
IERNQV9ERVZfVE9fTUVNOworCisJZXBfY29uZmlnID0gcHNpbF9nZXRfZXBfY29uZmlnKHVjLT5y
ZW1vdGVfdGhyZWFkX2lkKTsKKwlpZiAoSVNfRVJSKGVwX2NvbmZpZykpIHsKKwkJZGV2X2Vycih1
ZC0+ZGV2LCAiTm8gY29uZmlndXJhdGlvbiBmb3IgcHNpLWwgdGhyZWFkIDB4JTA0eFxuIiwKKwkJ
CXVjLT5yZW1vdGVfdGhyZWFkX2lkKTsKKwkJdWMtPmRpciA9IERNQV9NRU1fVE9fTUVNOworCQl1
Yy0+cmVtb3RlX3RocmVhZF9pZCA9IC0xOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJdWMtPnBr
dF9tb2RlID0gZXBfY29uZmlnLT5wa3RfbW9kZTsKKwl1Yy0+Y2hhbm5lbF90cGwgPSBlcF9jb25m
aWctPmNoYW5uZWxfdHBsOworCXVjLT5ub3RkcGt0ID0gZXBfY29uZmlnLT5ub3RkcGt0OworCXVj
LT5lcF90eXBlID0gZXBfY29uZmlnLT5lcF90eXBlOworCisJaWYgKHVjLT5lcF90eXBlICE9IFBT
SUxfRVBfTkFUSVZFKSB7CisJCWNvbnN0IHN0cnVjdCB1ZG1hX21hdGNoX2RhdGEgKm1hdGNoX2Rh
dGEgPSB1ZC0+bWF0Y2hfZGF0YTsKKworCQlpZiAobWF0Y2hfZGF0YS0+ZmxhZ3MgJiBVRE1BX0ZM
QUdfUERNQV9BQ0MzMikKKwkJCXVjLT5lbmFibGVfYWNjMzIgPSBlcF9jb25maWctPnBkbWFfYWNj
MzI7CisJCWlmIChtYXRjaF9kYXRhLT5mbGFncyAmIFVETUFfRkxBR19QRE1BX0JVUlNUKQorCQkJ
dWMtPmVuYWJsZV9idXJzdCA9IGVwX2NvbmZpZy0+cGRtYV9idXJzdDsKKwl9CisKKwl1Yy0+bmVl
ZHNfZXBpYiA9IGVwX2NvbmZpZy0+bmVlZHNfZXBpYjsKKwl1Yy0+cHNkX3NpemUgPSBlcF9jb25m
aWctPnBzZF9zaXplOworCXVjLT5tZXRhZGF0YV9zaXplID0gKHVjLT5uZWVkc19lcGliID8gQ1BQ
STVfSU5GTzBfSERFU0NfRVBJQl9TSVpFIDogMCkgKworCQkJICAgIHVjLT5wc2Rfc2l6ZTsKKwor
CWlmICh1Yy0+cGt0X21vZGUpCisJCXVjLT5oZGVzY19zaXplID0gQUxJR04oc2l6ZW9mKHN0cnVj
dCBjcHBpNV9ob3N0X2Rlc2NfdCkgKworCQkJCSB1Yy0+bWV0YWRhdGFfc2l6ZSwgdWQtPmRlc2Nf
YWxpZ24pOworCisJZGV2X2RiZyh1ZC0+ZGV2LCAiY2hhbiVkOiBSZW1vdGUgdGhyZWFkOiAweCUw
NHggKCVzKVxuIiwgdWMtPmlkLAorCQl1Yy0+cmVtb3RlX3RocmVhZF9pZCwgdWRtYV9nZXRfZGly
X3RleHQodWMtPmRpcikpOworCisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgZG1h
X2NoYW4gKnVkbWFfb2ZfeGxhdGUoc3RydWN0IG9mX3BoYW5kbGVfYXJncyAqZG1hX3NwZWMsCisJ
CQkJICAgICAgc3RydWN0IG9mX2RtYSAqb2ZkbWEpCit7CisJc3RydWN0IHVkbWFfZGV2ICp1ZCA9
IG9mZG1hLT5vZl9kbWFfZGF0YTsKKwlkbWFfY2FwX21hc2tfdCBtYXNrID0gdWQtPmRkZXYuY2Fw
X21hc2s7CisJc3RydWN0IGRtYV9jaGFuICpjaGFuOworCisJaWYgKGRtYV9zcGVjLT5hcmdzX2Nv
dW50ICE9IDEpCisJCXJldHVybiBOVUxMOworCisJY2hhbiA9IF9fZG1hX3JlcXVlc3RfY2hhbm5l
bCgmbWFzaywgdWRtYV9kbWFfZmlsdGVyX2ZuLAorCQkJCSAgICAgJmRtYV9zcGVjLT5hcmdzWzBd
LCBvZmRtYS0+b2Zfbm9kZSk7CisJaWYgKCFjaGFuKSB7CisJCWRldl9lcnIodWQtPmRldiwgImdl
dCBjaGFubmVsIGZhaWwgaW4gJXMuXG4iLCBfX2Z1bmNfXyk7CisJCXJldHVybiBFUlJfUFRSKC1F
SU5WQUwpOworCX0KKworCXJldHVybiBjaGFuOworfQorCitzdGF0aWMgc3RydWN0IHVkbWFfbWF0
Y2hfZGF0YSBhbTY1NF9tYWluX2RhdGEgPSB7CisJLnBzaWxfYmFzZSA9IDB4MTAwMCwKKwkuZW5h
YmxlX21lbWNweV9zdXBwb3J0ID0gdHJ1ZSwKKwkuc3RhdGljdHJfel9tYXNrID0gR0VOTUFTSygx
MSwgMCksCisJLnJjaGFuX29lc19vZmZzZXQgPSAweDIwMDAsCisJLnRwbF9sZXZlbHMgPSAyLAor
CS5sZXZlbF9zdGFydF9pZHggPSB7CisJCVswXSA9IDgsIC8qIE5vcm1hbCBjaGFubmVscyAqLwor
CQlbMV0gPSAwLCAvKiBIaWdoIFRocm91Z2hwdXQgY2hhbm5lbHMgKi8KKwl9LAorfTsKKworc3Rh
dGljIHN0cnVjdCB1ZG1hX21hdGNoX2RhdGEgYW02NTRfbWN1X2RhdGEgPSB7CisJLnBzaWxfYmFz
ZSA9IDB4NjAwMCwKKwkuZW5hYmxlX21lbWNweV9zdXBwb3J0ID0gZmFsc2UsIC8qIE1FTV9UT19N
RU0gaXMgc2xvdyB2aWEgTUNVIFVETUEgKi8KKwkuc3RhdGljdHJfel9tYXNrID0gR0VOTUFTSygx
MSwgMCksCisJLnJjaGFuX29lc19vZmZzZXQgPSAweDIwMDAsCisJLnRwbF9sZXZlbHMgPSAyLAor
CS5sZXZlbF9zdGFydF9pZHggPSB7CisJCVswXSA9IDIsIC8qIE5vcm1hbCBjaGFubmVscyAqLwor
CQlbMV0gPSAwLCAvKiBIaWdoIFRocm91Z2hwdXQgY2hhbm5lbHMgKi8KKwl9LAorfTsKKworc3Rh
dGljIHN0cnVjdCB1ZG1hX21hdGNoX2RhdGEgajcyMWVfbWFpbl9kYXRhID0geworCS5wc2lsX2Jh
c2UgPSAweDEwMDAsCisJLmVuYWJsZV9tZW1jcHlfc3VwcG9ydCA9IHRydWUsCisJLmZsYWdzID0g
VURNQV9GTEFHX1BETUFfQUNDMzIgfCBVRE1BX0ZMQUdfUERNQV9CVVJTVCwKKwkuc3RhdGljdHJf
el9tYXNrID0gR0VOTUFTSygyMywgMCksCisJLnJjaGFuX29lc19vZmZzZXQgPSAweDQwMCwKKwku
dHBsX2xldmVscyA9IDMsCisJLmxldmVsX3N0YXJ0X2lkeCA9IHsKKwkJWzBdID0gMTYsIC8qIE5v
cm1hbCBjaGFubmVscyAqLworCQlbMV0gPSA0LCAvKiBIaWdoIFRocm91Z2hwdXQgY2hhbm5lbHMg
Ki8KKwkJWzJdID0gMCwgLyogVWx0cmEgSGlnaCBUaHJvdWdocHV0IGNoYW5uZWxzICovCisJfSwK
K307CisKK3N0YXRpYyBzdHJ1Y3QgdWRtYV9tYXRjaF9kYXRhIGo3MjFlX21jdV9kYXRhID0gewor
CS5wc2lsX2Jhc2UgPSAweDYwMDAsCisJLmVuYWJsZV9tZW1jcHlfc3VwcG9ydCA9IGZhbHNlLCAv
KiBNRU1fVE9fTUVNIGlzIHNsb3cgdmlhIE1DVSBVRE1BICovCisJLmZsYWdzID0gVURNQV9GTEFH
X1BETUFfQUNDMzIgfCBVRE1BX0ZMQUdfUERNQV9CVVJTVCwKKwkuc3RhdGljdHJfel9tYXNrID0g
R0VOTUFTSygyMywgMCksCisJLnJjaGFuX29lc19vZmZzZXQgPSAweDQwMCwKKwkudHBsX2xldmVs
cyA9IDIsCisJLmxldmVsX3N0YXJ0X2lkeCA9IHsKKwkJWzBdID0gMiwgLyogTm9ybWFsIGNoYW5u
ZWxzICovCisJCVsxXSA9IDAsIC8qIEhpZ2ggVGhyb3VnaHB1dCBjaGFubmVscyAqLworCX0sCit9
OworCitzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCB1ZG1hX29mX21hdGNoW10gPSB7
CisJeworCQkuY29tcGF0aWJsZSA9ICJ0aSxhbTY1NC1uYXZzcy1tYWluLXVkbWFwIiwKKwkJLmRh
dGEgPSAmYW02NTRfbWFpbl9kYXRhLAorCX0sCisJeworCQkuY29tcGF0aWJsZSA9ICJ0aSxhbTY1
NC1uYXZzcy1tY3UtdWRtYXAiLAorCQkuZGF0YSA9ICZhbTY1NF9tY3VfZGF0YSwKKwl9LCB7CisJ
CS5jb21wYXRpYmxlID0gInRpLGo3MjFlLW5hdnNzLW1haW4tdWRtYXAiLAorCQkuZGF0YSA9ICZq
NzIxZV9tYWluX2RhdGEsCisJfSwgeworCQkuY29tcGF0aWJsZSA9ICJ0aSxqNzIxZS1uYXZzcy1t
Y3UtdWRtYXAiLAorCQkuZGF0YSA9ICZqNzIxZV9tY3VfZGF0YSwKKwl9LAorCXsgLyogU2VudGlu
ZWwgKi8gfSwKK307CitNT0RVTEVfREVWSUNFX1RBQkxFKG9mLCB1ZG1hX29mX21hdGNoKTsKKwor
c3RhdGljIGludCB1ZG1hX2dldF9tbXJzKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYsIHN0
cnVjdCB1ZG1hX2RldiAqdWQpCit7CisJc3RydWN0IHJlc291cmNlICpyZXM7CisJaW50IGk7CisK
Kwlmb3IgKGkgPSAwOyBpIDwgTU1SX0xBU1Q7IGkrKykgeworCQlyZXMgPSBwbGF0Zm9ybV9nZXRf
cmVzb3VyY2VfYnluYW1lKHBkZXYsIElPUkVTT1VSQ0VfTUVNLAorCQkJCQkJICAgbW1yX25hbWVz
W2ldKTsKKwkJdWQtPm1tcnNbaV0gPSBkZXZtX2lvcmVtYXBfcmVzb3VyY2UoJnBkZXYtPmRldiwg
cmVzKTsKKwkJaWYgKElTX0VSUih1ZC0+bW1yc1tpXSkpCisJCQlyZXR1cm4gUFRSX0VSUih1ZC0+
bW1yc1tpXSk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgdWRtYV9zZXR1cF9y
ZXNvdXJjZXMoc3RydWN0IHVkbWFfZGV2ICp1ZCkKK3sKKwlzdHJ1Y3QgZGV2aWNlICpkZXYgPSB1
ZC0+ZGV2OworCWludCBjaF9jb3VudCwgcmV0LCBpLCBqOworCXUzMiBjYXAyLCBjYXAzOworCXN0
cnVjdCB0aV9zY2lfcmVzb3VyY2VfZGVzYyAqcm1fZGVzYzsKKwlzdHJ1Y3QgdGlfc2NpX3Jlc291
cmNlICpybV9yZXMsIGlycV9yZXM7CisJc3RydWN0IHVkbWFfdGlzY2lfcm0gKnRpc2NpX3JtID0g
JnVkLT50aXNjaV9ybTsKKwlzdGF0aWMgY29uc3QgY2hhciAqIGNvbnN0IHJhbmdlX25hbWVzW10g
PSB7ICJ0aSxzY2ktcm0tcmFuZ2UtdGNoYW4iLAorCQkJCQkJICAgICJ0aSxzY2ktcm0tcmFuZ2Ut
cmNoYW4iLAorCQkJCQkJICAgICJ0aSxzY2ktcm0tcmFuZ2UtcmZsb3ciIH07CisKKwljYXAyID0g
dWRtYV9yZWFkKHVkLT5tbXJzW01NUl9HQ0ZHXSwgMHgyOCk7CisJY2FwMyA9IHVkbWFfcmVhZCh1
ZC0+bW1yc1tNTVJfR0NGR10sIDB4MmMpOworCisJdWQtPnJmbG93X2NudCA9IGNhcDMgJiAweDNm
ZmY7CisJdWQtPnRjaGFuX2NudCA9IGNhcDIgJiAweDFmZjsKKwl1ZC0+ZWNoYW5fY250ID0gKGNh
cDIgPj4gOSkgJiAweDFmZjsKKwl1ZC0+cmNoYW5fY250ID0gKGNhcDIgPj4gMTgpICYgMHgxZmY7
CisJY2hfY291bnQgID0gdWQtPnRjaGFuX2NudCArIHVkLT5yY2hhbl9jbnQ7CisKKwl1ZC0+dGNo
YW5fbWFwID0gZGV2bV9rbWFsbG9jX2FycmF5KGRldiwgQklUU19UT19MT05HUyh1ZC0+dGNoYW5f
Y250KSwKKwkJCQkJICAgc2l6ZW9mKHVuc2lnbmVkIGxvbmcpLCBHRlBfS0VSTkVMKTsKKwl1ZC0+
dGNoYW5zID0gZGV2bV9rY2FsbG9jKGRldiwgdWQtPnRjaGFuX2NudCwgc2l6ZW9mKCp1ZC0+dGNo
YW5zKSwKKwkJCQkgIEdGUF9LRVJORUwpOworCXVkLT5yY2hhbl9tYXAgPSBkZXZtX2ttYWxsb2Nf
YXJyYXkoZGV2LCBCSVRTX1RPX0xPTkdTKHVkLT5yY2hhbl9jbnQpLAorCQkJCQkgICBzaXplb2Yo
dW5zaWduZWQgbG9uZyksIEdGUF9LRVJORUwpOworCXVkLT5yY2hhbnMgPSBkZXZtX2tjYWxsb2Mo
ZGV2LCB1ZC0+cmNoYW5fY250LCBzaXplb2YoKnVkLT5yY2hhbnMpLAorCQkJCSAgR0ZQX0tFUk5F
TCk7CisJdWQtPnJmbG93X2dwX21hcCA9IGRldm1fa21hbGxvY19hcnJheShkZXYsIEJJVFNfVE9f
TE9OR1ModWQtPnJmbG93X2NudCksCisJCQkJCSAgICAgIHNpemVvZih1bnNpZ25lZCBsb25nKSwK
KwkJCQkJICAgICAgR0ZQX0tFUk5FTCk7CisJdWQtPnJmbG93X2dwX21hcF9hbGxvY2F0ZWQgPSBk
ZXZtX2tjYWxsb2MoZGV2LAorCQkJCQkJICBCSVRTX1RPX0xPTkdTKHVkLT5yZmxvd19jbnQpLAor
CQkJCQkJICBzaXplb2YodW5zaWduZWQgbG9uZyksCisJCQkJCQkgIEdGUF9LRVJORUwpOworCXVk
LT5yZmxvd19pbl91c2UgPSBkZXZtX2tjYWxsb2MoZGV2LCBCSVRTX1RPX0xPTkdTKHVkLT5yZmxv
d19jbnQpLAorCQkJCQlzaXplb2YodW5zaWduZWQgbG9uZyksCisJCQkJCUdGUF9LRVJORUwpOwor
CXVkLT5yZmxvd3MgPSBkZXZtX2tjYWxsb2MoZGV2LCB1ZC0+cmZsb3dfY250LCBzaXplb2YoKnVk
LT5yZmxvd3MpLAorCQkJCSAgR0ZQX0tFUk5FTCk7CisKKwlpZiAoIXVkLT50Y2hhbl9tYXAgfHwg
IXVkLT5yY2hhbl9tYXAgfHwgIXVkLT5yZmxvd19ncF9tYXAgfHwKKwkgICAgIXVkLT5yZmxvd19n
cF9tYXBfYWxsb2NhdGVkIHx8ICF1ZC0+dGNoYW5zIHx8ICF1ZC0+cmNoYW5zIHx8CisJICAgICF1
ZC0+cmZsb3dzIHx8ICF1ZC0+cmZsb3dfaW5fdXNlKQorCQlyZXR1cm4gLUVOT01FTTsKKworCS8q
CisJICogUlggZmxvd3Mgd2l0aCB0aGUgc2FtZSBJZHMgYXMgUlggY2hhbm5lbHMgYXJlIHJlc2Vy
dmVkIHRvIGJlIHVzZWQKKwkgKiBhcyBkZWZhdWx0IGZsb3dzIGlmIHJlbW90ZSBIVyBjYW4ndCBn
ZW5lcmF0ZSBmbG93X2lkcy4gVGhvc2UKKwkgKiBSWCBmbG93cyBjYW4gYmUgcmVxdWVzdGVkIG9u
bHkgZXhwbGljaXRseSBieSBpZC4KKwkgKi8KKwliaXRtYXBfc2V0KHVkLT5yZmxvd19ncF9tYXBf
YWxsb2NhdGVkLCAwLCB1ZC0+cmNoYW5fY250KTsKKworCS8qIGJ5IGRlZmF1bHQgbm8gR1AgcmZs
b3dzIGFyZSBhc3NpZ25lZCB0byBMaW51eCAqLworCWJpdG1hcF9zZXQodWQtPnJmbG93X2dwX21h
cCwgMCwgdWQtPnJmbG93X2NudCk7CisKKwkvKiBHZXQgcmVzb3VyY2UgcmFuZ2VzIGZyb20gdGlz
Y2kgKi8KKwlmb3IgKGkgPSAwOyBpIDwgUk1fUkFOR0VfTEFTVDsgaSsrKQorCQl0aXNjaV9ybS0+
cm1fcmFuZ2VzW2ldID0KKwkJCWRldm1fdGlfc2NpX2dldF9vZl9yZXNvdXJjZSh0aXNjaV9ybS0+
dGlzY2ksIGRldiwKKwkJCQkJCSAgICB0aXNjaV9ybS0+dGlzY2lfZGV2X2lkLAorCQkJCQkJICAg
IChjaGFyICopcmFuZ2VfbmFtZXNbaV0pOworCisJLyogdGNoYW4gcmFuZ2VzICovCisJcm1fcmVz
ID0gdGlzY2lfcm0tPnJtX3Jhbmdlc1tSTV9SQU5HRV9UQ0hBTl07CisJaWYgKElTX0VSUihybV9y
ZXMpKSB7CisJCWJpdG1hcF96ZXJvKHVkLT50Y2hhbl9tYXAsIHVkLT50Y2hhbl9jbnQpOworCX0g
ZWxzZSB7CisJCWJpdG1hcF9maWxsKHVkLT50Y2hhbl9tYXAsIHVkLT50Y2hhbl9jbnQpOworCQlm
b3IgKGkgPSAwOyBpIDwgcm1fcmVzLT5zZXRzOyBpKyspIHsKKwkJCXJtX2Rlc2MgPSAmcm1fcmVz
LT5kZXNjW2ldOworCQkJYml0bWFwX2NsZWFyKHVkLT50Y2hhbl9tYXAsIHJtX2Rlc2MtPnN0YXJ0
LAorCQkJCSAgICAgcm1fZGVzYy0+bnVtKTsKKwkJCWRldl9kYmcoZGV2LCAidGktc2NpLXJlczog
dGNoYW46ICVkOiVkXG4iLAorCQkJCXJtX2Rlc2MtPnN0YXJ0LCBybV9kZXNjLT5udW0pOworCQl9
CisJfQorCWlycV9yZXMuc2V0cyA9IHJtX3Jlcy0+c2V0czsKKworCS8qIHJjaGFuIGFuZCBtYXRj
aGluZyBkZWZhdWx0IGZsb3cgcmFuZ2VzICovCisJcm1fcmVzID0gdGlzY2lfcm0tPnJtX3Jhbmdl
c1tSTV9SQU5HRV9SQ0hBTl07CisJaWYgKElTX0VSUihybV9yZXMpKSB7CisJCWJpdG1hcF96ZXJv
KHVkLT5yY2hhbl9tYXAsIHVkLT5yY2hhbl9jbnQpOworCX0gZWxzZSB7CisJCWJpdG1hcF9maWxs
KHVkLT5yY2hhbl9tYXAsIHVkLT5yY2hhbl9jbnQpOworCQlmb3IgKGkgPSAwOyBpIDwgcm1fcmVz
LT5zZXRzOyBpKyspIHsKKwkJCXJtX2Rlc2MgPSAmcm1fcmVzLT5kZXNjW2ldOworCQkJYml0bWFw
X2NsZWFyKHVkLT5yY2hhbl9tYXAsIHJtX2Rlc2MtPnN0YXJ0LAorCQkJCSAgICAgcm1fZGVzYy0+
bnVtKTsKKwkJCWRldl9kYmcoZGV2LCAidGktc2NpLXJlczogcmNoYW46ICVkOiVkXG4iLAorCQkJ
CXJtX2Rlc2MtPnN0YXJ0LCBybV9kZXNjLT5udW0pOworCQl9CisJfQorCisJaXJxX3Jlcy5zZXRz
ICs9IHJtX3Jlcy0+c2V0czsKKwlpcnFfcmVzLmRlc2MgPSBrY2FsbG9jKGlycV9yZXMuc2V0cywg
c2l6ZW9mKCppcnFfcmVzLmRlc2MpLCBHRlBfS0VSTkVMKTsKKwlybV9yZXMgPSB0aXNjaV9ybS0+
cm1fcmFuZ2VzW1JNX1JBTkdFX1RDSEFOXTsKKwlmb3IgKGkgPSAwOyBpIDwgcm1fcmVzLT5zZXRz
OyBpKyspIHsKKwkJaXJxX3Jlcy5kZXNjW2ldLnN0YXJ0ID0gcm1fcmVzLT5kZXNjW2ldLnN0YXJ0
OworCQlpcnFfcmVzLmRlc2NbaV0ubnVtID0gcm1fcmVzLT5kZXNjW2ldLm51bTsKKwl9CisJcm1f
cmVzID0gdGlzY2lfcm0tPnJtX3Jhbmdlc1tSTV9SQU5HRV9SQ0hBTl07CisJZm9yIChqID0gMDsg
aiA8IHJtX3Jlcy0+c2V0czsgaisrLCBpKyspIHsKKwkJaXJxX3Jlcy5kZXNjW2ldLnN0YXJ0ID0g
cm1fcmVzLT5kZXNjW2pdLnN0YXJ0ICsKKwkJCQkJdWQtPm1hdGNoX2RhdGEtPnJjaGFuX29lc19v
ZmZzZXQ7CisJCWlycV9yZXMuZGVzY1tpXS5udW0gPSBybV9yZXMtPmRlc2Nbal0ubnVtOworCX0K
KwlyZXQgPSB0aV9zY2lfaW50YV9tc2lfZG9tYWluX2FsbG9jX2lycXModWQtPmRldiwgJmlycV9y
ZXMpOworCWtmcmVlKGlycV9yZXMuZGVzYyk7CisJaWYgKHJldCkgeworCQlkZXZfZXJyKHVkLT5k
ZXYsICJGYWlsZWQgdG8gYWxsb2NhdGUgTVNJIGludGVycnVwdHNcbiIpOworCQlyZXR1cm4gcmV0
OworCX0KKworCS8qIEdQIHJmbG93IHJhbmdlcyAqLworCXJtX3JlcyA9IHRpc2NpX3JtLT5ybV9y
YW5nZXNbUk1fUkFOR0VfUkZMT1ddOworCWlmIChJU19FUlIocm1fcmVzKSkgeworCQkvKiBhbGwg
Z3AgZmxvd3MgYXJlIGFzc2lnbmVkIGV4Y2x1c2l2ZWx5IHRvIExpbnV4ICovCisJCWJpdG1hcF9j
bGVhcih1ZC0+cmZsb3dfZ3BfbWFwLCB1ZC0+cmNoYW5fY250LAorCQkJICAgICB1ZC0+cmZsb3df
Y250IC0gdWQtPnJjaGFuX2NudCk7CisJfSBlbHNlIHsKKwkJZm9yIChpID0gMDsgaSA8IHJtX3Jl
cy0+c2V0czsgaSsrKSB7CisJCQlybV9kZXNjID0gJnJtX3Jlcy0+ZGVzY1tpXTsKKwkJCWJpdG1h
cF9jbGVhcih1ZC0+cmZsb3dfZ3BfbWFwLCBybV9kZXNjLT5zdGFydCwKKwkJCQkgICAgIHJtX2Rl
c2MtPm51bSk7CisJCQlkZXZfZGJnKGRldiwgInRpLXNjaS1yZXM6IHJmbG93OiAlZDolZFxuIiwK
KwkJCQlybV9kZXNjLT5zdGFydCwgcm1fZGVzYy0+bnVtKTsKKwkJfQorCX0KKworCWNoX2NvdW50
IC09IGJpdG1hcF93ZWlnaHQodWQtPnRjaGFuX21hcCwgdWQtPnRjaGFuX2NudCk7CisJY2hfY291
bnQgLT0gYml0bWFwX3dlaWdodCh1ZC0+cmNoYW5fbWFwLCB1ZC0+cmNoYW5fY250KTsKKwlpZiAo
IWNoX2NvdW50KQorCQlyZXR1cm4gLUVOT0RFVjsKKworCXVkLT5jaGFubmVscyA9IGRldm1fa2Nh
bGxvYyhkZXYsIGNoX2NvdW50LCBzaXplb2YoKnVkLT5jaGFubmVscyksCisJCQkJICAgIEdGUF9L
RVJORUwpOworCWlmICghdWQtPmNoYW5uZWxzKQorCQlyZXR1cm4gLUVOT01FTTsKKworCWRldl9p
bmZvKGRldiwgIkNoYW5uZWxzOiAlZCAodGNoYW46ICV1LCByY2hhbjogJXUsIGdwLXJmbG93OiAl
dSlcbiIsCisJCSBjaF9jb3VudCwKKwkJIHVkLT50Y2hhbl9jbnQgLSBiaXRtYXBfd2VpZ2h0KHVk
LT50Y2hhbl9tYXAsIHVkLT50Y2hhbl9jbnQpLAorCQkgdWQtPnJjaGFuX2NudCAtIGJpdG1hcF93
ZWlnaHQodWQtPnJjaGFuX21hcCwgdWQtPnJjaGFuX2NudCksCisJCSB1ZC0+cmZsb3dfY250IC0g
Yml0bWFwX3dlaWdodCh1ZC0+cmZsb3dfZ3BfbWFwLAorCQkJCQkgICAgICAgdWQtPnJmbG93X2Nu
dCkpOworCisJcmV0dXJuIGNoX2NvdW50OworfQorCisjZGVmaW5lIFRJX1VETUFDX0JVU1dJRFRI
UwkoQklUKERNQV9TTEFWRV9CVVNXSURUSF8xX0JZVEUpIHwgXAorCQkJCSBCSVQoRE1BX1NMQVZF
X0JVU1dJRFRIXzJfQllURVMpIHwgXAorCQkJCSBCSVQoRE1BX1NMQVZFX0JVU1dJRFRIXzNfQllU
RVMpIHwgXAorCQkJCSBCSVQoRE1BX1NMQVZFX0JVU1dJRFRIXzRfQllURVMpIHwgXAorCQkJCSBC
SVQoRE1BX1NMQVZFX0JVU1dJRFRIXzhfQllURVMpKQorCitzdGF0aWMgaW50IHVkbWFfcHJvYmUo
c3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlzdHJ1Y3QgZGV2aWNlX25vZGUgKm5h
dnNzX25vZGUgPSBwZGV2LT5kZXYucGFyZW50LT5vZl9ub2RlOworCXN0cnVjdCBkZXZpY2UgKmRl
diA9ICZwZGV2LT5kZXY7CisJc3RydWN0IHVkbWFfZGV2ICp1ZDsKKwljb25zdCBzdHJ1Y3Qgb2Zf
ZGV2aWNlX2lkICptYXRjaDsKKwlpbnQgaSwgcmV0OworCWludCBjaF9jb3VudDsKKworCXJldCA9
IGRtYV9jb2VyY2VfbWFza19hbmRfY29oZXJlbnQoZGV2LCBETUFfQklUX01BU0soNDgpKTsKKwlp
ZiAocmV0KQorCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byBzZXQgZG1hIG1hc2sgc3R1ZmZcbiIp
OworCisJdWQgPSBkZXZtX2t6YWxsb2MoZGV2LCBzaXplb2YoKnVkKSwgR0ZQX0tFUk5FTCk7CisJ
aWYgKCF1ZCkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlyZXQgPSB1ZG1hX2dldF9tbXJzKHBkZXYs
IHVkKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJdWQtPnRpc2NpX3JtLnRpc2NpID0g
dGlfc2NpX2dldF9ieV9waGFuZGxlKGRldi0+b2Zfbm9kZSwgInRpLHNjaSIpOworCWlmIChJU19F
UlIodWQtPnRpc2NpX3JtLnRpc2NpKSkKKwkJcmV0dXJuIFBUUl9FUlIodWQtPnRpc2NpX3JtLnRp
c2NpKTsKKworCXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyKGRldi0+b2Zfbm9kZSwgInRpLHNj
aS1kZXYtaWQiLAorCQkJCSAgICZ1ZC0+dGlzY2lfcm0udGlzY2lfZGV2X2lkKTsKKwlpZiAocmV0
KSB7CisJCWRldl9lcnIoZGV2LCAidGksc2NpLWRldi1pZCByZWFkIGZhaWx1cmUgJWRcbiIsIHJl
dCk7CisJCXJldHVybiByZXQ7CisJfQorCXBkZXYtPmlkID0gdWQtPnRpc2NpX3JtLnRpc2NpX2Rl
dl9pZDsKKworCXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyKG5hdnNzX25vZGUsICJ0aSxzY2kt
ZGV2LWlkIiwKKwkJCQkgICAmdWQtPnRpc2NpX3JtLnRpc2NpX25hdnNzX2Rldl9pZCk7CisJaWYg
KHJldCkgeworCQlkZXZfZXJyKGRldiwgIk5BVlNTIHRpLHNjaS1kZXYtaWQgcmVhZCBmYWlsdXJl
ICVkXG4iLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKworCXVkLT50aXNjaV9ybS50aXNjaV91
ZG1hcF9vcHMgPSAmdWQtPnRpc2NpX3JtLnRpc2NpLT5vcHMucm1fdWRtYXBfb3BzOworCXVkLT50
aXNjaV9ybS50aXNjaV9wc2lsX29wcyA9ICZ1ZC0+dGlzY2lfcm0udGlzY2ktPm9wcy5ybV9wc2ls
X29wczsKKworCXVkLT5yaW5nYWNjID0gb2ZfazNfcmluZ2FjY19nZXRfYnlfcGhhbmRsZShkZXYt
Pm9mX25vZGUsICJ0aSxyaW5nYWNjIik7CisJaWYgKElTX0VSUih1ZC0+cmluZ2FjYykpCisJCXJl
dHVybiBQVFJfRVJSKHVkLT5yaW5nYWNjKTsKKworCWRldi0+bXNpX2RvbWFpbiA9IG9mX21zaV9n
ZXRfZG9tYWluKGRldiwgZGV2LT5vZl9ub2RlLAorCQkJCQkgICAgRE9NQUlOX0JVU19USV9TQ0lf
SU5UQV9NU0kpOworCWlmICghZGV2LT5tc2lfZG9tYWluKSB7CisJCWRldl9lcnIoZGV2LCAiRmFp
bGVkIHRvIGdldCBNU0kgZG9tYWluXG4iKTsKKwkJcmV0dXJuIC1FUFJPQkVfREVGRVI7CisJfQor
CisJbWF0Y2ggPSBvZl9tYXRjaF9ub2RlKHVkbWFfb2ZfbWF0Y2gsIGRldi0+b2Zfbm9kZSk7CisJ
aWYgKCFtYXRjaCkgeworCQlkZXZfZXJyKGRldiwgIk5vIGNvbXBhdGlibGUgbWF0Y2ggZm91bmRc
biIpOworCQlyZXR1cm4gLUVOT0RFVjsKKwl9CisJdWQtPm1hdGNoX2RhdGEgPSBtYXRjaC0+ZGF0
YTsKKworCWRtYV9jYXBfc2V0KERNQV9TTEFWRSwgdWQtPmRkZXYuY2FwX21hc2spOworCWRtYV9j
YXBfc2V0KERNQV9DWUNMSUMsIHVkLT5kZGV2LmNhcF9tYXNrKTsKKworCXVkLT5kZGV2LmRldmlj
ZV9hbGxvY19jaGFuX3Jlc291cmNlcyA9IHVkbWFfYWxsb2NfY2hhbl9yZXNvdXJjZXM7CisJdWQt
PmRkZXYuZGV2aWNlX2NvbmZpZyA9IHVkbWFfc2xhdmVfY29uZmlnOworCXVkLT5kZGV2LmRldmlj
ZV9wcmVwX3NsYXZlX3NnID0gdWRtYV9wcmVwX3NsYXZlX3NnOworCXVkLT5kZGV2LmRldmljZV9w
cmVwX2RtYV9jeWNsaWMgPSB1ZG1hX3ByZXBfZG1hX2N5Y2xpYzsKKwl1ZC0+ZGRldi5kZXZpY2Vf
aXNzdWVfcGVuZGluZyA9IHVkbWFfaXNzdWVfcGVuZGluZzsKKwl1ZC0+ZGRldi5kZXZpY2VfdHhf
c3RhdHVzID0gdWRtYV90eF9zdGF0dXM7CisJdWQtPmRkZXYuZGV2aWNlX3BhdXNlID0gdWRtYV9w
YXVzZTsKKwl1ZC0+ZGRldi5kZXZpY2VfcmVzdW1lID0gdWRtYV9yZXN1bWU7CisJdWQtPmRkZXYu
ZGV2aWNlX3Rlcm1pbmF0ZV9hbGwgPSB1ZG1hX3Rlcm1pbmF0ZV9hbGw7CisJdWQtPmRkZXYuZGV2
aWNlX3N5bmNocm9uaXplID0gdWRtYV9zeW5jaHJvbml6ZTsKKworCXVkLT5kZGV2LmRldmljZV9m
cmVlX2NoYW5fcmVzb3VyY2VzID0gdWRtYV9mcmVlX2NoYW5fcmVzb3VyY2VzOworCXVkLT5kZGV2
LnNyY19hZGRyX3dpZHRocyA9IFRJX1VETUFDX0JVU1dJRFRIUzsKKwl1ZC0+ZGRldi5kc3RfYWRk
cl93aWR0aHMgPSBUSV9VRE1BQ19CVVNXSURUSFM7CisJdWQtPmRkZXYuZGlyZWN0aW9ucyA9IEJJ
VChETUFfREVWX1RPX01FTSkgfCBCSVQoRE1BX01FTV9UT19ERVYpOworCXVkLT5kZGV2LnJlc2lk
dWVfZ3JhbnVsYXJpdHkgPSBETUFfUkVTSURVRV9HUkFOVUxBUklUWV9CVVJTVDsKKwl1ZC0+ZGRl
di5jb3B5X2FsaWduID0gRE1BRU5HSU5FX0FMSUdOXzhfQllURVM7CisJdWQtPmRkZXYuZGVzY19t
ZXRhZGF0YV9tb2RlcyA9IERFU0NfTUVUQURBVEFfQ0xJRU5UIHwKKwkJCQkgICAgICAgREVTQ19N
RVRBREFUQV9FTkdJTkU7CisJaWYgKHVkLT5tYXRjaF9kYXRhLT5lbmFibGVfbWVtY3B5X3N1cHBv
cnQpIHsKKwkJZG1hX2NhcF9zZXQoRE1BX01FTUNQWSwgdWQtPmRkZXYuY2FwX21hc2spOworCQl1
ZC0+ZGRldi5kZXZpY2VfcHJlcF9kbWFfbWVtY3B5ID0gdWRtYV9wcmVwX2RtYV9tZW1jcHk7CisJ
CXVkLT5kZGV2LmRpcmVjdGlvbnMgfD0gQklUKERNQV9NRU1fVE9fTUVNKTsKKwl9CisKKwl1ZC0+
ZGRldi5kZXYgPSBkZXY7CisJdWQtPmRldiA9IGRldjsKKwl1ZC0+cHNpbF9iYXNlID0gdWQtPm1h
dGNoX2RhdGEtPnBzaWxfYmFzZTsKKworCUlOSVRfTElTVF9IRUFEKCZ1ZC0+ZGRldi5jaGFubmVs
cyk7CisJSU5JVF9MSVNUX0hFQUQoJnVkLT5kZXNjX3RvX3B1cmdlKTsKKworCWNoX2NvdW50ID0g
dWRtYV9zZXR1cF9yZXNvdXJjZXModWQpOworCWlmIChjaF9jb3VudCA8PSAwKQorCQlyZXR1cm4g
Y2hfY291bnQ7CisKKwlzcGluX2xvY2tfaW5pdCgmdWQtPmxvY2spOworCUlOSVRfV09SSygmdWQt
PnB1cmdlX3dvcmssIHVkbWFfcHVyZ2VfZGVzY193b3JrKTsKKworCXVkLT5kZXNjX2FsaWduID0g
NjQ7CisJaWYgKHVkLT5kZXNjX2FsaWduIDwgZG1hX2dldF9jYWNoZV9hbGlnbm1lbnQoKSkKKwkJ
dWQtPmRlc2NfYWxpZ24gPSBkbWFfZ2V0X2NhY2hlX2FsaWdubWVudCgpOworCisJZm9yIChpID0g
MDsgaSA8IHVkLT50Y2hhbl9jbnQ7IGkrKykgeworCQlzdHJ1Y3QgdWRtYV90Y2hhbiAqdGNoYW4g
PSAmdWQtPnRjaGFuc1tpXTsKKworCQl0Y2hhbi0+aWQgPSBpOworCQl0Y2hhbi0+cmVnX3J0ID0g
dWQtPm1tcnNbTU1SX1RDSEFOUlRdICsgaSAqIDB4MTAwMDsKKwl9CisKKwlmb3IgKGkgPSAwOyBp
IDwgdWQtPnJjaGFuX2NudDsgaSsrKSB7CisJCXN0cnVjdCB1ZG1hX3JjaGFuICpyY2hhbiA9ICZ1
ZC0+cmNoYW5zW2ldOworCisJCXJjaGFuLT5pZCA9IGk7CisJCXJjaGFuLT5yZWdfcnQgPSB1ZC0+
bW1yc1tNTVJfUkNIQU5SVF0gKyBpICogMHgxMDAwOworCX0KKworCWZvciAoaSA9IDA7IGkgPCB1
ZC0+cmZsb3dfY250OyBpKyspIHsKKwkJc3RydWN0IHVkbWFfcmZsb3cgKnJmbG93ID0gJnVkLT5y
Zmxvd3NbaV07CisKKwkJcmZsb3ctPmlkID0gaTsKKwl9CisKKwlmb3IgKGkgPSAwOyBpIDwgY2hf
Y291bnQ7IGkrKykgeworCQlzdHJ1Y3QgdWRtYV9jaGFuICp1YyA9ICZ1ZC0+Y2hhbm5lbHNbaV07
CisKKwkJdWMtPnVkID0gdWQ7CisJCXVjLT52Yy5kZXNjX2ZyZWUgPSB1ZG1hX2Rlc2NfZnJlZTsK
KwkJdWMtPmlkID0gaTsKKwkJdWMtPnJlbW90ZV90aHJlYWRfaWQgPSAtMTsKKwkJdWMtPnRjaGFu
ID0gTlVMTDsKKwkJdWMtPnJjaGFuID0gTlVMTDsKKwkJdWMtPmRpciA9IERNQV9NRU1fVE9fTUVN
OworCQl1Yy0+bmFtZSA9IGRldm1fa2FzcHJpbnRmKGRldiwgR0ZQX0tFUk5FTCwgIiVzIGNoYW4l
ZCIsCisJCQkJCSAgZGV2X25hbWUoZGV2KSwgaSk7CisKKwkJdmNoYW5faW5pdCgmdWMtPnZjLCAm
dWQtPmRkZXYpOworCQkvKiBVc2UgY3VzdG9tIHZjaGFuIGNvbXBsZXRpb24gaGFuZGxpbmcgKi8K
KwkJdGFza2xldF9pbml0KCZ1Yy0+dmMudGFzaywgdWRtYV92Y2hhbl9jb21wbGV0ZSwKKwkJCSAg
ICAgKHVuc2lnbmVkIGxvbmcpJnVjLT52Yyk7CisJCWluaXRfY29tcGxldGlvbigmdWMtPnRlYXJk
b3duX2NvbXBsZXRlZCk7CisJfQorCisJcmV0ID0gZG1hX2FzeW5jX2RldmljZV9yZWdpc3Rlcigm
dWQtPmRkZXYpOworCWlmIChyZXQpIHsKKwkJZGV2X2VycihkZXYsICJmYWlsZWQgdG8gcmVnaXN0
ZXIgc2xhdmUgRE1BIGVuZ2luZTogJWRcbiIsIHJldCk7CisJCXJldHVybiByZXQ7CisJfQorCisJ
cGxhdGZvcm1fc2V0X2RydmRhdGEocGRldiwgdWQpOworCisJcmV0ID0gb2ZfZG1hX2NvbnRyb2xs
ZXJfcmVnaXN0ZXIoZGV2LT5vZl9ub2RlLCB1ZG1hX29mX3hsYXRlLCB1ZCk7CisJaWYgKHJldCkg
eworCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byByZWdpc3RlciBvZl9kbWEgY29udHJvbGxlclxu
Iik7CisJCWRtYV9hc3luY19kZXZpY2VfdW5yZWdpc3RlcigmdWQtPmRkZXYpOworCX0KKworCXJl
dHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgdWRtYV9yZW1vdmUoc3RydWN0IHBsYXRmb3JtX2Rl
dmljZSAqcGRldikKK3sKKwlzdHJ1Y3QgdWRtYV9kZXYgKnVkID0gcGxhdGZvcm1fZ2V0X2RydmRh
dGEocGRldik7CisJc3RydWN0IHVkbWFfY2hhbiAqdWM7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5
KHVjLCAmdWQtPmRkZXYuY2hhbm5lbHMsIHZjLmNoYW4uZGV2aWNlX25vZGUpCisJCXRhc2tsZXRf
a2lsbCgmdWMtPnZjLnRhc2spOworCisJb2ZfZG1hX2NvbnRyb2xsZXJfZnJlZShwZGV2LT5kZXYu
b2Zfbm9kZSk7CisJZG1hX2FzeW5jX2RldmljZV91bnJlZ2lzdGVyKCZ1ZC0+ZGRldik7CisKKwkv
KiBNYWtlIHN1cmUgdGhhdCB3ZSBkaWQgcHJvcGVyIGNsZWFudXAgKi8KKwljYW5jZWxfd29ya19z
eW5jKCZ1ZC0+cHVyZ2Vfd29yayk7CisJdWRtYV9wdXJnZV9kZXNjX3dvcmsoJnVkLT5wdXJnZV93
b3JrKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgc3RydWN0IHBsYXRmb3JtX2RyaXZlciB1
ZG1hX2RyaXZlciA9IHsKKwkuZHJpdmVyID0geworCQkubmFtZQk9ICJ0aS11ZG1hIiwKKwkJLm9m
X21hdGNoX3RhYmxlID0gdWRtYV9vZl9tYXRjaCwKKwl9LAorCS5wcm9iZQkJPSB1ZG1hX3Byb2Jl
LAorCS5yZW1vdmUJCT0gdWRtYV9yZW1vdmUsCit9OworCittb2R1bGVfcGxhdGZvcm1fZHJpdmVy
KHVkbWFfZHJpdmVyKTsKKworTU9EVUxFX0FMSUFTKCJwbGF0Zm9ybTp0aS11ZG1hIik7CitNT0RV
TEVfREVTQ1JJUFRJT04oIlRJIEszIERNQSBkcml2ZXIgZm9yIENQUEkgNS4wIGNvbXBsaWFudCBk
ZXZpY2VzIik7CitNT0RVTEVfQVVUSE9SKCJQZXRlciBVamZhbHVzaSA8cGV0ZXIudWpmYWx1c2lA
dGkuY29tPiIpOworTU9EVUxFX0xJQ0VOU0UoIkdQTCB2MiIpOwotLSAKUGV0ZXIKClRleGFzIElu
c3RydW1lbnRzIEZpbmxhbmQgT3ksIFBvcmtrYWxhbmthdHUgMjIsIDAwMTgwIEhlbHNpbmtpLgpZ
LXR1bm51cy9CdXNpbmVzcyBJRDogMDYxNTUyMS00LiBLb3RpcGFpa2thL0RvbWljaWxlOiBIZWxz
aW5raQoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmxp
bnV4LWFybS1rZXJuZWwgbWFpbGluZyBsaXN0CmxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFk
ZWFkLm9yZwpodHRwOi8vbGlzdHMuaW5mcmFkZWFkLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4
LWFybS1rZXJuZWwK
