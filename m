Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 963D517D4DC
	for <lists+linux-arm-kernel@lfdr.de>; Sun,  8 Mar 2020 17:36:04 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-Id:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=qy7ML+ti1RrnyukiR5a++oxLN++c8+soGuGhe8Vr6Fo=; b=fvikCKl4zNNYr5
	Rwx/B58HlwXsNZKXqsqy4YYj03aFprrIsOdVoXlLEBZCKIL3hEIUxCp5+l2ICG/Vo8qzh8HXB6Yeh
	zqpwgbI/v3NBuqyDf/Gvdcoz/mQFn1lfLBGOtPvHor+FA6O7m4I4GkabAU/d7EwuecRm8wyJRU2SW
	jbpdcWcmUKWX86/2yjrNLjcWMUyD7B/WZaIEHnHTcY91r094m4N5nNGX69ZzTnJxkWTkeI7XnGKRT
	2tlxNwqPVhS9AweetvmrTHualheNGcxFKgRvSZPFWEDl1H+/0uI1Tdu9hKniX0I1SD+SgHs6Q1y4t
	hSj8Gv6WE/TzFdqr/O4w==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jAyuA-0003Ng-FQ; Sun, 08 Mar 2020 16:35:54 +0000
Received: from mx2.suse.de ([195.135.220.15])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jAyrI-0000f5-5m
 for linux-arm-kernel@lists.infradead.org; Sun, 08 Mar 2020 16:33:01 +0000
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id D376DB1ED;
 Sun,  8 Mar 2020 16:32:49 +0000 (UTC)
From: =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>
To: linux-arm-kernel@lists.infradead.org
Subject: [RFC 08/11] tty: serial: sunplus: Implement full UART driver
Date: Sun,  8 Mar 2020 17:32:26 +0100
Message-Id: <20200308163230.4002-9-afaerber@suse.de>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20200308163230.4002-1-afaerber@suse.de>
References: <20200308163230.4002-1-afaerber@suse.de>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200308_093256_595028_221E71AE 
X-CRM114-Status: GOOD (  18.60  )
X-Spam-Score: -2.3 (--)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-2.3 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [195.135.220.15 listed in list.dnswl.org]
 -0.0 RCVD_IN_MSPIKE_H3      RBL: Good reputation (+3)
 [195.135.220.15 listed in wl.mailspike.net]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 -0.0 RCVD_IN_MSPIKE_WL      Mailspike good senders
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: =?UTF-8?q?Wells=20Lu=20=E5=91=82=E8=8A=B3=E9=A8=B0?=
 <wells.lu@sunplus.com>, Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Dvorkin Dmitry <dvorkin@tibbo.com>, linux-kernel@vger.kernel.org,
 linux-serial@vger.kernel.org, Jiri Slaby <jslaby@suse.com>,
 =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

U2lnbmVkLW9mZi1ieTogQW5kcmVhcyBGw6RyYmVyIDxhZmFlcmJlckBzdXNlLmRlPgotLS0KIGRy
aXZlcnMvdHR5L3NlcmlhbC9LY29uZmlnICAgICAgICB8ICAgNCArLQogZHJpdmVycy90dHkvc2Vy
aWFsL3N1bnBsdXMtdWFydC5jIHwgNjgwICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrCiBpbmNsdWRlL3VhcGkvbGludXgvc2VyaWFsX2NvcmUuaCAgfCAgIDMgKwogMyBmaWxl
cyBjaGFuZ2VkLCA2ODUgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9zZXJpYWwvS2NvbmZpZyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9LY29uZmln
CmluZGV4IGFjNmRjZTc1YzJmMy4uYTE3ODUwMGE2YmI1IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0
eS9zZXJpYWwvS2NvbmZpZworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvS2NvbmZpZwpAQCAtMTU2
Myw3ICsxNTYzLDcgQEAgY29uZmlnIFNFUklBTF9NSUxCRUFVVF9VU0lPX0NPTlNPTEUKIAkgIHNp
bmdsZSB1c2VyIG1vZGUpLgogCiBjb25maWcgU0VSSUFMX1BMVVMxCi0JYm9vbCAiU3VucGx1cyBQ
bHVzMSBzZXJpYWwgcG9ydCBzdXBwb3J0IgorCXRyaXN0YXRlICJTdW5wbHVzIFBsdXMxIHNlcmlh
bCBwb3J0IHN1cHBvcnQiCiAJZGVwZW5kcyBvbiBBUkNIX1NVTlBMVVMgfHwgQ09NUElMRV9URVNU
CiAJc2VsZWN0IFNFUklBTF9DT1JFCiAJaGVscApAQCAtMTU3OSw3ICsxNTc5LDcgQEAgY29uZmln
IFNFUklBTF9QTFVTMV9DT05TT0xFCiAJZGVmYXVsdCB5CiAJaGVscAogCSAgU2F5ICdZJyBoZXJl
IGlmIHlvdSB3aXNoIHRvIHVzZSBTdW5wbHVzIFNQNzAyMSBVQVJUCi0JICBhcyB0aGUgc3lzdGVt
IGNvbnNvbGUuIE9ubHkgZWFybHljb24gaXMgaW1wbGVtZW50ZWQgY3VycmVudGx5LgorCSAgYXMg
dGhlIHN5c3RlbSBjb25zb2xlLgogCiBlbmRtZW51CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5
L3NlcmlhbC9zdW5wbHVzLXVhcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5wbHVzLXVhcnQu
YwppbmRleCA5NTlkZmFiNWUwN2IuLjliOTQ0MmFjZGU5YSAxMDA2NDQKLS0tIGEvZHJpdmVycy90
dHkvc2VyaWFsL3N1bnBsdXMtdWFydC5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5wbHVz
LXVhcnQuYwpAQCAtNCw2ICs0LDcgQEAKICAqLwogCiAjaW5jbHVkZSA8bGludXgvYml0b3BzLmg+
CisjaW5jbHVkZSA8bGludXgvY2xrLmg+CiAjaW5jbHVkZSA8bGludXgvY29uc29sZS5oPgogI2lu
Y2x1ZGUgPGxpbnV4L2lvLmg+CiAjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CkBAIC0xMSwxMSAr
MTIsNzEgQEAKICNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kZXZpY2UuaD4KICNpbmNsdWRlIDxs
aW51eC9zZXJpYWwuaD4KICNpbmNsdWRlIDxsaW51eC9zZXJpYWxfY29yZS5oPgorI2luY2x1ZGUg
PGxpbnV4L3R0eS5oPgorI2luY2x1ZGUgPGxpbnV4L3R0eV9mbGlwLmg+CisKKyNkZWZpbmUgUExV
UzFfVUFSVF9QT1JUX05VTSA1CisjZGVmaW5lIFBMVVMxX1VBUlRfREVWX05BTUUgInR0eVNQIgog
CiAjZGVmaW5lIFJFR19EQVRBCQkweDAwCiAjZGVmaW5lIFJFR19MU1IJCQkweDA0CisjZGVmaW5l
IFJFR19NU1IJCQkweDA4CisjZGVmaW5lIFJFR19MQ1IJCQkweDBjCisjZGVmaW5lIFJFR19NQ1IJ
CQkweDEwCisjZGVmaW5lIFJFR19ESVZfTAkJMHgxNAorI2RlZmluZSBSRUdfRElWX0gJCTB4MTgK
KyNkZWZpbmUgUkVHX0lTQwkJCTB4MWMKKyNkZWZpbmUgUkVHX1RYX1JFU0lEVUUJCTB4MjAKKyNk
ZWZpbmUgUkVHX1JYX1JFU0lEVUUJCTB4MjQKKyNkZWZpbmUgUkVHX1JYX1RIUkVTSE9MRAkweDI4
CisjZGVmaW5lIFJFR19DTEtfU1JDCQkweDJjCiAKICNkZWZpbmUgUExVUzFfVUFSVF9MU1JfVFgJ
QklUKDApCisjZGVmaW5lIFBMVVMxX1VBUlRfTFNSX1JYCUJJVCgxKQorI2RlZmluZSBQTFVTMV9V
QVJUX0xTUl9QRQlCSVQoMikKKyNkZWZpbmUgUExVUzFfVUFSVF9MU1JfT0UJQklUKDMpCisjZGVm
aW5lIFBMVVMxX1VBUlRfTFNSX0ZFCUJJVCg0KQorI2RlZmluZSBQTFVTMV9VQVJUX0xTUl9CQwlC
SVQoNSkKKyNkZWZpbmUgUExVUzFfVUFSVF9MU1JfVFhFCUJJVCg2KQorCisjZGVmaW5lIFBMVVMx
X1VBUlRfTENSX1dMX01BU0sJR0VOTUFTSygxLCAwKQorI2RlZmluZSBQTFVTMV9VQVJUX0xDUl9X
TDUJKDB4MCA8PCAwKQorI2RlZmluZSBQTFVTMV9VQVJUX0xDUl9XTDYJKDB4MSA8PCAwKQorI2Rl
ZmluZSBQTFVTMV9VQVJUX0xDUl9XTDcJKDB4MiA8PCAwKQorI2RlZmluZSBQTFVTMV9VQVJUX0xD
Ul9XTDgJKDB4MyA8PCAwKQorI2RlZmluZSBQTFVTMV9VQVJUX0xDUl9TVAlCSVQoMikKKyNkZWZp
bmUgUExVUzFfVUFSVF9MQ1JfUEUJQklUKDMpCisjZGVmaW5lIFBMVVMxX1VBUlRfTENSX1BSCUJJ
VCg0KQorI2RlZmluZSBQTFVTMV9VQVJUX0xDUl9CQwlCSVQoNSkKKworI2RlZmluZSBQTFVTMV9V
QVJUX01DUl9EVFMJQklUKDApCisjZGVmaW5lIFBMVVMxX1VBUlRfTUNSX1JUUwlCSVQoMSkKKyNk
ZWZpbmUgUExVUzFfVUFSVF9NQ1JfRENECUJJVCgyKQorI2RlZmluZSBQTFVTMV9VQVJUX01DUl9S
SQlCSVQoMykKKyNkZWZpbmUgUExVUzFfVUFSVF9NQ1JfTEIJQklUKDQpCisjZGVmaW5lIFBMVVMx
X1VBUlRfTUNSX0FSCUJJVCg1KQorI2RlZmluZSBQTFVTMV9VQVJUX01DUl9BQwlCSVQoNikKKyNk
ZWZpbmUgUExVUzFfVUFSVF9NQ1JfQVQJQklUKDcpCisKKyNkZWZpbmUgUExVUzFfVUFSVF9JU0Nf
VFgJQklUKDApCisjZGVmaW5lIFBMVVMxX1VBUlRfSVNDX1JYCUJJVCgxKQorI2RlZmluZSBQTFVT
MV9VQVJUX0lTQ19MUwlCSVQoMikKKyNkZWZpbmUgUExVUzFfVUFSVF9JU0NfTVMJQklUKDMpCisj
ZGVmaW5lIFBMVVMxX1VBUlRfSVNDX1RYTQlCSVQoNCkKKyNkZWZpbmUgUExVUzFfVUFSVF9JU0Nf
UlhNCUJJVCg1KQorI2RlZmluZSBQTFVTMV9VQVJUX0lTQ19MU00JQklUKDYpCisjZGVmaW5lIFBM
VVMxX1VBUlRfSVNDX01TTQlCSVQoNykKKworc3RhdGljIHN0cnVjdCB1YXJ0X2RyaXZlciBwbHVz
MV91YXJ0X2RyaXZlcjsKKworc3RydWN0IHBsdXMxX3VhcnRfcG9ydCB7CisJc3RydWN0IHVhcnRf
cG9ydCBwb3J0OworCXN0cnVjdCBjbGsgKmNsazsKK307CisKKyNkZWZpbmUgdG9fcGx1czFfdWFy
dF9wb3J0KHBydCkgY29udGFpbmVyX29mKHBydCwgc3RydWN0IHBsdXMxX3VhcnRfcG9ydCwgcHJ0
KQorCitzdGF0aWMgc3RydWN0IHBsdXMxX3VhcnRfcG9ydCAqcGx1czFfdWFydF9wb3J0c1tQTFVT
MV9VQVJUX1BPUlRfTlVNXTsKIAogc3RhdGljIGlubGluZSB2b2lkIHBsdXMxX3VhcnRfd3JpdGUo
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IG9mZiwgdTMyIHZhbCkKIHsKQEAg
LTI3LDYgKzg4LDQ0NyBAQCBzdGF0aWMgaW5saW5lIHUzMiBwbHVzMV91YXJ0X3JlYWQoc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IG9mZikKIAlyZXR1cm4gcmVhZGxfcmVsYXhl
ZChwb3J0LT5tZW1iYXNlICsgb2ZmKTsKIH0KIAorc3RhdGljIHZvaWQgcGx1czFfdWFydF9icmVh
a19jdGwoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgaW50IGN0bCkKK3sKKwl1bnNpZ25lZCBsb25n
IGZsYWdzOworCXUzMiBsY3I7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmcG9ydC0+bG9jaywgZmxh
Z3MpOworCisJbGNyID0gcGx1czFfdWFydF9yZWFkKHBvcnQsIFJFR19MQ1IpOworCWlmIChjdGwp
CisJCWxjciB8PSBQTFVTMV9VQVJUX0xDUl9CQzsKKwllbHNlCisJCWxjciAmPSB+UExVUzFfVUFS
VF9MQ1JfQkM7CisJcGx1czFfdWFydF93cml0ZShwb3J0LCBSRUdfTENSLCBsY3IpOworCisJc3Bp
bl91bmxvY2tfaXJxcmVzdG9yZSgmcG9ydC0+bG9jaywgZmxhZ3MpOworfQorCitzdGF0aWMgdm9p
ZCBwbHVzMV91YXJ0X3NldF9tY3RybChzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCB1bnNpZ25lZCBp
bnQgbWN0cmwpCit7CisJdTMyIG1jcjsKKworCW1jciA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBS
RUdfTUNSKTsKKworCWlmIChtY3RybCAmIFRJT0NNX0RUUikKKwkJbWNyIHw9IFBMVVMxX1VBUlRf
TUNSX0RUUzsKKwllbHNlCisJCW1jciAmPSB+UExVUzFfVUFSVF9NQ1JfRFRTOworCisJaWYgKG1j
dHJsICYgVElPQ01fUlRTKQorCQltY3IgfD0gUExVUzFfVUFSVF9NQ1JfUlRTOworCWVsc2UKKwkJ
bWNyICY9IH5QTFVTMV9VQVJUX01DUl9SVFM7CisKKwlpZiAobWN0cmwgJiBUSU9DTV9DQVIpCisJ
CW1jciB8PSBQTFVTMV9VQVJUX01DUl9EQ0Q7CisJZWxzZQorCQltY3IgJj0gflBMVVMxX1VBUlRf
TUNSX0RDRDsKKworCWlmIChtY3RybCAmIFRJT0NNX1JJKQorCQltY3IgfD0gUExVUzFfVUFSVF9N
Q1JfUkk7CisJZWxzZQorCQltY3IgJj0gflBMVVMxX1VBUlRfTUNSX1JJOworCisJaWYgKG1jdHJs
ICYgVElPQ01fTE9PUCkKKwkJbWNyIHw9IFBMVVMxX1VBUlRfTUNSX0xCOworCWVsc2UKKwkJbWNy
ICY9IH5QTFVTMV9VQVJUX01DUl9MQjsKKworCXBsdXMxX3VhcnRfd3JpdGUocG9ydCwgUkVHX01D
UiwgbWNyKTsKK30KKworc3RhdGljIHVuc2lnbmVkIGludCBwbHVzMV91YXJ0X2dldF9tY3RybChz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQoreworCXVuc2lnbmVkIGludCBtY3RybCA9IDA7CisJdTMy
IG1jcjsKKworCW1jciA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdfTUNSKTsKKwlpZiAobWNy
ICYgUExVUzFfVUFSVF9NQ1JfRFRTKQorCQltY3RybCB8PSBUSU9DTV9EVFI7CisJaWYgKG1jciAm
IFBMVVMxX1VBUlRfTUNSX1JUUykKKwkJbWN0cmwgfD0gVElPQ01fUlRTOworCWlmIChtY3IgJiBQ
TFVTMV9VQVJUX01DUl9EQ0QpCisJCW1jdHJsIHw9IFRJT0NNX0NBUjsKKwlpZiAobWNyICYgUExV
UzFfVUFSVF9NQ1JfUkkpCisJCW1jdHJsIHw9IFRJT0NNX1JJOworCWlmIChtY3IgJiBQTFVTMV9V
QVJUX01DUl9MQikKKwkJbWN0cmwgfD0gVElPQ01fTE9PUDsKKwlpZiAobWNyICYgUExVUzFfVUFS
VF9NQ1JfQUMpCisJCW1jdHJsIHw9IFRJT0NNX0NUUzsKKwlyZXR1cm4gbWN0cmw7Cit9CisKK3N0
YXRpYyB1bnNpZ25lZCBpbnQgcGx1czFfdWFydF90eF9lbXB0eShzdHJ1Y3QgdWFydF9wb3J0ICpw
b3J0KQoreworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJdW5zaWduZWQgaW50IHJldDsKKwl1MzIg
bHNyOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnBvcnQtPmxvY2ssIGZsYWdzKTsKKworCWxzciA9
IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdfTFNSKTsKKwlyZXQgPSAobHNyICYgUExVUzFfVUFS
VF9MU1JfVFhFKSA/IFRJT0NTRVJfVEVNVCA6IDA7CisKKwlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZwb3J0LT5sb2NrLCBmbGFncyk7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgdm9pZCBw
bHVzMV91YXJ0X3N0b3Bfcngoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKK3sKKwl1MzIgaXNjOwor
CisJaXNjID0gcGx1czFfdWFydF9yZWFkKHBvcnQsIFJFR19JU0MpOworCWlzYyAmPSB+UExVUzFf
VUFSVF9JU0NfUlhNOworCXBsdXMxX3VhcnRfd3JpdGUocG9ydCwgUkVHX0lTQywgaXNjKTsKK30K
Kworc3RhdGljIHZvaWQgcGx1czFfdWFydF9zdG9wX3R4KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQp
Cit7CisJdTMyIGlzYzsKKworCWlzYyA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdfSVNDKTsK
Kwlpc2MgJj0gflBMVVMxX1VBUlRfSVNDX1RYTTsKKwlwbHVzMV91YXJ0X3dyaXRlKHBvcnQsIFJF
R19JU0MsIGlzYyk7Cit9CisKK3N0YXRpYyB2b2lkIHBsdXMxX3VhcnRfc3RhcnRfdHgoc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCkKK3sKKwl1MzIgaXNjOworCisJaWYgKHVhcnRfdHhfc3RvcHBlZChw
b3J0KSkgeworCQlwbHVzMV91YXJ0X3N0b3BfdHgocG9ydCk7CisJCXJldHVybjsKKwl9CisKKwlp
c2MgPSBwbHVzMV91YXJ0X3JlYWQocG9ydCwgUkVHX0lTQyk7CisJaXNjIHw9IFBMVVMxX1VBUlRf
SVNDX1RYTTsKKwlwbHVzMV91YXJ0X3dyaXRlKHBvcnQsIFJFR19JU0MsIGlzYyk7Cit9CisKK3N0
YXRpYyB2b2lkIHBsdXMxX3VhcnRfc2VuZF9jaGFycyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQor
eworCXN0cnVjdCBjaXJjX2J1ZiAqeG1pdCA9ICZwb3J0LT5zdGF0ZS0+eG1pdDsKKwl1bnNpZ25l
ZCBpbnQgY2g7CisKKwlpZiAodWFydF90eF9zdG9wcGVkKHBvcnQpKQorCQlyZXR1cm47CisKKwlp
ZiAocG9ydC0+eF9jaGFyKSB7CisJCS8vd2hpbGUgKCEocGx1czFfdWFydF9yZWFkKHBvcnQsIFJF
R19MU1IpICYgUExVUzFfVUFSVF9MU1JfVFgpKQorCQkvLwljcHVfcmVsYXgoKTsKKwkJcGx1czFf
dWFydF93cml0ZShwb3J0LCBSRUdfREFUQSwgcG9ydC0+eF9jaGFyKTsKKwkJcG9ydC0+aWNvdW50
LnR4Kys7CisJCXBvcnQtPnhfY2hhciA9IDA7CisJfQorCisJd2hpbGUgKHBsdXMxX3VhcnRfcmVh
ZChwb3J0LCBSRUdfTFNSKSAmIFBMVVMxX1VBUlRfTFNSX1RYKSB7CisJCWlmICh1YXJ0X2NpcmNf
ZW1wdHkoeG1pdCkpCisJCQlicmVhazsKKworCQljaCA9IHhtaXQtPmJ1Zlt4bWl0LT50YWlsXTsK
KwkJcGx1czFfdWFydF93cml0ZShwb3J0LCBSRUdfREFUQSwgY2gpOworCQl4bWl0LT50YWlsID0g
KHhtaXQtPnRhaWwgKyAxKSAmIChTRVJJQUxfWE1JVF9TSVpFIC0gMSk7CisJCXBvcnQtPmljb3Vu
dC50eCsrOworCX0KKworCWlmICh1YXJ0X2NpcmNfY2hhcnNfcGVuZGluZyh4bWl0KSA8IFdBS0VV
UF9DSEFSUykKKwkJdWFydF93cml0ZV93YWtldXAocG9ydCk7CisKKwlpZiAodWFydF9jaXJjX2Vt
cHR5KHhtaXQpKQorCQlwbHVzMV91YXJ0X3N0b3BfdHgocG9ydCk7Cit9CisKK3N0YXRpYyB2b2lk
IHBsdXMxX3VhcnRfcmVjZWl2ZV9jaGFycyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQoreworCXUz
MiBsc3IsIHZhbDsKKworCWxzciA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdfTFNSKTsKKwl3
aGlsZSAobHNyICYgUExVUzFfVUFSVF9MU1JfUlgpIHsKKwkJY2hhciBmbGFnID0gVFRZX05PUk1B
TDsKKworCQlpZiAobHNyICYgUExVUzFfVUFSVF9MU1JfT0UpCisJCQlwb3J0LT5pY291bnQub3Zl
cnJ1bisrOworCisJCWlmIChsc3IgJiBQTFVTMV9VQVJUX0xTUl9CQykgeworCQkJcG9ydC0+aWNv
dW50LmJyaysrOworCQkJZmxhZyA9IFRUWV9CUkVBSzsKKwkJfSBlbHNlIGlmIChsc3IgJiBQTFVT
MV9VQVJUX0xTUl9QRSkgeworCQkJcG9ydC0+aWNvdW50LnBhcml0eSsrOworCQkJZmxhZyA9IFRU
WV9QQVJJVFk7CisJCX0gZWxzZSBpZiAobHNyICYgUExVUzFfVUFSVF9MU1JfRkUpIHsKKwkJCXBv
cnQtPmljb3VudC5mcmFtZSsrOworCisJCQlsc3IgJj0gcG9ydC0+cmVhZF9zdGF0dXNfbWFzazsK
KwkJCWlmIChsc3IgJiBQTFVTMV9VQVJUX0xTUl9GRSkKKwkJCQlmbGFnID0gVFRZX1BBUklUWTsK
KwkJfSBlbHNlCisJCQlwb3J0LT5pY291bnQucngrKzsKKworCQl2YWwgPSBwbHVzMV91YXJ0X3Jl
YWQocG9ydCwgUkVHX0RBVEEpOworCQl2YWwgJj0gMHhmZjsKKworCQlpZiAoKGxzciAmIHBvcnQt
Pmlnbm9yZV9zdGF0dXNfbWFzaykgPT0gMCkKKwkJCXR0eV9pbnNlcnRfZmxpcF9jaGFyKCZwb3J0
LT5zdGF0ZS0+cG9ydCwgdmFsLCBmbGFnKTsKKworCQlsc3IgPSBwbHVzMV91YXJ0X3JlYWQocG9y
dCwgUkVHX0xTUik7CisJfQorCisJc3Bpbl91bmxvY2soJnBvcnQtPmxvY2spOworCXR0eV9mbGlw
X2J1ZmZlcl9wdXNoKCZwb3J0LT5zdGF0ZS0+cG9ydCk7CisJc3Bpbl9sb2NrKCZwb3J0LT5sb2Nr
KTsKK30KKworc3RhdGljIGlycXJldHVybl90IHBsdXMxX3VhcnRfaXJxKGludCBpcnEsIHZvaWQg
KmRldl9pZCkKK3sKKwlzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0ID0gZGV2X2lkOworCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7CisJdTMyIGlzYzsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZwb3J0LT5sb2Nr
LCBmbGFncyk7CisKKwlpc2MgPSBwbHVzMV91YXJ0X3JlYWQocG9ydCwgUkVHX0lTQyk7CisJaWYg
KGlzYyAmIFBMVVMxX1VBUlRfSVNDX1JYKQorCQlwbHVzMV91YXJ0X3JlY2VpdmVfY2hhcnMocG9y
dCk7CisKKwlpc2MgPSBwbHVzMV91YXJ0X3JlYWQocG9ydCwgUkVHX0lTQyk7CisJaWYgKGlzYyAm
IFBMVVMxX1VBUlRfSVNDX1RYKQorCQlwbHVzMV91YXJ0X3NlbmRfY2hhcnMocG9ydCk7CisKKwlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZwb3J0LT5sb2NrLCBmbGFncyk7CisKKwlyZXR1cm4gSVJR
X0hBTkRMRUQ7Cit9CisKK3N0YXRpYyB2b2lkIHBsdXMxX3VhcnRfc2h1dGRvd24oc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCkKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCXUzMiBtY3I7CisKKwlz
cGluX2xvY2tfaXJxc2F2ZSgmcG9ydC0+bG9jaywgZmxhZ3MpOworCisJcGx1czFfdWFydF93cml0
ZShwb3J0LCBSRUdfSVNDLCAwKTsKKworCW1jciA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdf
TUNSKTsKKwltY3IgJj0gflBMVVMxX1VBUlRfTUNSX0FDOworCXBsdXMxX3VhcnRfd3JpdGUocG9y
dCwgUkVHX01DUiwgbWNyKTsKKworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnBvcnQtPmxvY2ss
IGZsYWdzKTsKKworCWZyZWVfaXJxKHBvcnQtPmlycSwgcG9ydCk7Cit9CisKK3N0YXRpYyBpbnQg
cGx1czFfdWFydF9zdGFydHVwKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCit7CisJdW5zaWduZWQg
bG9uZyBmbGFnczsKKwlpbnQgcmV0OworCisJcmV0ID0gcmVxdWVzdF9pcnEocG9ydC0+aXJxLCBw
bHVzMV91YXJ0X2lycSwgSVJRRl9UUklHR0VSX05PTkUsCisJCQkgICJwbHVzMS11YXJ0IiwgcG9y
dCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZwb3J0
LT5sb2NrLCBmbGFncyk7CisKKwlwbHVzMV91YXJ0X3dyaXRlKHBvcnQsIFJFR19JU0MsIFBMVVMx
X1VBUlRfSVNDX1JYTSk7CisKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZwb3J0LT5sb2NrLCBm
bGFncyk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgcGx1czFfdWFydF9jaGFuZ2Vf
YmF1ZHJhdGUoc3RydWN0IHBsdXMxX3VhcnRfcG9ydCAqc3BfcG9ydCwKKwkJCQkgICAgICAgdW5z
aWduZWQgbG9uZyBiYXVkKQoreworCXN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQgPSAmc3BfcG9ydC0+
cG9ydDsKKwl1bnNpZ25lZCBpbnQgY2xrOworCXVuc2lnbmVkIGludCBkaXYsIGV4dDsKKworCXBs
dXMxX3VhcnRfd3JpdGUocG9ydCwgUkVHX0NMS19TUkMsIChiYXVkID4gMTE1MjAwKSA/IDAgOiBC
SVQoMCkpOworCWlmIChiYXVkID4gMTE1MjAwKQorCQljbGsgPSAyMDI1MDAwMDA7CisJZWxzZQor
CQljbGsgPSBwb3J0LT51YXJ0Y2xrOworCWNsayArPSBiYXVkID4+IDE7CisJZGl2ID0gY2xrIC8g
YmF1ZDsKKwlleHQgPSBkaXYgJiAweGY7CisJZGl2ID4+PSA0OworCWRpdi0tOworCXBsdXMxX3Vh
cnRfd3JpdGUocG9ydCwgUkVHX0RJVl9MLCAoZXh0IDw8IDEyKSB8IChkaXYgJiAweGZmKSk7CisJ
cGx1czFfdWFydF93cml0ZShwb3J0LCBSRUdfRElWX0gsIGRpdiA+PiA4KTsKK30KKworc3RhdGlj
IHZvaWQgcGx1czFfdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAorCQkJ
CSAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKKwkJCQkgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9s
ZCkKK3sKKwlzdHJ1Y3QgcGx1czFfdWFydF9wb3J0ICpzcF9wb3J0ID0gdG9fcGx1czFfdWFydF9w
b3J0KHBvcnQpOworCXVuc2lnbmVkIGludCBiYXVkOworCXUzMiBsY3IsIG1jcjsKKwl1bnNpZ25l
ZCBsb25nIGZsYWdzOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnBvcnQtPmxvY2ssIGZsYWdzKTsK
KworCWxjciA9IHBsdXMxX3VhcnRfcmVhZChwb3J0LCBSRUdfTENSKTsKKworCWxjciAmPSB+UExV
UzFfVUFSVF9MQ1JfV0xfTUFTSzsKKwlzd2l0Y2ggKHRlcm1pb3MtPmNfY2ZsYWcgJiBDU0laRSkg
eworCWNhc2UgQ1M1OgorCQlsY3IgfD0gUExVUzFfVUFSVF9MQ1JfV0w1OworCQlicmVhazsKKwlj
YXNlIENTNjoKKwkJbGNyIHw9IFBMVVMxX1VBUlRfTENSX1dMNjsKKwkJYnJlYWs7CisJY2FzZSBD
Uzc6CisJCWxjciB8PSBQTFVTMV9VQVJUX0xDUl9XTDc7CisJCWJyZWFrOworCWNhc2UgQ1M4Ogor
CWRlZmF1bHQ6CisJCWxjciB8PSBQTFVTMV9VQVJUX0xDUl9XTDg7CisJCWJyZWFrOworCX0KKwor
CWlmICh0ZXJtaW9zLT5jX2NmbGFnICYgQ1NUT1BCKQorCQlsY3IgfD0gUExVUzFfVUFSVF9MQ1Jf
U1Q7CisJZWxzZQorCQlsY3IgJj0gflBMVVMxX1VBUlRfTENSX1NUOworCisJaWYgKHRlcm1pb3Mt
PmNfY2ZsYWcgJiBQQVJFTkIpIHsKKwkJbGNyIHw9IFBMVVMxX1VBUlRfTENSX1BFOworCX0gZWxz
ZQorCQlsY3IgJj0gflBMVVMxX1VBUlRfTENSX1BFOworCisJaWYgKCh0ZXJtaW9zLT5jX2NmbGFn
ICYgUEFSRU5CKSAmJiAhKHRlcm1pb3MtPmNfY2ZsYWcgJiBQQVJPREQpKQorCQlsY3IgfD0gUExV
UzFfVUFSVF9MQ1JfUFI7CisJZWxzZQorCQlsY3IgJj0gflBMVVMxX1VBUlRfTENSX1BSOworCisJ
cGx1czFfdWFydF93cml0ZShwb3J0LCBSRUdfTENSLCBsY3IpOworCisJbWNyID0gcGx1czFfdWFy
dF9yZWFkKHBvcnQsIFJFR19NQ1IpOworCisJaWYgKHRlcm1pb3MtPmNfY2ZsYWcgJiBDUlRTQ1RT
KQorCQltY3IgfD0gUExVUzFfVUFSVF9NQ1JfQUMgfCBQTFVTMV9VQVJUX01DUl9BUjsKKwllbHNl
CisJCW1jciAmPSB+KFBMVVMxX1VBUlRfTUNSX0FDIHwgUExVUzFfVUFSVF9NQ1JfQVIpOworCisJ
cGx1czFfdWFydF93cml0ZShwb3J0LCBSRUdfTUNSLCBtY3IpOworCisJYmF1ZCA9IHVhcnRfZ2V0
X2JhdWRfcmF0ZShwb3J0LCB0ZXJtaW9zLCBvbGQsIDAsIDIwMjUwMDAwMCA+PiA0KTsKKwlwbHVz
MV91YXJ0X2NoYW5nZV9iYXVkcmF0ZShzcF9wb3J0LCBiYXVkKTsKKworCS8qIERvbid0IHJld3Jp
dGUgQjAgKi8KKwlpZiAodHR5X3Rlcm1pb3NfYmF1ZF9yYXRlKHRlcm1pb3MpKQorCQl0dHlfdGVy
bWlvc19lbmNvZGVfYmF1ZF9yYXRlKHRlcm1pb3MsIGJhdWQsIGJhdWQpOworCisJcG9ydC0+cmVh
ZF9zdGF0dXNfbWFzayA9IDA7CisJaWYgKHRlcm1pb3MtPmNfaWZsYWcgJiBJTlBDSykKKwkJcG9y
dC0+cmVhZF9zdGF0dXNfbWFzayB8PSBQTFVTMV9VQVJUX0xTUl9QRSB8IFBMVVMxX1VBUlRfTFNS
X0ZFOworCWlmICgodGVybWlvcy0+Y19pZmxhZyAmIEJSS0lOVCkgfHwgKHRlcm1pb3MtPmNfaWZs
YWcgJiBQQVJNUkspKQorCQlwb3J0LT5yZWFkX3N0YXR1c19tYXNrIHw9IFBMVVMxX1VBUlRfTFNS
X0JDOworCisJcG9ydC0+aWdub3JlX3N0YXR1c19tYXNrID0gMDsKKwlpZiAodGVybWlvcy0+Y19p
ZmxhZyAmIElHTlBBUikKKwkJcG9ydC0+aWdub3JlX3N0YXR1c19tYXNrIHw9IFBMVVMxX1VBUlRf
TFNSX1BFIHwgUExVUzFfVUFSVF9MU1JfRkU7CisJaWYgKHRlcm1pb3MtPmNfaWZsYWcgJiBJR05C
UkspIHsKKwkJcG9ydC0+aWdub3JlX3N0YXR1c19tYXNrIHw9IFBMVVMxX1VBUlRfTFNSX0JDOwor
CQlpZiAodGVybWlvcy0+Y19pZmxhZyAmIElHTlBBUikKKwkJCXBvcnQtPmlnbm9yZV9zdGF0dXNf
bWFzayB8PSBQTFVTMV9VQVJUX0xTUl9PRTsKKwl9CisKKwlpZiAoISh0ZXJtaW9zLT5jX2NmbGFn
ICYgQ1JFQUQpKQorCQlwbHVzMV91YXJ0X3dyaXRlKHBvcnQsIFJFR19SWF9SRVNJRFVFLCAwKTsK
KworCXVhcnRfdXBkYXRlX3RpbWVvdXQocG9ydCwgdGVybWlvcy0+Y19jZmxhZywgYmF1ZCk7CisK
KwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZwb3J0LT5sb2NrLCBmbGFncyk7Cit9CisKK3N0YXRp
YyB2b2lkIHBsdXMxX3VhcnRfcmVsZWFzZV9wb3J0KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCit7
CisJc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldiA9IHRvX3BsYXRmb3JtX2RldmljZShwb3J0
LT5kZXYpOworCXN0cnVjdCByZXNvdXJjZSAqcmVzOworCisJcmVzID0gcGxhdGZvcm1fZ2V0X3Jl
c291cmNlKHBkZXYsIElPUkVTT1VSQ0VfTUVNLCAwKTsKKwlpZiAoIXJlcykKKwkJcmV0dXJuOwor
CisJaWYgKHBvcnQtPmZsYWdzICYgVVBGX0lPUkVNQVApIHsKKwkJZGV2bV9yZWxlYXNlX21lbV9y
ZWdpb24ocG9ydC0+ZGV2LCBwb3J0LT5tYXBiYXNlLAorCQkJcmVzb3VyY2Vfc2l6ZShyZXMpKTsK
KwkJZGV2bV9pb3VubWFwKHBvcnQtPmRldiwgcG9ydC0+bWVtYmFzZSk7CisJCXBvcnQtPm1lbWJh
c2UgPSBOVUxMOworCX0KK30KKworc3RhdGljIGludCBwbHVzMV91YXJ0X3JlcXVlc3RfcG9ydChz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQoreworCXN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYg
PSB0b19wbGF0Zm9ybV9kZXZpY2UocG9ydC0+ZGV2KTsKKwlzdHJ1Y3QgcmVzb3VyY2UgKnJlczsK
KworCXJlcyA9IHBsYXRmb3JtX2dldF9yZXNvdXJjZShwZGV2LCBJT1JFU09VUkNFX01FTSwgMCk7
CisJaWYgKCFyZXMpCisJCXJldHVybiAtRU5YSU87CisKKwlpZiAoIWRldm1fcmVxdWVzdF9tZW1f
cmVnaW9uKHBvcnQtPmRldiwgcG9ydC0+bWFwYmFzZSwKKwkJCXJlc291cmNlX3NpemUocmVzKSwg
ZGV2X25hbWUocG9ydC0+ZGV2KSkpCisJCXJldHVybiAtRUJVU1k7CisKKwlpZiAocG9ydC0+Zmxh
Z3MgJiBVUEZfSU9SRU1BUCkgeworCQlwb3J0LT5tZW1iYXNlID0gZGV2bV9pb3JlbWFwKHBvcnQt
PmRldiwgcG9ydC0+bWFwYmFzZSwKKwkJCQlyZXNvdXJjZV9zaXplKHJlcykpOworCQlpZiAoIXBv
cnQtPm1lbWJhc2UpCisJCQlyZXR1cm4gLUVCVVNZOworCX0KKworCXJldHVybiAwOworfQorCitz
dGF0aWMgY29uc3QgY2hhciAqcGx1czFfdWFydF90eXBlKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQp
Cit7CisJcmV0dXJuIChwb3J0LT50eXBlID09IFBPUlRfUExVUzEpID8gInBsdXMxLXVhcnQiIDog
TlVMTDsKK30KKworc3RhdGljIGludCBwbHVzMV91YXJ0X3ZlcmlmeV9wb3J0KHN0cnVjdCB1YXJ0
X3BvcnQgKnBvcnQsCisJCQkJICBzdHJ1Y3Qgc2VyaWFsX3N0cnVjdCAqc2VyKQoreworCWlmIChw
b3J0LT50eXBlICE9IFBPUlRfUExVUzEpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKHBvcnQt
PmlycSAhPSBzZXItPmlycSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlyZXR1cm4gMDsKK30KKwor
c3RhdGljIHZvaWQgcGx1czFfdWFydF9jb25maWdfcG9ydChzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0
LCBpbnQgZmxhZ3MpCit7CisJaWYgKGZsYWdzICYgVUFSVF9DT05GSUdfVFlQRSkgeworCQlwb3J0
LT50eXBlID0gUE9SVF9QTFVTMTsKKwkJcGx1czFfdWFydF9yZXF1ZXN0X3BvcnQocG9ydCk7CisJ
fQorfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IHVhcnRfb3BzIHBsdXMxX3VhcnRfb3BzID0gewor
CS5icmVha19jdGwJPSBwbHVzMV91YXJ0X2JyZWFrX2N0bCwKKwkuc2V0X21jdHJsCT0gcGx1czFf
dWFydF9zZXRfbWN0cmwsCisJLmdldF9tY3RybAk9IHBsdXMxX3VhcnRfZ2V0X21jdHJsLAorCS50
eF9lbXB0eQk9IHBsdXMxX3VhcnRfdHhfZW1wdHksCisJLnN0YXJ0X3R4CT0gcGx1czFfdWFydF9z
dGFydF90eCwKKwkuc3RvcF9yeAk9IHBsdXMxX3VhcnRfc3RvcF9yeCwKKwkuc3RvcF90eAk9IHBs
dXMxX3VhcnRfc3RvcF90eCwKKwkuc3RhcnR1cAk9IHBsdXMxX3VhcnRfc3RhcnR1cCwKKwkuc2h1
dGRvd24JPSBwbHVzMV91YXJ0X3NodXRkb3duLAorCS5zZXRfdGVybWlvcwk9IHBsdXMxX3VhcnRf
c2V0X3Rlcm1pb3MsCisJLnR5cGUJCT0gcGx1czFfdWFydF90eXBlLAorCS5jb25maWdfcG9ydAk9
IHBsdXMxX3VhcnRfY29uZmlnX3BvcnQsCisJLnJlcXVlc3RfcG9ydAk9IHBsdXMxX3VhcnRfcmVx
dWVzdF9wb3J0LAorCS5yZWxlYXNlX3BvcnQJPSBwbHVzMV91YXJ0X3JlbGVhc2VfcG9ydCwKKwku
dmVyaWZ5X3BvcnQJPSBwbHVzMV91YXJ0X3ZlcmlmeV9wb3J0LAorfTsKKwogI2lmZGVmIENPTkZJ
R19TRVJJQUxfUExVUzFfQ09OU09MRQogCiBzdGF0aWMgdm9pZCBwbHVzMV9jb25zb2xlX3B1dGNo
YXIoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgaW50IGNoKQpAQCAtNjUsNiArNTY3LDU3IEBAIHN0
YXRpYyB2b2lkIHBsdXMxX3VhcnRfcG9ydF93cml0ZShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBj
b25zdCBjaGFyICpzLAogCWxvY2FsX2lycV9yZXN0b3JlKGZsYWdzKTsKIH0KIAorc3RhdGljIHZv
aWQgcGx1czFfdWFydF9jb25zb2xlX3dyaXRlKHN0cnVjdCBjb25zb2xlICpjbywgY29uc3QgY2hh
ciAqcywKKwkJCQkgICAgIHVfaW50IGNvdW50KQoreworCXN0cnVjdCBwbHVzMV91YXJ0X3BvcnQg
KnNwX3BvcnQ7CisKKwlzcF9wb3J0ID0gcGx1czFfdWFydF9wb3J0c1tjby0+aW5kZXhdOworCWlm
ICghc3BfcG9ydCkKKwkJcmV0dXJuOworCisJcGx1czFfdWFydF9wb3J0X3dyaXRlKCZzcF9wb3J0
LT5wb3J0LCBzLCBjb3VudCk7Cit9CisKK3N0YXRpYyBpbnQgcGx1czFfdWFydF9jb25zb2xlX3Nl
dHVwKHN0cnVjdCBjb25zb2xlICpjbywgY2hhciAqb3B0aW9ucykKK3sKKwlzdHJ1Y3QgcGx1czFf
dWFydF9wb3J0ICpzcF9wb3J0OworCWludCBiYXVkID0gMTE1MjAwOworCWludCBiaXRzID0gODsK
KwlpbnQgcGFyaXR5ID0gJ24nOworCWludCBmbG93ID0gJ24nOworCisJaWYgKGNvLT5pbmRleCA8
IDAgfHwgY28tPmluZGV4ID49IFBMVVMxX1VBUlRfUE9SVF9OVU0pCisJCXJldHVybiAtRUlOVkFM
OworCisJc3BfcG9ydCA9IHBsdXMxX3VhcnRfcG9ydHNbY28tPmluZGV4XTsKKwlpZiAoIXNwX3Bv
cnQgfHwgIXNwX3BvcnQtPnBvcnQubWVtYmFzZSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlpZiAo
b3B0aW9ucykKKwkJdWFydF9wYXJzZV9vcHRpb25zKG9wdGlvbnMsICZiYXVkLCAmcGFyaXR5LCAm
Yml0cywgJmZsb3cpOworCisJcmV0dXJuIHVhcnRfc2V0X29wdGlvbnMoJnNwX3BvcnQtPnBvcnQs
IGNvLCBiYXVkLCBwYXJpdHksIGJpdHMsIGZsb3cpOworfQorCitzdGF0aWMgc3RydWN0IGNvbnNv
bGUgcGx1czFfdWFydF9jb25zb2xlID0geworCS5uYW1lID0gUExVUzFfVUFSVF9ERVZfTkFNRSwK
Kwkud3JpdGUgPSBwbHVzMV91YXJ0X2NvbnNvbGVfd3JpdGUsCisJLmRldmljZSA9IHVhcnRfY29u
c29sZV9kZXZpY2UsCisJLnNldHVwID0gcGx1czFfdWFydF9jb25zb2xlX3NldHVwLAorCS5mbGFn
cyA9IENPTl9QUklOVEJVRkZFUiwKKwkuaW5kZXggPSAtMSwKKwkuZGF0YSA9ICZwbHVzMV91YXJ0
X2RyaXZlciwKK307CisKK3N0YXRpYyBpbnQgX19pbml0IHBsdXMxX3VhcnRfY29uc29sZV9pbml0
KHZvaWQpCit7CisJcmVnaXN0ZXJfY29uc29sZSgmcGx1czFfdWFydF9jb25zb2xlKTsKKworCXJl
dHVybiAwOworfQorY29uc29sZV9pbml0Y2FsbChwbHVzMV91YXJ0X2NvbnNvbGVfaW5pdCk7CisK
IHN0YXRpYyB2b2lkIHBsdXMxX3VhcnRfZWFybHlfY29uc29sZV93cml0ZShzdHJ1Y3QgY29uc29s
ZSAqY28sCiAJCQkJCSAgIGNvbnN0IGNoYXIgKnMsCiAJCQkJCSAgIHVfaW50IGNvdW50KQpAQCAt
ODcsNCArNjQwLDEzMSBAQCBwbHVzMV91YXJ0X2Vhcmx5X2NvbnNvbGVfc2V0dXAoc3RydWN0IGVh
cmx5Y29uX2RldmljZSAqZGV2aWNlLCBjb25zdCBjaGFyICpvcHQpCiBPRl9FQVJMWUNPTl9ERUNM
QVJFKHN1bnBsdXMsICJzdW5wbHVzLHNwNzAyMS11YXJ0IiwKIAkJICAgIHBsdXMxX3VhcnRfZWFy
bHlfY29uc29sZV9zZXR1cCk7CiAKKyNkZWZpbmUgUExVUzFfVUFSVF9DT05TT0xFICgmcGx1czFf
dWFydF9jb25zb2xlKQorI2Vsc2UKKyNkZWZpbmUgUExVUzFfVUFSVF9DT05TT0xFIE5VTEwKICNl
bmRpZgorCitzdGF0aWMgc3RydWN0IHVhcnRfZHJpdmVyIHBsdXMxX3VhcnRfZHJpdmVyID0gewor
CS5vd25lciA9IFRISVNfTU9EVUxFLAorCS5kcml2ZXJfbmFtZSA9ICJwbHVzMS11YXJ0IiwKKwku
ZGV2X25hbWUgPSBQTFVTMV9VQVJUX0RFVl9OQU1FLAorCS5uciA9IFBMVVMxX1VBUlRfUE9SVF9O
VU0sCisJLmNvbnMgPSBQTFVTMV9VQVJUX0NPTlNPTEUsCit9OworCitzdGF0aWMgaW50IHBsdXMx
X3VhcnRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlzdHJ1Y3QgcmVz
b3VyY2UgKnJlc19tZW07CisJc3RydWN0IHBsdXMxX3VhcnRfcG9ydCAqc3BfcG9ydDsKKwlpbnQg
cmV0LCBpcnE7CisKKwlpZiAocGRldi0+ZGV2Lm9mX25vZGUpCisJCXBkZXYtPmlkID0gb2ZfYWxp
YXNfZ2V0X2lkKHBkZXYtPmRldi5vZl9ub2RlLCAic2VyaWFsIik7CisKKwlpZiAocGRldi0+aWQg
PCAwIHx8IHBkZXYtPmlkID49IFBMVVMxX1VBUlRfUE9SVF9OVU0pIHsKKwkJZGV2X2VycigmcGRl
di0+ZGV2LCAiaWQgJWQgb3V0IG9mIHJhbmdlXG4iLCBwZGV2LT5pZCk7CisJCXJldHVybiAtRUlO
VkFMOworCX0KKworCXJlc19tZW0gPSBwbGF0Zm9ybV9nZXRfcmVzb3VyY2UocGRldiwgSU9SRVNP
VVJDRV9NRU0sIDApOworCWlmICghcmVzX21lbSkgeworCQlkZXZfZXJyKCZwZGV2LT5kZXYsICJj
b3VsZCBub3QgZ2V0IG1lbVxuIik7CisJCXJldHVybiAtRU5PREVWOworCX0KKworCWlycSA9IHBs
YXRmb3JtX2dldF9pcnEocGRldiwgMCk7CisJaWYgKGlycSA8IDApCisJCXJldHVybiBpcnE7CisK
KwlpZiAocGx1czFfdWFydF9wb3J0c1twZGV2LT5pZF0pIHsKKwkJZGV2X2VycigmcGRldi0+ZGV2
LCAicG9ydCAlZCBhbHJlYWR5IGFsbG9jYXRlZFxuIiwgcGRldi0+aWQpOworCQlyZXR1cm4gLUVC
VVNZOworCX0KKworCXNwX3BvcnQgPSBkZXZtX2t6YWxsb2MoJnBkZXYtPmRldiwgc2l6ZW9mKCpz
cF9wb3J0KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFzcF9wb3J0KQorCQlyZXR1cm4gLUVOT01FTTsK
KworCXNwX3BvcnQtPmNsayA9IGRldm1fY2xrX2dldCgmcGRldi0+ZGV2LCBOVUxMKTsKKwlpZiAo
SVNfRVJSKHNwX3BvcnQtPmNsaykpIHsKKwkJZGV2X2VycigmcGRldi0+ZGV2LCAiY291bGQgbm90
IGdldCBjbGtcbiIpOworCQlyZXR1cm4gUFRSX0VSUihzcF9wb3J0LT5jbGspOworCX0KKworCXNw
X3BvcnQtPnBvcnQuZGV2ID0gJnBkZXYtPmRldjsKKwlzcF9wb3J0LT5wb3J0LmxpbmUgPSBwZGV2
LT5pZDsKKwlzcF9wb3J0LT5wb3J0LnR5cGUgPSBQT1JUX1BMVVMxOworCXNwX3BvcnQtPnBvcnQu
aW90eXBlID0gVVBJT19NRU07CisJc3BfcG9ydC0+cG9ydC5tYXBiYXNlID0gcmVzX21lbS0+c3Rh
cnQ7CisJc3BfcG9ydC0+cG9ydC5pcnEgPSBpcnE7CisJc3BfcG9ydC0+cG9ydC51YXJ0Y2xrID0g
Y2xrX2dldF9yYXRlKHNwX3BvcnQtPmNsayk7CisJaWYgKHNwX3BvcnQtPnBvcnQudWFydGNsayA9
PSAwKSB7CisJCWRldl9lcnIoJnBkZXYtPmRldiwgImNsb2NrIHJhdGUgaXMgemVyb1xuIik7CisJ
CXJldHVybiAtRUlOVkFMOworCX0KKwlzcF9wb3J0LT5wb3J0LmZsYWdzID0gVVBGX0JPT1RfQVVU
T0NPTkYgfCBVUEZfSU9SRU1BUCB8IFVQRl9MT1dfTEFURU5DWTsKKwlzcF9wb3J0LT5wb3J0Lnhf
Y2hhciA9IDA7CisJc3BfcG9ydC0+cG9ydC5maWZvc2l6ZSA9IDE2OworCXNwX3BvcnQtPnBvcnQu
b3BzID0gJnBsdXMxX3VhcnRfb3BzOworCisJcGx1czFfdWFydF9wb3J0c1twZGV2LT5pZF0gPSBz
cF9wb3J0OworCXBsYXRmb3JtX3NldF9kcnZkYXRhKHBkZXYsIHNwX3BvcnQpOworCisJcmV0ID0g
dWFydF9hZGRfb25lX3BvcnQoJnBsdXMxX3VhcnRfZHJpdmVyLCAmc3BfcG9ydC0+cG9ydCk7CisJ
aWYgKHJldCkKKwkJcGx1czFfdWFydF9wb3J0c1twZGV2LT5pZF0gPSBOVUxMOworCisJcmV0dXJu
IHJldDsKK30KKworc3RhdGljIGludCBwbHVzMV91YXJ0X3JlbW92ZShzdHJ1Y3QgcGxhdGZvcm1f
ZGV2aWNlICpwZGV2KQoreworCXN0cnVjdCBwbHVzMV91YXJ0X3BvcnQgKnNwX3BvcnQgPSBwbGF0
Zm9ybV9nZXRfZHJ2ZGF0YShwZGV2KTsKKworCXVhcnRfcmVtb3ZlX29uZV9wb3J0KCZwbHVzMV91
YXJ0X2RyaXZlciwgJnNwX3BvcnQtPnBvcnQpOworCXBsdXMxX3VhcnRfcG9ydHNbcGRldi0+aWRd
ID0gTlVMTDsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2Rldmlj
ZV9pZCBwbHVzMV91YXJ0X2R0X21hdGNoZXNbXSA9IHsKKwl7IC5jb21wYXRpYmxlID0gInN1bnBs
dXMsc3A3MDIxLXVhcnQiIH0sCisJeyB9Cit9OworTU9EVUxFX0RFVklDRV9UQUJMRShvZiwgcGx1
czFfdWFydF9kdF9tYXRjaGVzKTsKKworc3RhdGljIHN0cnVjdCBwbGF0Zm9ybV9kcml2ZXIgcGx1
czFfdWFydF9wbGF0Zm9ybV9kcml2ZXIgPSB7CisJLnByb2JlID0gcGx1czFfdWFydF9wcm9iZSwK
KwkucmVtb3ZlID0gcGx1czFfdWFydF9yZW1vdmUsCisJLmRyaXZlciA9IHsKKwkJLm5hbWUgPSAi
cGx1czEtdWFydCIsCisJCS5vZl9tYXRjaF90YWJsZSA9IHBsdXMxX3VhcnRfZHRfbWF0Y2hlcywK
Kwl9LAorfTsKKworc3RhdGljIGludCBfX2luaXQgcGx1czFfdWFydF9pbml0KHZvaWQpCit7CisJ
aW50IHJldDsKKworCXJldCA9IHVhcnRfcmVnaXN0ZXJfZHJpdmVyKCZwbHVzMV91YXJ0X2RyaXZl
cik7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJldCA9IHBsYXRmb3JtX2RyaXZlcl9y
ZWdpc3RlcigmcGx1czFfdWFydF9wbGF0Zm9ybV9kcml2ZXIpOworCWlmIChyZXQpCisJCXVhcnRf
dW5yZWdpc3Rlcl9kcml2ZXIoJnBsdXMxX3VhcnRfZHJpdmVyKTsKKworCXJldHVybiByZXQ7Cit9
CisKK3N0YXRpYyB2b2lkIF9fZXhpdCBwbHVzMV91YXJ0X2V4aXQodm9pZCkKK3sKKwlwbGF0Zm9y
bV9kcml2ZXJfdW5yZWdpc3RlcigmcGx1czFfdWFydF9wbGF0Zm9ybV9kcml2ZXIpOworCXVhcnRf
dW5yZWdpc3Rlcl9kcml2ZXIoJnBsdXMxX3VhcnRfZHJpdmVyKTsKK30KKworbW9kdWxlX2luaXQo
cGx1czFfdWFydF9pbml0KTsKK21vZHVsZV9leGl0KHBsdXMxX3VhcnRfZXhpdCk7CisKK01PRFVM
RV9MSUNFTlNFKCJHUEwiKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9zZXJpYWxf
Y29yZS5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L3NlcmlhbF9jb3JlLmgKaW5kZXggOGVjM2RkNzQy
ZWE0Li41NGM2MTFiMDY3MzUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9zZXJpYWxf
Y29yZS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9zZXJpYWxfY29yZS5oCkBAIC0yOTMsNCAr
MjkzLDcgQEAKIC8qIEZyZWVzY2FsZSBMSU5GbGV4RCBVQVJUICovCiAjZGVmaW5lIFBPUlRfTElO
RkxFWFVBUlQJMTIyCiAKKy8qIFN1blBsdXMgUGx1czEgVUFSVCAqLworI2RlZmluZSBQT1JUX1BM
VVMxCTEyMworCiAjZW5kaWYgLyogX1VBUElMSU5VWF9TRVJJQUxfQ09SRV9IICovCi0tIAoyLjE2
LjQKCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpsaW51
eC1hcm0ta2VybmVsIG1haWxpbmcgbGlzdApsaW51eC1hcm0ta2VybmVsQGxpc3RzLmluZnJhZGVh
ZC5vcmcKaHR0cDovL2xpc3RzLmluZnJhZGVhZC5vcmcvbWFpbG1hbi9saXN0aW5mby9saW51eC1h
cm0ta2VybmVsCg==
