Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 85D2616A808
	for <lists+linux-arm-kernel@lfdr.de>; Mon, 24 Feb 2020 15:14:10 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-Id:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=fxc1MGqOsTtQEwWhSNN9TU1EdbeL/h6rQD4aXj3uSP4=; b=ZfaTNXleu5YByR
	5fUSCQjdg7pGYz/V6u0QX+ODc3J2ZOumhxo4SCsOuvY2IyP+5WsgSA0H6aw4s1krrD0Mj5kCv4gwS
	Oqia1DyZFqVOYMNCfr3q7OO39OXvpfPy9RMK1iHK7omsM7zZVFtNJvjkK6F3rGf5Y7A2PVVq1vC9B
	jJ3Z/p7shmU1r7Og9eK+u+qxzX5mjbwoFx/svK121DOo3p4oNii3XhduSRaKBHuGz0RZECdpbDNC3
	/aNaiprMAgETx4bE0lJFekKcrJkKo8yBt3qtfynDemJsSpKP6hbGIkKh+idzNUjMjGflWiN7uR3fd
	pmncQnhX06y3h1hVnaGg==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1j6EUg-0007uH-Kv; Mon, 24 Feb 2020 14:13:58 +0000
Received: from foss.arm.com ([217.140.110.172])
 by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
 id 1j6ETh-00075y-2h
 for linux-arm-kernel@lists.infradead.org; Mon, 24 Feb 2020 14:12:59 +0000
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 45B7430E;
 Mon, 24 Feb 2020 06:12:56 -0800 (PST)
Received: from e108754-lin.cambridge.arm.com (unknown [10.1.198.53])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id EF1153F534;
 Mon, 24 Feb 2020 06:12:53 -0800 (PST)
From: Ionela Voinescu <ionela.voinescu@arm.com>
To: catalin.marinas@arm.com, will@kernel.org, mark.rutland@arm.com,
 maz@kernel.org, suzuki.poulose@arm.com, sudeep.holla@arm.com,
 lukasz.luba@arm.com, valentin.schneider@arm.com, dietmar.eggemann@arm.com,
 rjw@rjwysocki.net, ionela.voinescu@arm.com
Subject: [PATCH v4 6/7] arm64: use activity monitors for frequency invariance
Date: Mon, 24 Feb 2020 14:11:41 +0000
Message-Id: <20200224141142.25445-7-ionela.voinescu@arm.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200224141142.25445-1-ionela.voinescu@arm.com>
References: <20200224141142.25445-1-ionela.voinescu@arm.com>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200224_061257_448379_C5B563B1 
X-CRM114-Status: GOOD (  22.25  )
X-Spam-Score: -2.3 (--)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-2.3 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [217.140.110.172 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: linux-doc@vger.kernel.org, peterz@infradead.org, viresh.kumar@linaro.org,
 linux-pm@vger.kernel.org, linux-kernel@vger.kernel.org, mingo@redhat.com,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

VGhlIEZyZXF1ZW5jeSBJbnZhcmlhbmNlIEVuZ2luZSAoRklFKSBpcyBwcm92aWRpbmcgYSBmcmVx
dWVuY3kKc2NhbGluZyBjb3JyZWN0aW9uIGZhY3RvciB0aGF0IGhlbHBzIGFjaGlldmUgbW9yZSBh
Y2N1cmF0ZQpsb2FkLXRyYWNraW5nLgoKU28gZmFyLCBmb3IgYXJtIGFuZCBhcm02NCBwbGF0Zm9y
bXMsIHRoaXMgc2NhbGUgZmFjdG9yIGhhcyBiZWVuCm9idGFpbmVkIGJhc2VkIG9uIHRoZSByYXRp
byBiZXR3ZWVuIHRoZSBjdXJyZW50IGZyZXF1ZW5jeSBhbmQgdGhlCm1heGltdW0gc3VwcG9ydGVk
IGZyZXF1ZW5jeSByZWNvcmRlZCBieSB0aGUgY3B1ZnJlcSBwb2xpY3kuIFRoZQpzZXR0aW5nIG9m
IHRoaXMgc2NhbGUgZmFjdG9yIGlzIHRyaWdnZXJlZCBmcm9tIGNwdWZyZXEgZHJpdmVycyBieQpj
YWxsaW5nIGFyY2hfc2V0X2ZyZXFfc2NhbGUuIFRoZSBjdXJyZW50IGZyZXF1ZW5jeSB1c2VkIGlu
IGNvbXB1dGF0aW9uCmlzIHRoZSBmcmVxdWVuY3kgcmVxdWVzdGVkIGJ5IGEgZ292ZXJub3IsIGJ1
dCBpdCBtYXkgbm90IGJlIHRoZQpmcmVxdWVuY3kgdGhhdCB3YXMgaW1wbGVtZW50ZWQgYnkgdGhl
IHBsYXRmb3JtLgoKVGhpcyBjb3JyZWN0aW9uIGZhY3RvciBjYW4gYWxzbyBiZSBvYnRhaW5lZCB1
c2luZyBhIGNvcmUgY291bnRlciBhbmQgYQpjb25zdGFudCBjb3VudGVyIHRvIGdldCBpbmZvcm1h
dGlvbiBvbiB0aGUgcGVyZm9ybWFuY2UgKGZyZXF1ZW5jeSBiYXNlZApvbmx5KSBvYnRhaW5lZCBp
biBhIHBlcmlvZCBvZiB0aW1lLiBUaGlzIHdpbGwgbW9yZSBhY2N1cmF0ZWx5IHJlZmxlY3QKdGhl
IGFjdHVhbCBjdXJyZW50IGZyZXF1ZW5jeSBvZiB0aGUgQ1BVLCBjb21wYXJlZCB3aXRoIHRoZSBh
bHRlcm5hdGl2ZQppbXBsZW1lbnRhdGlvbiB0aGF0IHJlZmxlY3RzIHRoZSByZXF1ZXN0IG9mIGEg
cGVyZm9ybWFuY2UgbGV2ZWwgZnJvbQp0aGUgT1MuCgpUaGVyZWZvcmUsIGltcGxlbWVudCBhcmNo
X3NjYWxlX2ZyZXFfdGljayB0byB1c2UgYWN0aXZpdHkgbW9uaXRvcnMsIGlmCnByZXNlbnQsIGZv
ciB0aGUgY29tcHV0YXRpb24gb2YgdGhlIGZyZXF1ZW5jeSBzY2FsZSBmYWN0b3IuCgpUaGUgdXNl
IG9mIEFNVSBjb3VudGVycyBkZXBlbmRzIG9uOgogLSBDT05GSUdfQVJNNjRfQU1VX0VYVE4gLSBk
ZXBlbnRzIG9uIHRoZSBBTVUgZXh0ZW5zaW9uIGJlaW5nIHByZXNlbnQKIC0gQ09ORklHX0NQVV9G
UkVRIC0gdGhlIGN1cnJlbnQgZnJlcXVlbmN5IG9idGFpbmVkIHVzaW5nIGNvdW50ZXIKICAgaW5m
b3JtYXRpb24gaXMgZGl2aWRlZCBieSB0aGUgbWF4aW11bSBmcmVxdWVuY3kgb2J0YWluZWQgZnJv
bSB0aGUKICAgY3B1ZnJlcSBwb2xpY3kuCgpXaGlsZSBpdCBpcyBwb3NzaWJsZSB0byBoYXZlIGEg
Y29tYmluYXRpb24gb2YgQ1BVcyBpbiB0aGUgc3lzdGVtIHdpdGgKYW5kIHdpdGhvdXQgc3VwcG9y
dCBmb3IgYWN0aXZpdHkgbW9uaXRvcnMsIHRoZSB1c2Ugb2YgY291bnRlcnMgZm9yCmZyZXF1ZW5j
eSBpbnZhcmlhbmNlIGlzIG9ubHkgZW5hYmxlZCBmb3IgYSBDUFUgaWYgYWxsIHJlbGF0ZWQgQ1BV
cwooQ1BVcyBpbiB0aGUgc2FtZSBmcmVxdWVuY3kgZG9tYWluKSBzdXBwb3J0IGFuZCBoYXZlIGVu
YWJsZWQgdGhlIGNvcmUKYW5kIGNvbnN0YW50IGFjdGl2aXR5IG1vbml0b3IgY291bnRlcnMuIElu
IHRoaXMgd2F5LCB0aGVyZSBpcyBhIGNsZWFyCnNlcGFyYXRpb24gYmV0d2VlbiB0aGUgcG9saWNp
ZXMgZm9yIHdoaWNoIGFyY2hfc2V0X2ZyZXFfc2NhbGUgKGNwdWZyZXEKYmFzZWQgRklFKSBpcyB1
c2VkLCBhbmQgdGhlIHBvbGljaWVzIGZvciB3aGljaCBhcmNoX3NjYWxlX2ZyZXFfdGljawooY291
bnRlciBiYXNlZCBGSUUpIGlzIHVzZWQgdG8gc2V0IHRoZSBmcmVxdWVuY3kgc2NhbGUgZmFjdG9y
LiBGb3IKdGhpcyBwdXJwb3NlLCBhIGxhdGVfaW5pdGNhbGxfc3luYyBpcyByZWdpc3RlcmVkIHRv
IHRyaWdnZXIgdmFsaWRhdGlvbgp3b3JrIGZvciBwb2xpY2llcyB0aGF0IHdpbGwgZW5hYmxlIG9y
IGRpc2FibGUgdGhlIHVzZSBvZiBBTVUgY291bnRlcnMKZm9yIGZyZXF1ZW5jeSBpbnZhcmlhbmNl
LiBJZiBDT05GSUdfQ1BVX0ZSRVEgaXMgbm90IGRlZmluZWQsIHRoZSB1c2UKb2YgY291bnRlcnMg
aXMgZW5hYmxlZCBvbiBhbGwgQ1BVcyBvbmx5IGlmIGFsbCBwb3NzaWJsZSBDUFVzIGNvcnJlY3Rs
eQpzdXBwb3J0IHRoZSBuZWNlc3NhcnkgY291bnRlcnMuCgpTaWduZWQtb2ZmLWJ5OiBJb25lbGEg
Vm9pbmVzY3UgPGlvbmVsYS52b2luZXNjdUBhcm0uY29tPgpDYzogQ2F0YWxpbiBNYXJpbmFzIDxj
YXRhbGluLm1hcmluYXNAYXJtLmNvbT4KQ2M6IFdpbGwgRGVhY29uIDx3aWxsQGtlcm5lbC5vcmc+
CkNjOiBTdWRlZXAgSG9sbGEgPHN1ZGVlcC5ob2xsYUBhcm0uY29tPgotLS0KIGFyY2gvYXJtNjQv
aW5jbHVkZS9hc20vdG9wb2xvZ3kuaCB8ICAxNSArKysKIGFyY2gvYXJtNjQva2VybmVsL2NwdWZl
YXR1cmUuYyAgICB8ICAgNCArCiBhcmNoL2FybTY0L2tlcm5lbC90b3BvbG9neS5jICAgICAgfCAx
NzQgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2Jhc2UvYXJjaF90b3Bv
bG9neS5jICAgICAgfCAgIDggKysKIGluY2x1ZGUvbGludXgvdG9wb2xvZ3kuaCAgICAgICAgICB8
ICAgNyArKwogNSBmaWxlcyBjaGFuZ2VkLCAyMDggaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBh
L2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vdG9wb2xvZ3kuaCBiL2FyY2gvYXJtNjQvaW5jbHVkZS9h
c20vdG9wb2xvZ3kuaAppbmRleCBhNGQ5NDVkYjk1YTIuLjY0MTVhNmVlZDk2ZCAxMDA2NDQKLS0t
IGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS90b3BvbG9neS5oCisrKyBiL2FyY2gvYXJtNjQvaW5j
bHVkZS9hc20vdG9wb2xvZ3kuaApAQCAtMTYsNiArMTYsMjEgQEAgaW50IHBjaWJ1c190b19ub2Rl
KHN0cnVjdCBwY2lfYnVzICpidXMpOwogCiAjaW5jbHVkZSA8bGludXgvYXJjaF90b3BvbG9neS5o
PgogCisjaWZkZWYgQ09ORklHX0FSTTY0X0FNVV9FWFROCisvKgorICogUmVwbGFjZSBkZWZhdWx0
IGZ1bmN0aW9uIHRoYXQgc2lnbmFscyB1c2Ugb2YgY291bnRlcnMKKyAqIGZvciBmcmVxdWVuY3kg
aW52YXJpYW5jZSBmb3IgZ2l2ZW4gQ1BVcy4KKyAqLworYm9vbCB0b3BvbG9neV9jcHVfZnJlcV9j
b3VudGVycyhzdHJ1Y3QgY3B1bWFzayAqY3B1cyk7CisjZGVmaW5lIGFyY2hfY3B1X2ZyZXFfY291
bnRlcnMgdG9wb2xvZ3lfY3B1X2ZyZXFfY291bnRlcnMKKy8qCisgKiBSZXBsYWNlIHRhc2sgc2No
ZWR1bGVyJ3MgZGVmYXVsdCBjb3VudGVyLWJhc2VkCisgKiBmcmVxdWVuY3ktaW52YXJpYW5jZSBz
Y2FsZSBmYWN0b3Igc2V0dGluZy4KKyAqLwordm9pZCB0b3BvbG9neV9zY2FsZV9mcmVxX3RpY2so
dm9pZCk7CisjZGVmaW5lIGFyY2hfc2NhbGVfZnJlcV90aWNrIHRvcG9sb2d5X3NjYWxlX2ZyZXFf
dGljaworI2VuZGlmIC8qIENPTkZJR19BUk02NF9BTVVfRVhUTiAqLworCiAvKiBSZXBsYWNlIHRh
c2sgc2NoZWR1bGVyJ3MgZGVmYXVsdCBmcmVxdWVuY3ktaW52YXJpYW50IGFjY291bnRpbmcgKi8K
ICNkZWZpbmUgYXJjaF9zY2FsZV9mcmVxX2NhcGFjaXR5IHRvcG9sb2d5X2dldF9mcmVxX3NjYWxl
CiAKZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQva2VybmVsL2NwdWZlYXR1cmUuYyBiL2FyY2gvYXJt
NjQva2VybmVsL2NwdWZlYXR1cmUuYwppbmRleCA3NTYwYWFkOWUxNmIuLmQ3MTIwMDRlMGE2NyAx
MDA2NDQKLS0tIGEvYXJjaC9hcm02NC9rZXJuZWwvY3B1ZmVhdHVyZS5jCisrKyBiL2FyY2gvYXJt
NjQva2VybmVsL2NwdWZlYXR1cmUuYwpAQCAtMTE2OSwxMiArMTE2OSwxNiBAQCBib29sIGNwdV9o
YXNfYW11X2ZlYXQoaW50IGNwdSkKIAlyZXR1cm4gY3B1bWFza190ZXN0X2NwdShjcHUsICZhbXVf
Y3B1cyk7CiB9CiAKKy8qIEluaXRpYWxpemUgdGhlIHVzZSBvZiBBTVUgY291bnRlcnMgZm9yIGZy
ZXF1ZW5jeSBpbnZhcmlhbmNlICovCitleHRlcm4gdm9pZCBpbml0X2NwdV9mcmVxX2ludmFyaWFu
Y2VfY291bnRlcnModm9pZCk7CisKIHN0YXRpYyB2b2lkIGNwdV9hbXVfZW5hYmxlKHN0cnVjdCBh
cm02NF9jcHVfY2FwYWJpbGl0aWVzIGNvbnN0ICpjYXApCiB7CiAJaWYgKGhhc19jcHVpZF9mZWF0
dXJlKGNhcCwgU0NPUEVfTE9DQUxfQ1BVKSkgewogCQlwcl9pbmZvKCJkZXRlY3RlZCBDUFUlZDog
QWN0aXZpdHkgTW9uaXRvcnMgVW5pdCAoQU1VKVxuIiwKIAkJCXNtcF9wcm9jZXNzb3JfaWQoKSk7
CiAJCWNwdW1hc2tfc2V0X2NwdShzbXBfcHJvY2Vzc29yX2lkKCksICZhbXVfY3B1cyk7CisJCWlu
aXRfY3B1X2ZyZXFfaW52YXJpYW5jZV9jb3VudGVycygpOwogCX0KIH0KIApkaWZmIC0tZ2l0IGEv
YXJjaC9hcm02NC9rZXJuZWwvdG9wb2xvZ3kuYyBiL2FyY2gvYXJtNjQva2VybmVsL3RvcG9sb2d5
LmMKaW5kZXggZmE5NTI4ZGZkMGNlLi43NjA2Y2JkNjM1MTcgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJt
NjQva2VybmVsL3RvcG9sb2d5LmMKKysrIGIvYXJjaC9hcm02NC9rZXJuZWwvdG9wb2xvZ3kuYwpA
QCAtMTQsNiArMTQsNyBAQAogI2luY2x1ZGUgPGxpbnV4L2FjcGkuaD4KICNpbmNsdWRlIDxsaW51
eC9hcmNoX3RvcG9sb2d5Lmg+CiAjaW5jbHVkZSA8bGludXgvY2FjaGVpbmZvLmg+CisjaW5jbHVk
ZSA8bGludXgvY3B1ZnJlcS5oPgogI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KICNpbmNsdWRlIDxs
aW51eC9wZXJjcHUuaD4KIApAQCAtMTIwLDQgKzEyMSwxNzcgQEAgaW50IF9faW5pdCBwYXJzZV9h
Y3BpX3RvcG9sb2d5KHZvaWQpCiB9CiAjZW5kaWYKIAorI2lmZGVmIENPTkZJR19BUk02NF9BTVVf
RVhUTgogCisjdW5kZWYgcHJfZm10CisjZGVmaW5lIHByX2ZtdChmbXQpICJBTVU6ICIgZm10CisK
K3N0YXRpYyBERUZJTkVfUEVSX0NQVV9SRUFEX01PU1RMWSh1bnNpZ25lZCBsb25nLCBhcmNoX21h
eF9mcmVxX3NjYWxlKTsKK3N0YXRpYyBERUZJTkVfUEVSX0NQVSh1NjQsIGFyY2hfY29uc3RfY3lj
bGVzX3ByZXYpOworc3RhdGljIERFRklORV9QRVJfQ1BVKHU2NCwgYXJjaF9jb3JlX2N5Y2xlc19w
cmV2KTsKK3N0YXRpYyBjcHVtYXNrX3Zhcl90IGFtdV9maWVfY3B1czsKKworLyogSW5pdGlhbGl6
ZSBjb3VudGVyIHJlZmVyZW5jZSBwZXItY3B1IHZhcmlhYmxlcyBmb3IgdGhlIGN1cnJlbnQgQ1BV
ICovCit2b2lkIGluaXRfY3B1X2ZyZXFfaW52YXJpYW5jZV9jb3VudGVycyh2b2lkKQoreworCXRo
aXNfY3B1X3dyaXRlKGFyY2hfY29yZV9jeWNsZXNfcHJldiwKKwkJICAgICAgIHJlYWRfc3lzcmVn
X3MoU1lTX0FNRVZDTlRSMF9DT1JFX0VMMCkpOworCXRoaXNfY3B1X3dyaXRlKGFyY2hfY29uc3Rf
Y3ljbGVzX3ByZXYsCisJCSAgICAgICByZWFkX3N5c3JlZ19zKFNZU19BTUVWQ05UUjBfQ09OU1Rf
RUwwKSk7Cit9CisKK3N0YXRpYyBpbnQgdmFsaWRhdGVfY3B1X2ZyZXFfaW52YXJpYW5jZV9jb3Vu
dGVycyhpbnQgY3B1KQoreworCXU2NCBtYXhfZnJlcV9oeiwgcmF0aW87CisKKwlpZiAoIWNwdV9o
YXNfYW11X2ZlYXQoY3B1KSkgeworCQlwcl9kZWJ1ZygiQ1BVJWQ6IGNvdW50ZXJzIGFyZSBub3Qg
c3VwcG9ydGVkLlxuIiwgY3B1KTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJaWYgKHVubGlr
ZWx5KCFwZXJfY3B1KGFyY2hfY29uc3RfY3ljbGVzX3ByZXYsIGNwdSkgfHwKKwkJICAgICAhcGVy
X2NwdShhcmNoX2NvcmVfY3ljbGVzX3ByZXYsIGNwdSkpKSB7CisJCXByX2RlYnVnKCJDUFUlZDog
Y3ljbGUgY291bnRlcnMgYXJlIG5vdCBlbmFibGVkLlxuIiwgY3B1KTsKKwkJcmV0dXJuIC1FSU5W
QUw7CisJfQorCisJLyogQ29udmVydCBtYXhpbXVtIGZyZXF1ZW5jeSBmcm9tIEtIeiB0byBIeiBh
bmQgdmFsaWRhdGUgKi8KKwltYXhfZnJlcV9oeiA9IGNwdWZyZXFfZ2V0X2h3X21heF9mcmVxKGNw
dSkgKiAxMDAwOworCWlmICh1bmxpa2VseSghbWF4X2ZyZXFfaHopKSB7CisJCXByX2RlYnVnKCJD
UFUlZDogaW52YWxpZCBtYXhpbXVtIGZyZXF1ZW5jeS5cbiIsIGNwdSk7CisJCXJldHVybiAtRUlO
VkFMOworCX0KKworCS8qCisJICogUHJlLWNvbXB1dGUgdGhlIGZpeGVkIHJhdGlvIGJldHdlZW4g
dGhlIGZyZXF1ZW5jeSBvZiB0aGUgY29uc3RhbnQKKwkgKiBjb3VudGVyIGFuZCB0aGUgbWF4aW11
bSBmcmVxdWVuY3kgb2YgdGhlIENQVS4KKwkgKgorCSAqCQkJICAgICAgY29uc3RfZnJlcQorCSAq
IGFyY2hfbWF4X2ZyZXFfc2NhbGUgPSAgIC0tLS0tLS0tLS0tLS0tLS0gKiBTQ0hFRF9DQVBBQ0lU
WV9TQ0FMRcKyCisJICoJCQkgICBjcHVpbmZvX21heF9mcmVxCisJICoKKwkgKiBXZSB1c2UgYSBm
YWN0b3Igb2YgMiAqIFNDSEVEX0NBUEFDSVRZX1NISUZUIC0+IFNDSEVEX0NBUEFDSVRZX1NDQUxF
wrIKKwkgKiBpbiBvcmRlciB0byBlbnN1cmUgYSBnb29kIHJlc29sdXRpb24gZm9yIGFyY2hfbWF4
X2ZyZXFfc2NhbGUgZm9yCisJICogdmVyeSBsb3cgYXJjaCB0aW1lciBmcmVxdWVuY2llcyAoZG93
biB0byB0aGUgS0h6IHJhbmdlIHdoaWNoIHNob3VsZAorCSAqIGJlIHVubGlrZWx5KS4KKwkgKi8K
KwlyYXRpbyA9ICh1NjQpYXJjaF90aW1lcl9nZXRfcmF0ZSgpIDw8ICgyICogU0NIRURfQ0FQQUNJ
VFlfU0hJRlQpOworCXJhdGlvID0gZGl2NjRfdTY0KHJhdGlvLCBtYXhfZnJlcV9oeik7CisJaWYg
KCFyYXRpbykgeworCQlXQVJOX09OQ0UoMSwgIlN5c3RlbSB0aW1lciBmcmVxdWVuY3kgdG9vIGxv
dy5cbiIpOworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlwZXJfY3B1KGFyY2hfbWF4X2ZyZXFf
c2NhbGUsIGNwdSkgPSAodW5zaWduZWQgbG9uZylyYXRpbzsKKworCXJldHVybiAwOworfQorCitz
dGF0aWMgaW5saW5lIGludAorZW5hYmxlX3BvbGljeV9mcmVxX2NvdW50ZXJzKGludCBjcHUsIGNw
dW1hc2tfdmFyX3QgdmFsaWRfY3B1cykKK3sKKwlzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSA9IGNwdWZyZXFfY3B1X2dldChjcHUpOworCisJaWYgKCFwb2xpY3kpIHsKKwkJcHJfZGVidWco
IkNQVSVkOiBObyBjcHVmcmVxIHBvbGljeSBmb3VuZC5cbiIsIGNwdSk7CisJCXJldHVybiBmYWxz
ZTsKKwl9CisKKwlpZiAoY3B1bWFza19zdWJzZXQocG9saWN5LT5yZWxhdGVkX2NwdXMsIHZhbGlk
X2NwdXMpKQorCQljcHVtYXNrX29yKGFtdV9maWVfY3B1cywgcG9saWN5LT5yZWxhdGVkX2NwdXMs
CisJCQkgICBhbXVfZmllX2NwdXMpOworCisJY3B1ZnJlcV9jcHVfcHV0KHBvbGljeSk7CisKKwly
ZXR1cm4gdHJ1ZTsKK30KKworc3RhdGljIERFRklORV9TVEFUSUNfS0VZX0ZBTFNFKGFtdV9maWVf
a2V5KTsKKyNkZWZpbmUgYW11X2ZyZXFfaW52YXJpYW50KCkgc3RhdGljX2JyYW5jaF91bmxpa2Vs
eSgmYW11X2ZpZV9rZXkpCisKK3N0YXRpYyBpbnQgX19pbml0IGluaXRfYW11X2ZpZSh2b2lkKQor
eworCWNwdW1hc2tfdmFyX3QgdmFsaWRfY3B1czsKKwlib29sIGhhdmVfcG9saWN5ID0gZmFsc2U7
CisJaW50IGNwdTsKKworCWlmICghemFsbG9jX2NwdW1hc2tfdmFyKCZ2YWxpZF9jcHVzLCBHRlBf
S0VSTkVMKSB8fAorCSAgICAhemFsbG9jX2NwdW1hc2tfdmFyKCZhbXVfZmllX2NwdXMsIEdGUF9L
RVJORUwpKQorCQlyZXR1cm4gLUVOT01FTTsKKworCWZvcl9lYWNoX3ByZXNlbnRfY3B1KGNwdSkg
eworCQlpZiAodmFsaWRhdGVfY3B1X2ZyZXFfaW52YXJpYW5jZV9jb3VudGVycyhjcHUpKQorCQkJ
Y29udGludWU7CisJCWNwdW1hc2tfc2V0X2NwdShjcHUsIHZhbGlkX2NwdXMpOworCQloYXZlX3Bv
bGljeSB8PSBlbmFibGVfcG9saWN5X2ZyZXFfY291bnRlcnMoY3B1LCB2YWxpZF9jcHVzKTsKKwl9
CisKKwkvKgorCSAqIElmIHdlIGFyZSBub3QgcmVzdHJpY3RlZCBieSBjcHVmcmVxIHBvbGljaWVz
LCB3ZSBvbmx5IGVuYWJsZQorCSAqIHRoZSB1c2Ugb2YgdGhlIEFNVSBmZWF0dXJlIGZvciBGSUUg
aWYgYWxsIENQVXMgc3VwcG9ydCBBTVUuCisJICogT3RoZXJ3aXNlLCBlbmFibGVfcG9saWN5X2Zy
ZXFfY291bnRlcnMgaGFzIGFscmVhZHkgZW5hYmxlZAorCSAqIHBvbGljeSBjcHVzLgorCSAqLwor
CWlmICghaGF2ZV9wb2xpY3kgJiYgY3B1bWFza19lcXVhbCh2YWxpZF9jcHVzLCBjcHVfcHJlc2Vu
dF9tYXNrKSkKKwkJY3B1bWFza19vcihhbXVfZmllX2NwdXMsIGFtdV9maWVfY3B1cywgdmFsaWRf
Y3B1cyk7CisKKwlpZiAoIWNwdW1hc2tfZW1wdHkoYW11X2ZpZV9jcHVzKSkgeworCQlwcl9pbmZv
KCJDUFVzWyUqcGJsXTogY291bnRlcnMgd2lsbCBiZSB1c2VkIGZvciBGSUUuIiwKKwkJCWNwdW1h
c2tfcHJfYXJncyhhbXVfZmllX2NwdXMpKTsKKwkJc3RhdGljX2JyYW5jaF9lbmFibGUoJmFtdV9m
aWVfa2V5KTsKKwl9CisKKwlmcmVlX2NwdW1hc2tfdmFyKHZhbGlkX2NwdXMpOworCisJcmV0dXJu
IDA7Cit9CitsYXRlX2luaXRjYWxsX3N5bmMoaW5pdF9hbXVfZmllKTsKKworYm9vbCB0b3BvbG9n
eV9jcHVfZnJlcV9jb3VudGVycyhzdHJ1Y3QgY3B1bWFzayAqY3B1cykKK3sKKwlyZXR1cm4gYW11
X2ZyZXFfaW52YXJpYW50KCkgJiYKKwkgICAgICAgY3B1bWFza19zdWJzZXQoY3B1cywgYW11X2Zp
ZV9jcHVzKTsKK30KKwordm9pZCB0b3BvbG9neV9zY2FsZV9mcmVxX3RpY2sodm9pZCkKK3sKKwl1
NjQgcHJldl9jb3JlX2NudCwgcHJldl9jb25zdF9jbnQ7CisJdTY0IGNvcmVfY250LCBjb25zdF9j
bnQsIHNjYWxlOworCWludCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CisKKwlpZiAoIWFtdV9m
cmVxX2ludmFyaWFudCgpKQorCQlyZXR1cm47CisKKwlpZiAoIWNwdW1hc2tfdGVzdF9jcHUoY3B1
LCBhbXVfZmllX2NwdXMpKQorCQlyZXR1cm47CisKKwljb25zdF9jbnQgPSByZWFkX3N5c3JlZ19z
KFNZU19BTUVWQ05UUjBfQ09OU1RfRUwwKTsKKwljb3JlX2NudCA9IHJlYWRfc3lzcmVnX3MoU1lT
X0FNRVZDTlRSMF9DT1JFX0VMMCk7CisJcHJldl9jb25zdF9jbnQgPSB0aGlzX2NwdV9yZWFkKGFy
Y2hfY29uc3RfY3ljbGVzX3ByZXYpOworCXByZXZfY29yZV9jbnQgPSB0aGlzX2NwdV9yZWFkKGFy
Y2hfY29yZV9jeWNsZXNfcHJldik7CisKKwlpZiAodW5saWtlbHkoY29yZV9jbnQgPD0gcHJldl9j
b3JlX2NudCB8fAorCQkgICAgIGNvbnN0X2NudCA8PSBwcmV2X2NvbnN0X2NudCkpCisJCWdvdG8g
c3RvcmVfYW5kX2V4aXQ7CisKKwkvKgorCSAqCSAgICAvXGNvcmUgICAgYXJjaF9tYXhfZnJlcV9z
Y2FsZQorCSAqIHNjYWxlID0gIC0tLS0tLS0gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLQorCSAqCSAg
ICAvXGNvbnN0ICAgU0NIRURfQ0FQQUNJVFlfU0NBTEUKKwkgKgorCSAqIFNlZSB2YWxpZGF0ZV9j
cHVfZnJlcV9pbnZhcmlhbmNlX2NvdW50ZXJzKCkgZm9yIGRldGFpbHMgb24KKwkgKiBhcmNoX21h
eF9mcmVxX3NjYWxlIGFuZCB0aGUgdXNlIG9mIFNDSEVEX0NBUEFDSVRZX1NISUZULgorCSAqLwor
CXNjYWxlID0gY29yZV9jbnQgLSBwcmV2X2NvcmVfY250OworCXNjYWxlICo9IHRoaXNfY3B1X3Jl
YWQoYXJjaF9tYXhfZnJlcV9zY2FsZSk7CisJc2NhbGUgPSBkaXY2NF91NjQoc2NhbGUgPj4gU0NI
RURfQ0FQQUNJVFlfU0hJRlQsCisJCQkgIGNvbnN0X2NudCAtIHByZXZfY29uc3RfY250KTsKKwor
CXNjYWxlID0gbWluX3QodW5zaWduZWQgbG9uZywgc2NhbGUsIFNDSEVEX0NBUEFDSVRZX1NDQUxF
KTsKKwl0aGlzX2NwdV93cml0ZShmcmVxX3NjYWxlLCAodW5zaWduZWQgbG9uZylzY2FsZSk7CisK
K3N0b3JlX2FuZF9leGl0OgorCXRoaXNfY3B1X3dyaXRlKGFyY2hfY29yZV9jeWNsZXNfcHJldiwg
Y29yZV9jbnQpOworCXRoaXNfY3B1X3dyaXRlKGFyY2hfY29uc3RfY3ljbGVzX3ByZXYsIGNvbnN0
X2NudCk7Cit9CisjZW5kaWYgLyogQ09ORklHX0FSTTY0X0FNVV9FWFROICovCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2Jhc2UvYXJjaF90b3BvbG9neS5jIGIvZHJpdmVycy9iYXNlL2FyY2hfdG9wb2xv
Z3kuYwppbmRleCAxZWI4MWYxMTM3ODYuLjFhYjJiNzUwM2Q2MyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9iYXNlL2FyY2hfdG9wb2xvZ3kuYworKysgYi9kcml2ZXJzL2Jhc2UvYXJjaF90b3BvbG9neS5j
CkBAIC0yOSw2ICsyOSwxNCBAQCB2b2lkIGFyY2hfc2V0X2ZyZXFfc2NhbGUoc3RydWN0IGNwdW1h
c2sgKmNwdXMsIHVuc2lnbmVkIGxvbmcgY3VyX2ZyZXEsCiAJdW5zaWduZWQgbG9uZyBzY2FsZTsK
IAlpbnQgaTsKIAorCS8qCisJICogSWYgdGhlIHVzZSBvZiBjb3VudGVycyBmb3IgRklFIGlzIGVu
YWJsZWQsIGp1c3QgcmV0dXJuIGFzIHdlIGRvbid0CisJICogd2FudCB0byB1cGRhdGUgdGhlIHNj
YWxlIGZhY3RvciB3aXRoIGluZm9ybWF0aW9uIGZyb20gQ1BVRlJFUS4KKwkgKiBJbnN0ZWFkIHRo
ZSBzY2FsZSBmYWN0b3Igd2lsbCBiZSB1cGRhdGVkIGZyb20gYXJjaF9zY2FsZV9mcmVxX3RpY2su
CisJICovCisJaWYgKGFyY2hfY3B1X2ZyZXFfY291bnRlcnMoY3B1cykpCisJCXJldHVybjsKKwog
CXNjYWxlID0gKGN1cl9mcmVxIDw8IFNDSEVEX0NBUEFDSVRZX1NISUZUKSAvIG1heF9mcmVxOwog
CiAJZm9yX2VhY2hfY3B1KGksIGNwdXMpCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3RvcG9s
b2d5LmggYi9pbmNsdWRlL2xpbnV4L3RvcG9sb2d5LmgKaW5kZXggZWIyZmU2ZWRkNzNjLi4zOTdh
YWQ2YWUxNjMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvdG9wb2xvZ3kuaAorKysgYi9pbmNs
dWRlL2xpbnV4L3RvcG9sb2d5LmgKQEAgLTIyNyw1ICsyMjcsMTIgQEAgc3RhdGljIGlubGluZSBj
b25zdCBzdHJ1Y3QgY3B1bWFzayAqY3B1X2NwdV9tYXNrKGludCBjcHUpCiAJcmV0dXJuIGNwdW1h
c2tfb2Zfbm9kZShjcHVfdG9fbm9kZShjcHUpKTsKIH0KIAorI2lmbmRlZiBhcmNoX2NwdV9mcmVx
X2NvdW50ZXJzCitzdGF0aWMgX19hbHdheXNfaW5saW5lCitib29sIGFyY2hfY3B1X2ZyZXFfY291
bnRlcnMoc3RydWN0IGNwdW1hc2sgKmNwdXMpCit7CisJcmV0dXJuIGZhbHNlOworfQorI2VuZGlm
CiAKICNlbmRpZiAvKiBfTElOVVhfVE9QT0xPR1lfSCAqLwotLSAKMi4xNy4xCgoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KbGludXgtYXJtLWtlcm5lbCBt
YWlsaW5nIGxpc3QKbGludXgtYXJtLWtlcm5lbEBsaXN0cy5pbmZyYWRlYWQub3JnCmh0dHA6Ly9s
aXN0cy5pbmZyYWRlYWQub3JnL21haWxtYW4vbGlzdGluZm8vbGludXgtYXJtLWtlcm5lbAo=
