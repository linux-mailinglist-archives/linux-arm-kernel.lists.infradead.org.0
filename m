Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id CD067BBBA
	for <lists+linux-arm-kernel@lfdr.de>; Sun, 28 Apr 2019 23:39:17 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-Id:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=oi1TELTIbBPuDZnGACwF8TZO4Et9bBDZxt8Rv1XmylM=; b=aO16aGvNyIYVR8
	u+NQeoiq7PxYN/1C2Mde0NiuaoTqmqMqvEuD6uXnmIfnDD1VIAubdYRatZPdZ0ZaAkKNHgqSCFkZh
	bCEJuyZ3ILvzheG6vsnwEK2jJ+Uj06ugHf7H73Nq95+Jdm3oQBIBaqJi5jwY/gvgShcnkoGLDONXZ
	Mx7QVqKqC5fKqDHgA9hQVonFtbyCZVmiAkCb+8VfYaqqsrYn3pqyZuNg3XllxcBPsR7j3ju49bcHw
	7x+wAeqVE7kaTMnvbyaGuyB/5/VDsGeChdStOS1RLjdUeg8rNhg7q4eHtkB4XmNQnq3Dp5NEDY+xD
	Th+zTZvd4qHCk9RvXeuw==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.90_1 #2 (Red Hat Linux))
	id 1hKrVr-0001n0-CE; Sun, 28 Apr 2019 21:39:07 +0000
Received: from mail.nic.cz ([217.31.204.67])
 by bombadil.infradead.org with esmtps (Exim 4.90_1 #2 (Red Hat Linux))
 id 1hKrUh-0000ez-Vu
 for linux-arm-kernel@lists.infradead.org; Sun, 28 Apr 2019 21:38:02 +0000
Received: from dellmb.labs.office.nic.cz (unknown [172.20.6.125])
 by mail.nic.cz (Postfix) with ESMTP id 2B0D863690;
 Sun, 28 Apr 2019 23:37:50 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=nic.cz; s=default;
 t=1556487470; bh=X48jTred0OefY7CaOLkJwL6ULbkTZDPKAOMMHy4qsRY=;
 h=From:To:Date;
 b=CeF7dV6XGV8Bb0eGIAwRy5OkpTu+RFl9IMsni0DyWPEEJe1WkZl1etbLmsG4fUQin
 i7zJv4Ac09nqSCjWshQoVNmpj9xDPxbQqfprFW6O7LzCdUQALNa83zGpgo2gnWsaZ6
 3ZPPIasOM1cHYJLaJ+nJIQSqhsW4AROC94J8f5Gg=
From: =?UTF-8?q?Marek=20Beh=C3=BAn?= <marek.behun@nic.cz>
To: Olof Johansson <olof@lixom.net>
Subject: [PATCH v5 armsoc/drivers/bus+gpio 1/5] bus: Add support for Moxtet bus
Date: Sun, 28 Apr 2019 23:37:45 +0200
Message-Id: <20190428213749.7017-2-marek.behun@nic.cz>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190428213749.7017-1-marek.behun@nic.cz>
References: <20190428213749.7017-1-marek.behun@nic.cz>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.99.2 at mail
X-Virus-Status: Clean
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20190428_143756_369500_67D1EFCF 
X-CRM114-Status: GOOD (  25.46  )
X-Spam-Score: -5.2 (-----)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (-5.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -5.0 RCVD_IN_DNSWL_HI       RBL: Sender listed at https://www.dnswl.org/,
 high trust [217.31.204.67 listed in list.dnswl.org]
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: Linus Walleij <linus.walleij@linaro.org>, arm@kernel.org,
 linux-arm-kernel@lists.infradead.org,
 =?UTF-8?q?Marek=20Beh=C3=BAn?= <marek.behun@nic.cz>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

T24gdGhlIFR1cnJpcyBNb3ggcm91dGVyIGRpZmZlcmVudCBtb2R1bGVzIGNhbiBiZSBjb25uZWN0
ZWQgdG8gdGhlIG1haW4KQ1BVIGJvYXJkOiBjdXJyZW50bHkgYSBtb2R1bGUgd2l0aCBhIFNGUCBj
YWdlLCBhIG1vZHVsZSB3aXRoIE1pbmlQQ0llCmNvbm5lY3RvciwgYSBQQ0llIHBhc3MtdGhyb3Vn
aCBNaW5pUENJZSBjb25uZWN0b3IgbW9kdWxlLCBhIDQtcG9ydApzd2l0Y2ggbW9kdWxlLCBhbiA4
LXBvcnQgc3dpdGNoIG1vZHVsZSwgYW5kIGEgNC1wb3J0IFVTQjMgbW9kdWxlLgoKRm9yIGV4YW1w
bGU6CiAgW0NQVV0tW1BDSWUtcGFzcy10aHJvdWdoXS1bUENJZV0tWzgtcG9ydCBzd2l0Y2hdLVs4
LXBvcnQgc3dpdGNoXS1bU0ZQXQoKRWFjaCBvZiB0aGlzIG1vZHVsZXMgaGFzIGFuIGlucHV0IGFu
ZCBvdXRwdXQgc2hpZnQgcmVnaXN0ZXIsIGFuZCB0aGVzZQphcmUgY29ubmVjdGVkIHZpYSBTUEkg
dG8gdGhlIENQVSBib2FyZC4KClZpYSBTUEkgd2UgYXJlIGFibGUgdG8gZGlzY292ZXIgd2hpY2gg
bW9kdWxlcyBhcmUgY29ubmVjdGVkLCBpbiB3aGljaApvcmRlciwgYW5kIHdlIGNhbiBhbHNvIHJl
YWQgc29tZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbW9kdWxlcyAoZWcuCnRoZWlyIGludGVycnVw
dCBzdGF0dXMpLCBhbmQgY29uZmlndXJlIHRoZW0uCkZyb20gZWFjaCBtb2R1bGUgOCBiaXRzIGNh
biBiZSByZWFkIChvZiB3aGljaCBsb3cgNCBiaXRzIGlkZW50aWZ5IHRoZQptb2R1bGUpIGFuZCA4
IGJpdHMgY2FuIGJlIHdyaXR0ZW4uCgpGb3IgZXhhbXBsZSBmcm9tIHRoZSBtb2R1bGUgd2l0aCBh
IFNGUCBjYWdlIHdlIGNhbiByZWFkIHRoZSBMT1MsClRYLUZBVUxUIGFuZCBNT0QtREVGMCBzaWdu
YWxzLCB3aGlsZSB3ZSBjYW4gd3JpdGUgVFgtRElTQUJMRSBhbmQKUkFURS1TRUxFQ1Qgc2lnbmFs
cy4KClRoaXMgZHJpdmVyIGNyZWF0ZXMgYSBuZXcgYnVzIHR5cGUsIGNhbGxlZCAibW94dGV0Ii4g
Rm9yIGVhY2ggTW94IG1vZHVsZQppdCBmaW5kcyB2aWEgU1BJLCBpdCBjcmVhdGVzIGEgbmV3IGRl
dmljZSBvbiB0aGUgbW94dGV0IGJ1cyBzbyB0aGF0CmRyaXZlcnMgY2FuIGJlIHdyaXR0ZW4gZm9y
IHRoZW0uCgpJdCBhbHNvIGltcGxlbWVudHMgYSB2aXJ0dWFsIGludGVycnVwdCBjb250cm9sbGVy
IGZvciB0aGUgbW9kdWxlcyB3aGljaApzZW5kIHRoZWlyIGludGVycnVwdCBzdGF0dXMgb3ZlciB0
aGUgU1BJIHNoaWZ0IHJlZ2lzdGVyLiBUaGVzZSBtb2R1bGVzCmRvIHRoaXMgaW4gYWRkaXRpb24g
dG8gc2VuZGluZyB0aGVpciBpbnRlcnJ1cHQgc3RhdHVzIHZpYSB0aGUgc2hhcmVkCmludGVycnVw
dCBsaW5lLiBXaGVuIHRoZSBzaGFyZWQgaW50ZXJydXB0IGlzIHRyaWdnZXJlZCwgd2UgcmVhZCBm
cm9tIHRoZQpzaGlmdCByZWdpc3RlciBhbmQgaGFuZGxlIElSUXMgZm9yIGFsbCBkZXZpY2VzIHdo
aWNoIGFyZSBpbiBpbnRlcnJ1cHQuCgpUaGUgdG9wb2xvZ3kgb2YgaG93IE1veCBtb2R1bGVzIGFy
ZSBjb25uZWN0ZWQgY2FuIHRoZW4gYmUgcmVhZCBieQpsaXN0aW5nIC9zeXMvYnVzL21veHRldC9k
ZXZpY2VzLgoKU2lnbmVkLW9mZi1ieTogTWFyZWsgQmVow7puIDxtYXJlay5iZWh1bkBuaWMuY3o+
ClJldmlld2VkLWJ5OiBMaW51cyBXYWxsZWlqIDxsaW51cy53YWxsZWlqQGxpbmFyby5vcmc+Ci0t
LQogTUFJTlRBSU5FUlMgICAgICAgICAgICAgICAgICAgICAgfCAgIDcgKwogZHJpdmVycy9idXMv
S2NvbmZpZyAgICAgICAgICAgICAgfCAgMTAgKwogZHJpdmVycy9idXMvTWFrZWZpbGUgICAgICAg
ICAgICAgfCAgIDEgKwogZHJpdmVycy9idXMvbW94dGV0LmMgICAgICAgICAgICAgfCA4ODYgKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKwogaW5jbHVkZS9kdC1iaW5kaW5ncy9idXMvbW94
dGV0LmggfCAgMTYgKwogaW5jbHVkZS9saW51eC9tb3h0ZXQuaCAgICAgICAgICAgfCAxMDkgKysr
KwogNiBmaWxlcyBjaGFuZ2VkLCAxMDI5IGluc2VydGlvbnMoKykKIGNyZWF0ZSBtb2RlIDEwMDY0
NCBkcml2ZXJzL2J1cy9tb3h0ZXQuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvZHQtYmlu
ZGluZ3MvYnVzL21veHRldC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC9tb3h0
ZXQuaAoKZGlmZiAtLWdpdCBhL01BSU5UQUlORVJTIGIvTUFJTlRBSU5FUlMKaW5kZXggNDNiMzZk
YmVkNDhlLi42MzBhZDkyNGQ4ZDUgMTAwNjQ0Ci0tLSBhL01BSU5UQUlORVJTCisrKyBiL01BSU5U
QUlORVJTCkBAIC0xNTM3LDYgKzE1MzcsMTMgQEAgRjoJZHJpdmVycy9jbG9ja3NvdXJjZS90aW1l
ci1hdGxhczcuYwogTjoJW15hLXpdc2lyZgogWDoJZHJpdmVycy9nbnNzCiAKK0FSTS9DWi5OSUMg
VFVSUklTIE1PWCBTVVBQT1JUCitNOglNYXJlayBCZWh1biA8bWFyZWsuYmVodW5AbmljLmN6Pgor
VzoJaHR0cDovL21veC50dXJyaXMuY3oKK1M6CU1haW50YWluZWQKK0Y6CWluY2x1ZGUvbGludXgv
bW94dGV0LmgKK0Y6CWRyaXZlcnMvYnVzL21veHRldC5jCisKIEFSTS9FQlNBMTEwIE1BQ0hJTkUg
U1VQUE9SVAogTToJUnVzc2VsbCBLaW5nIDxsaW51eEBhcm1saW51eC5vcmcudWs+CiBMOglsaW51
eC1hcm0ta2VybmVsQGxpc3RzLmluZnJhZGVhZC5vcmcgKG1vZGVyYXRlZCBmb3Igbm9uLXN1YnNj
cmliZXJzKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9idXMvS2NvbmZpZyBiL2RyaXZlcnMvYnVzL0tj
b25maWcKaW5kZXggMTg1MTExMmNjYzI5Li42YjMzMTA2MWQzNGIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvYnVzL0tjb25maWcKKysrIGIvZHJpdmVycy9idXMvS2NvbmZpZwpAQCAtMjksNiArMjksMTYg
QEAgY29uZmlnIEJSQ01TVEJfR0lTQl9BUkIKIAkgIGFyYml0ZXIuIFRoaXMgZHJpdmVyIHByb3Zp
ZGVzIHRpbWVvdXQgYW5kIHRhcmdldCBhYm9ydCBlcnJvciBoYW5kbGluZwogCSAgYW5kIGludGVy
bmFsIGJ1cyBtYXN0ZXIgZGVjb2RpbmcuCiAKK2NvbmZpZyBNT1hURVQKKwl0cmlzdGF0ZSAiQ1ou
TklDIFR1cnJpcyBNb3ggbW9kdWxlIGNvbmZpZ3VyYXRpb24gYnVzIgorCWRlcGVuZHMgb24gU1BJ
X01BU1RFUiAmJiBPRgorCWhlbHAKKwkgIFNheSB5ZXMgaGVyZSB0byBhZGQgc3VwcG9ydCBmb3Ig
dGhlIG1vZHVsZSBjb25maWd1cmF0aW9uIGJ1cyBmb3VuZAorCSAgb24gQ1ouTklDJ3MgVHVycmlz
IE1veC4gVGhpcyBpcyBuZWVkZWQgZm9yIHRoZSBhYmlsaXR5IHRvIGRpc2NvdmVyCisJICB0aGUg
b3JkZXIgaW4gd2hpY2ggdGhlIG1vZHVsZXMgYXJlIGNvbm5lY3RlZCBhbmQgdG8gZ2V0L3NldCBz
b21lIG9mCisJICB0aGVpciBzZXR0aW5ncy4gRm9yIGV4YW1wbGUgdGhlIEdQSU9zIG9uIE1veCBT
RlAgbW9kdWxlIGFyZQorCSAgY29uZmlndXJlZCB0aHJvdWdoIHRoaXMgYnVzLgorCiBjb25maWcg
SElTSUxJQ09OX0xQQwogCWJvb2wgIlN1cHBvcnQgZm9yIElTQSBJL08gc3BhY2Ugb24gSGlTaWxp
Y29uIEhpcDA2LzciCiAJZGVwZW5kcyBvbiBBUk02NCAmJiAoQVJDSF9ISVNJIHx8IENPTVBJTEVf
VEVTVCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvYnVzL01ha2VmaWxlIGIvZHJpdmVycy9idXMvTWFr
ZWZpbGUKaW5kZXggY2EzMDBiMTkxNGNlLi4xNmI0M2QzNDY4YzYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvYnVzL01ha2VmaWxlCisrKyBiL2RyaXZlcnMvYnVzL01ha2VmaWxlCkBAIC04LDYgKzgsNyBA
QCBvYmotJChDT05GSUdfQVJNX0NDSSkJCSs9IGFybS1jY2kubwogCiBvYmotJChDT05GSUdfSElT
SUxJQ09OX0xQQykJKz0gaGlzaV9scGMubwogb2JqLSQoQ09ORklHX0JSQ01TVEJfR0lTQl9BUkIp
CSs9IGJyY21zdGJfZ2lzYi5vCitvYmotJChDT05GSUdfTU9YVEVUKQkJKz0gbW94dGV0Lm8KIAog
IyBEUEFBMiBmc2wtbWMgYnVzCiBvYmotJChDT05GSUdfRlNMX01DX0JVUykJKz0gZnNsLW1jLwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9idXMvbW94dGV0LmMgYi9kcml2ZXJzL2J1cy9tb3h0ZXQuYwpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjFlZTQ1NzBlN2UxNwotLS0g
L2Rldi9udWxsCisrKyBiL2RyaXZlcnMvYnVzL21veHRldC5jCkBAIC0wLDAgKzEsODg2IEBACisv
LyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorLyoKKyAqIFR1cnJpcyBNb3ggbW9k
dWxlIGNvbmZpZ3VyYXRpb24gYnVzIGRyaXZlcgorICoKKyAqIENvcHlyaWdodCAoQykgMjAxOSBN
YXJlayBCZWh1biA8bWFyZWsuYmVodW5AbmljLmN6PgorICovCisKKyNpbmNsdWRlIDxkdC1iaW5k
aW5ncy9idXMvbW94dGV0Lmg+CisjaW5jbHVkZSA8bGludXgvYml0b3BzLmg+CisjaW5jbHVkZSA8
bGludXgvZGVidWdmcy5oPgorI2luY2x1ZGUgPGxpbnV4L2ludGVycnVwdC5oPgorI2luY2x1ZGUg
PGxpbnV4L21vZHVsZS5oPgorI2luY2x1ZGUgPGxpbnV4L21veHRldC5oPgorI2luY2x1ZGUgPGxp
bnV4L211dGV4Lmg+CisjaW5jbHVkZSA8bGludXgvb2ZfZGV2aWNlLmg+CisjaW5jbHVkZSA8bGlu
dXgvb2ZfaXJxLmg+CisjaW5jbHVkZSA8bGludXgvc3BpL3NwaS5oPgorCisvKgorICogQG5hbWU6
CW1vZHVsZSBuYW1lIGZvciBzeXNmcworICogQGh3aXJxX2Jhc2U6CWJhc2UgaW5kZXggZm9yIElS
USBmb3IgdGhpcyBtb2R1bGUgKC0xIGlmIG5vIElSUXMpCisgKiBAbmlycXM6CWhvdyBtYW55IGlu
dGVycnVwdHMgZG9lcyB0aGUgc2hpZnQgcmVnaXN0ZXIgcHJvdmlkZQorICogQGRlc2M6CW1vZHVs
ZSBkZXNjcmlwdGlvbiBmb3Iga2VybmVsIGxvZworICovCitzdGF0aWMgY29uc3Qgc3RydWN0IHsK
Kwljb25zdCBjaGFyICpuYW1lOworCWludCBod2lycV9iYXNlOworCWludCBuaXJxczsKKwljb25z
dCBjaGFyICpkZXNjOworfSBtb3hfbW9kdWxlX3RhYmxlW10gPSB7CisJLyogZG8gbm90IGNoYW5n
ZSBvcmRlciBvZiB0aGlzIGFycmF5ISAqLworCXsgTlVMTCwJCSAwLAkJCTAsIE5VTEwgfSwKKwl7
ICJzZnAiLAktMSwJCQkwLCAiTU9YIEQgKFNGUCBjYWdlKSIgfSwKKwl7ICJwY2kiLAlNT1hURVRf
SVJRX1BDSSwJCTEsICJNT1ggQiAoTWluaS1QQ0llKSIgfSwKKwl7ICJ0b3BheiIsCU1PWFRFVF9J
UlFfVE9QQVosCTEsICJNT1ggQyAoNCBwb3J0IHN3aXRjaCkiIH0sCisJeyAicGVyaWRvdCIsCU1P
WFRFVF9JUlFfUEVSSURPVCgwKSwJMSwgIk1PWCBFICg4IHBvcnQgc3dpdGNoKSIgfSwKKwl7ICJ1
c2IzIiwJTU9YVEVUX0lSUV9VU0IzLAkyLCAiTU9YIEYgKFVTQiAzLjApIiB9LAorCXsgInBjaS1i
cmlkZ2UiLAktMSwJCQkwLCAiTU9YIEcgKE1pbmktUENJZSBicmlkZ2UpIiB9LAorfTsKKworc3Rh
dGljIGlubGluZSBib29sIG1veF9tb2R1bGVfa25vd24odW5zaWduZWQgaW50IGlkKQoreworCXJl
dHVybiBpZCA+PSBUVVJSSVNfTU9YX01PRFVMRV9GSVJTVCAmJiBpZCA8PSBUVVJSSVNfTU9YX01P
RFVMRV9MQVNUOworfQorCitzdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIgKm1veF9tb2R1bGVfbmFt
ZSh1bnNpZ25lZCBpbnQgaWQpCit7CisJaWYgKG1veF9tb2R1bGVfa25vd24oaWQpKQorCQlyZXR1
cm4gbW94X21vZHVsZV90YWJsZVtpZF0ubmFtZTsKKwllbHNlCisJCXJldHVybiAidW5rbm93biI7
Cit9CisKKyNkZWZpbmUgREVGX01PRFVMRV9BVFRSKG5hbWUsIGZtdCwgLi4uKQkJCQkJXAorc3Rh
dGljIHNzaXplX3QJCQkJCQkJCVwKK21vZHVsZV8jI25hbWUjI19zaG93KHN0cnVjdCBkZXZpY2Ug
KmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmEsCVwKKwkJICAgICBjaGFyICpidWYpCQkJ
CQkJXAorewkJCQkJCQkJCVwKKwlzdHJ1Y3QgbW94dGV0X2RldmljZSAqbWRldiA9IHRvX21veHRl
dF9kZXZpY2UoZGV2KTsJCVwKKwlyZXR1cm4gc3ByaW50ZihidWYsIChmbXQpLCBfX1ZBX0FSR1Nf
Xyk7CQkJXAorfQkJCQkJCQkJCVwKK3N0YXRpYyBERVZJQ0VfQVRUUl9STyhtb2R1bGVfIyNuYW1l
KQorCitERUZfTU9EVUxFX0FUVFIoaWQsICIweCV4XG4iLCBtZGV2LT5pZCk7CitERUZfTU9EVUxF
X0FUVFIobmFtZSwgIiVzXG4iLCBtb3hfbW9kdWxlX25hbWUobWRldi0+aWQpKTsKK0RFRl9NT0RV
TEVfQVRUUihkZXNjcmlwdGlvbiwgIiVzXG4iLAorCQltb3hfbW9kdWxlX2tub3duKG1kZXYtPmlk
KSA/IG1veF9tb2R1bGVfdGFibGVbbWRldi0+aWRdLmRlc2MKKwkJCQkJICAgOiAiIik7CisKK3N0
YXRpYyBzdHJ1Y3QgYXR0cmlidXRlICptb3h0ZXRfZGV2X2F0dHJzW10gPSB7CisJJmRldl9hdHRy
X21vZHVsZV9pZC5hdHRyLAorCSZkZXZfYXR0cl9tb2R1bGVfbmFtZS5hdHRyLAorCSZkZXZfYXR0
cl9tb2R1bGVfZGVzY3JpcHRpb24uYXR0ciwKKwlOVUxMLAorfTsKKworc3RhdGljIGNvbnN0IHN0
cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgbW94dGV0X2Rldl9ncm91cCA9IHsKKwkuYXR0cnMgPSBtb3h0
ZXRfZGV2X2F0dHJzLAorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAg
Km1veHRldF9kZXZfZ3JvdXBzW10gPSB7CisJJm1veHRldF9kZXZfZ3JvdXAsCisJTlVMTCwKK307
CisKK3N0YXRpYyBpbnQgbW94dGV0X21hdGNoKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGRl
dmljZV9kcml2ZXIgKmRydikKK3sKKwlzdHJ1Y3QgbW94dGV0X2RldmljZSAqbWRldiA9IHRvX21v
eHRldF9kZXZpY2UoZGV2KTsKKwlzdHJ1Y3QgbW94dGV0X2RyaXZlciAqdGRydiA9IHRvX21veHRl
dF9kcml2ZXIoZHJ2KTsKKwljb25zdCBlbnVtIHR1cnJpc19tb3hfbW9kdWxlX2lkICp0OworCisJ
aWYgKG9mX2RyaXZlcl9tYXRjaF9kZXZpY2UoZGV2LCBkcnYpKQorCQlyZXR1cm4gMTsKKworCWlm
ICghdGRydi0+aWRfdGFibGUpCisJCXJldHVybiAwOworCisJZm9yICh0ID0gdGRydi0+aWRfdGFi
bGU7ICp0OyArK3QpCisJCWlmICgqdCA9PSBtZGV2LT5pZCkKKwkJCXJldHVybiAxOworCisJcmV0
dXJuIDA7Cit9CisKK3N0cnVjdCBidXNfdHlwZSBtb3h0ZXRfYnVzX3R5cGUgPSB7CisJLm5hbWUJ
CT0gIm1veHRldCIsCisJLmRldl9ncm91cHMJPSBtb3h0ZXRfZGV2X2dyb3VwcywKKwkubWF0Y2gJ
CT0gbW94dGV0X21hdGNoLAorfTsKK0VYUE9SVF9TWU1CT0xfR1BMKG1veHRldF9idXNfdHlwZSk7
CisKK2ludCBfX21veHRldF9yZWdpc3Rlcl9kcml2ZXIoc3RydWN0IG1vZHVsZSAqb3duZXIsCisJ
CQkgICAgIHN0cnVjdCBtb3h0ZXRfZHJpdmVyICptZHJ2KQoreworCW1kcnYtPmRyaXZlci5vd25l
ciA9IG93bmVyOworCW1kcnYtPmRyaXZlci5idXMgPSAmbW94dGV0X2J1c190eXBlOworCXJldHVy
biBkcml2ZXJfcmVnaXN0ZXIoJm1kcnYtPmRyaXZlcik7Cit9CitFWFBPUlRfU1lNQk9MX0dQTChf
X21veHRldF9yZWdpc3Rlcl9kcml2ZXIpOworCitzdGF0aWMgaW50IG1veHRldF9kZXZfY2hlY2so
c3RydWN0IGRldmljZSAqZGV2LCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBtb3h0ZXRfZGV2aWNl
ICptZGV2ID0gdG9fbW94dGV0X2RldmljZShkZXYpOworCXN0cnVjdCBtb3h0ZXRfZGV2aWNlICpu
ZXdfZGV2ID0gZGF0YTsKKworCWlmIChtZGV2LT5tb3h0ZXQgPT0gbmV3X2Rldi0+bW94dGV0ICYm
IG1kZXYtPmlkID09IG5ld19kZXYtPmlkICYmCisJICAgIG1kZXYtPmlkeCA9PSBuZXdfZGV2LT5p
ZHgpCisJCXJldHVybiAtRUJVU1k7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIG1veHRl
dF9kZXZfcmVsZWFzZShzdHJ1Y3QgZGV2aWNlICpkZXYpCit7CisJc3RydWN0IG1veHRldF9kZXZp
Y2UgKm1kZXYgPSB0b19tb3h0ZXRfZGV2aWNlKGRldik7CisKKwlwdXRfZGV2aWNlKG1kZXYtPm1v
eHRldC0+ZGV2KTsKKwlrZnJlZShtZGV2KTsKK30KKworc3RhdGljIHN0cnVjdCBtb3h0ZXRfZGV2
aWNlICoKK21veHRldF9hbGxvY19kZXZpY2Uoc3RydWN0IG1veHRldCAqbW94dGV0KQoreworCXN0
cnVjdCBtb3h0ZXRfZGV2aWNlICpkZXY7CisKKwlpZiAoIWdldF9kZXZpY2UobW94dGV0LT5kZXYp
KQorCQlyZXR1cm4gTlVMTDsKKworCWRldiA9IGt6YWxsb2Moc2l6ZW9mKCpkZXYpLCBHRlBfS0VS
TkVMKTsKKwlpZiAoIWRldikgeworCQlwdXRfZGV2aWNlKG1veHRldC0+ZGV2KTsKKwkJcmV0dXJu
IE5VTEw7CisJfQorCisJZGV2LT5tb3h0ZXQgPSBtb3h0ZXQ7CisJZGV2LT5kZXYucGFyZW50ID0g
bW94dGV0LT5kZXY7CisJZGV2LT5kZXYuYnVzID0gJm1veHRldF9idXNfdHlwZTsKKwlkZXYtPmRl
di5yZWxlYXNlID0gbW94dGV0X2Rldl9yZWxlYXNlOworCisJZGV2aWNlX2luaXRpYWxpemUoJmRl
di0+ZGV2KTsKKworCXJldHVybiBkZXY7Cit9CisKK3N0YXRpYyBpbnQgbW94dGV0X2FkZF9kZXZp
Y2Uoc3RydWN0IG1veHRldF9kZXZpY2UgKmRldikKK3sKKwlzdGF0aWMgREVGSU5FX01VVEVYKGFk
ZF9tdXRleCk7CisJaW50IHJldDsKKworCWlmIChkZXYtPmlkeCA+PSBUVVJSSVNfTU9YX01BWF9N
T0RVTEVTIHx8IGRldi0+aWQgPiAweGYpCisJCXJldHVybiAtRUlOVkFMOworCisJZGV2X3NldF9u
YW1lKCZkZXYtPmRldiwgIm1veHRldC0lcy4ldSIsIG1veF9tb2R1bGVfbmFtZShkZXYtPmlkKSwK
KwkJICAgICBkZXYtPmlkeCk7CisKKwltdXRleF9sb2NrKCZhZGRfbXV0ZXgpOworCisJcmV0ID0g
YnVzX2Zvcl9lYWNoX2RldigmbW94dGV0X2J1c190eXBlLCBOVUxMLCBkZXYsCisJCQkgICAgICAg
bW94dGV0X2Rldl9jaGVjayk7CisJaWYgKHJldCkKKwkJZ290byBkb25lOworCisJcmV0ID0gZGV2
aWNlX2FkZCgmZGV2LT5kZXYpOworCWlmIChyZXQgPCAwKQorCQlkZXZfZXJyKGRldi0+bW94dGV0
LT5kZXYsICJjYW4ndCBhZGQgJXMsIHN0YXR1cyAlZFxuIiwKKwkJCWRldl9uYW1lKGRldi0+bW94
dGV0LT5kZXYpLCByZXQpOworCitkb25lOgorCW11dGV4X3VubG9jaygmYWRkX211dGV4KTsKKwly
ZXR1cm4gcmV0OworfQorCitzdGF0aWMgaW50IF9fdW5yZWdpc3RlcihzdHJ1Y3QgZGV2aWNlICpk
ZXYsIHZvaWQgKm51bGwpCit7CisJaWYgKGRldi0+b2Zfbm9kZSkgeworCQlvZl9ub2RlX2NsZWFy
X2ZsYWcoZGV2LT5vZl9ub2RlLCBPRl9QT1BVTEFURUQpOworCQlvZl9ub2RlX3B1dChkZXYtPm9m
X25vZGUpOworCX0KKworCWRldmljZV91bnJlZ2lzdGVyKGRldik7CisKKwlyZXR1cm4gMDsKK30K
Kworc3RhdGljIHN0cnVjdCBtb3h0ZXRfZGV2aWNlICoKK29mX3JlZ2lzdGVyX21veHRldF9kZXZp
Y2Uoc3RydWN0IG1veHRldCAqbW94dGV0LCBzdHJ1Y3QgZGV2aWNlX25vZGUgKm5jKQoreworCXN0
cnVjdCBtb3h0ZXRfZGV2aWNlICpkZXY7CisJdTMyIHZhbDsKKwlpbnQgcmV0OworCisJZGV2ID0g
bW94dGV0X2FsbG9jX2RldmljZShtb3h0ZXQpOworCWlmICghZGV2KSB7CisJCWRldl9lcnIobW94
dGV0LT5kZXYsCisJCQkiTW94dGV0IGRldmljZSBhbGxvYyBlcnJvciBmb3IgJXBPRlxuIiwgbmMp
OworCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKwl9CisKKwlyZXQgPSBvZl9wcm9wZXJ0eV9y
ZWFkX3UzMihuYywgInJlZyIsICZ2YWwpOworCWlmIChyZXQpIHsKKwkJZGV2X2Vycihtb3h0ZXQt
PmRldiwgIiVwT0YgaGFzIG5vIHZhbGlkICdyZWcnIHByb3BlcnR5ICglZClcbiIsCisJCQluYywg
cmV0KTsKKwkJZ290byBlcnJfcHV0OworCX0KKworCWRldi0+aWR4ID0gdmFsOworCisJaWYgKGRl
di0+aWR4ID49IFRVUlJJU19NT1hfTUFYX01PRFVMRVMpIHsKKwkJZGV2X2Vycihtb3h0ZXQtPmRl
diwgIiVwT0YgTW94dGV0IGFkZHJlc3MgMHgleCBvdXQgb2YgcmFuZ2VcbiIsCisJCQluYywgZGV2
LT5pZHgpOworCQlyZXQgPSAtRUlOVkFMOworCQlnb3RvIGVycl9wdXQ7CisJfQorCisJZGV2LT5p
ZCA9IG1veHRldC0+bW9kdWxlc1tkZXYtPmlkeF07CisKKwlpZiAoIWRldi0+aWQpIHsKKwkJZGV2
X2Vycihtb3h0ZXQtPmRldiwgIiVwT0YgTW94dGV0IGFkZHJlc3MgMHgleCBpcyBlbXB0eVxuIiwg
bmMsCisJCQlkZXYtPmlkeCk7CisJCXJldCA9IC1FTk9ERVY7CisJCWdvdG8gZXJyX3B1dDsKKwl9
CisKKwlvZl9ub2RlX2dldChuYyk7CisJZGV2LT5kZXYub2Zfbm9kZSA9IG5jOworCisJcmV0ID0g
bW94dGV0X2FkZF9kZXZpY2UoZGV2KTsKKwlpZiAocmV0KSB7CisJCWRldl9lcnIobW94dGV0LT5k
ZXYsCisJCQkiTW94dGV0IGRldmljZSByZWdpc3RlciBlcnJvciBmb3IgJXBPRlxuIiwgbmMpOwor
CQlvZl9ub2RlX3B1dChuYyk7CisJCWdvdG8gZXJyX3B1dDsKKwl9CisKKwlyZXR1cm4gZGV2Owor
CitlcnJfcHV0OgorCXB1dF9kZXZpY2UoJmRldi0+ZGV2KTsKKwlyZXR1cm4gRVJSX1BUUihyZXQp
OworfQorCitzdGF0aWMgdm9pZCBvZl9yZWdpc3Rlcl9tb3h0ZXRfZGV2aWNlcyhzdHJ1Y3QgbW94
dGV0ICptb3h0ZXQpCit7CisJc3RydWN0IG1veHRldF9kZXZpY2UgKmRldjsKKwlzdHJ1Y3QgZGV2
aWNlX25vZGUgKm5jOworCisJaWYgKCFtb3h0ZXQtPmRldi0+b2Zfbm9kZSkKKwkJcmV0dXJuOwor
CisJZm9yX2VhY2hfYXZhaWxhYmxlX2NoaWxkX29mX25vZGUobW94dGV0LT5kZXYtPm9mX25vZGUs
IG5jKSB7CisJCWlmIChvZl9ub2RlX3Rlc3RfYW5kX3NldF9mbGFnKG5jLCBPRl9QT1BVTEFURUQp
KQorCQkJY29udGludWU7CisJCWRldiA9IG9mX3JlZ2lzdGVyX21veHRldF9kZXZpY2UobW94dGV0
LCBuYyk7CisJCWlmIChJU19FUlIoZGV2KSkgeworCQkJZGV2X3dhcm4obW94dGV0LT5kZXYsCisJ
CQkJICJGYWlsZWQgdG8gY3JlYXRlIE1veHRldCBkZXZpY2UgZm9yICVwT0ZcbiIsCisJCQkJIG5j
KTsKKwkJCW9mX25vZGVfY2xlYXJfZmxhZyhuYywgT0ZfUE9QVUxBVEVEKTsKKwkJfQorCX0KK30K
Kworc3RhdGljIHZvaWQKK21veHRldF9yZWdpc3Rlcl9kZXZpY2VzX2Zyb21fdG9wb2xvZ3koc3Ry
dWN0IG1veHRldCAqbW94dGV0KQoreworCXN0cnVjdCBtb3h0ZXRfZGV2aWNlICpkZXY7CisJaW50
IGksIHJldDsKKworCWZvciAoaSA9IDA7IGkgPCBtb3h0ZXQtPmNvdW50OyArK2kpIHsKKwkJZGV2
ID0gbW94dGV0X2FsbG9jX2RldmljZShtb3h0ZXQpOworCQlpZiAoIWRldikgeworCQkJZGV2X2Vy
cihtb3h0ZXQtPmRldiwgIk1veHRldCBkZXZpY2UgJXUgYWxsb2MgZXJyb3JcbiIsCisJCQkJaSk7
CisJCQljb250aW51ZTsKKwkJfQorCisJCWRldi0+aWR4ID0gaTsKKwkJZGV2LT5pZCA9IG1veHRl
dC0+bW9kdWxlc1tpXTsKKworCQlyZXQgPSBtb3h0ZXRfYWRkX2RldmljZShkZXYpOworCQlpZiAo
cmV0ICYmIHJldCAhPSAtRUJVU1kpIHsKKwkJCXB1dF9kZXZpY2UoJmRldi0+ZGV2KTsKKwkJCWRl
dl9lcnIobW94dGV0LT5kZXYsCisJCQkJIk1veHRldCBkZXZpY2UgJXUgcmVnaXN0ZXIgZXJyb3I6
ICVpXG4iLCBpLAorCQkJCXJldCk7CisJCX0KKwl9Cit9CisKKy8qCisgKiBAbnNhbWU6CWhvdyBt
YW55IG1vZHVsZXMgd2l0aCBzYW1lIGlkIGFyZSBhbHJlYWR5IGluIG1veHRldC0+bW9kdWxlcwor
ICovCitzdGF0aWMgaW50IG1veHRldF9zZXRfaXJxKHN0cnVjdCBtb3h0ZXQgKm1veHRldCwgaW50
IGlkeCwgaW50IGlkLCBpbnQgbnNhbWUpCit7CisJaW50IGksIGZpcnN0OworCXN0cnVjdCBtb3h0
ZXRfaXJxcG9zICpwb3M7CisKKwlmaXJzdCA9IG1veF9tb2R1bGVfdGFibGVbaWRdLmh3aXJxX2Jh
c2UgKworCQluc2FtZSAqIG1veF9tb2R1bGVfdGFibGVbaWRdLm5pcnFzOworCisJaWYgKGZpcnN0
ICsgbW94X21vZHVsZV90YWJsZVtpZF0ubmlycXMgPiBNT1hURVRfTklSUVMpCisJCXJldHVybiAt
RUlOVkFMOworCisJZm9yIChpID0gMDsgaSA8IG1veF9tb2R1bGVfdGFibGVbaWRdLm5pcnFzOyAr
K2kpIHsKKwkJcG9zID0gJm1veHRldC0+aXJxLnBvc2l0aW9uW2ZpcnN0ICsgaV07CisJCXBvcy0+
aWR4ID0gaWR4OworCQlwb3MtPmJpdCA9IGk7CisJCW1veHRldC0+aXJxLmV4aXN0cyB8PSBCSVQo
Zmlyc3QgKyBpKTsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBtb3h0ZXRfZmlu
ZF90b3BvbG9neShzdHJ1Y3QgbW94dGV0ICptb3h0ZXQpCit7CisJdTggYnVmW1RVUlJJU19NT1hf
TUFYX01PRFVMRVNdOworCWludCBjbnRzW1RVUlJJU19NT1hfTU9EVUxFX0xBU1RdOworCWludCBp
LCByZXQ7CisKKwltZW1zZXQoY250cywgMCwgc2l6ZW9mKGNudHMpKTsKKworCXJldCA9IHNwaV9y
ZWFkKHRvX3NwaV9kZXZpY2UobW94dGV0LT5kZXYpLCBidWYsIFRVUlJJU19NT1hfTUFYX01PRFVM
RVMpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJaWYgKGJ1ZlswXSA9PSBUVVJS
SVNfTU9YX0NQVV9JRF9FTU1DKSB7CisJCWRldl9pbmZvKG1veHRldC0+ZGV2LCAiRm91bmQgTU9Y
IEEgKGVNTUMgQ1BVKSBtb2R1bGVcbiIpOworCX0gZWxzZSBpZiAoYnVmWzBdID09IFRVUlJJU19N
T1hfQ1BVX0lEX1NEKSB7CisJCWRldl9pbmZvKG1veHRldC0+ZGV2LCAiRm91bmQgTU9YIEEgKENQ
VSkgbW9kdWxlXG4iKTsKKwl9IGVsc2UgeworCQlkZXZfZXJyKG1veHRldC0+ZGV2LCAiSW52YWxp
ZCBUdXJyaXMgTU9YIEEgQ1BVIG1vZHVsZSAweCUwMnhcbiIsCisJCQlidWZbMF0pOworCQlyZXR1
cm4gLUVOT0RFVjsKKwl9CisKKwltb3h0ZXQtPmNvdW50ID0gMDsKKworCWZvciAoaSA9IDE7IGkg
PCBUVVJSSVNfTU9YX01BWF9NT0RVTEVTOyArK2kpIHsKKwkJaW50IGlkOworCisJCWlmIChidWZb
aV0gPT0gMHhmZikKKwkJCWJyZWFrOworCisJCWlkID0gYnVmW2ldICYgMHhmOworCisJCW1veHRl
dC0+bW9kdWxlc1tpLTFdID0gaWQ7CisJCSsrbW94dGV0LT5jb3VudDsKKworCQlpZiAobW94X21v
ZHVsZV9rbm93bihpZCkpIHsKKwkJCWRldl9pbmZvKG1veHRldC0+ZGV2LCAiRm91bmQgJXMgbW9k
dWxlXG4iLAorCQkJCSBtb3hfbW9kdWxlX3RhYmxlW2lkXS5kZXNjKTsKKworCQkJaWYgKG1veHRl
dF9zZXRfaXJxKG1veHRldCwgaS0xLCBpZCwgY250c1tpZF0rKykgPCAwKQorCQkJCWRldl9lcnIo
bW94dGV0LT5kZXYsCisJCQkJCSIgIENhbm5vdCBzZXQgSVJRIGZvciBtb2R1bGUgJXNcbiIsCisJ
CQkJCW1veF9tb2R1bGVfdGFibGVbaWRdLmRlc2MpOworCQl9IGVsc2UgeworCQkJZGV2X3dhcm4o
bW94dGV0LT5kZXYsCisJCQkJICJVbmtub3duIE1veHRldCBtb2R1bGUgZm91bmQgKElEIDB4JTAy
eClcbiIsCisJCQkJIGlkKTsKKwkJfQorCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50
IG1veHRldF9zcGlfcmVhZChzdHJ1Y3QgbW94dGV0ICptb3h0ZXQsIHU4ICpidWYpCit7CisJc3Ry
dWN0IHNwaV90cmFuc2ZlciB4ZmVyID0geworCQkucnhfYnVmID0gYnVmLAorCQkudHhfYnVmID0g
bW94dGV0LT50eCwKKwkJLmxlbiA9IG1veHRldC0+Y291bnQgKyAxCisJfTsKKwlpbnQgcmV0Owor
CisJbXV0ZXhfbG9jaygmbW94dGV0LT5sb2NrKTsKKworCXJldCA9IHNwaV9zeW5jX3RyYW5zZmVy
KHRvX3NwaV9kZXZpY2UobW94dGV0LT5kZXYpLCAmeGZlciwgMSk7CisKKwltdXRleF91bmxvY2so
Jm1veHRldC0+bG9jayk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgbW94dGV0X2RldmljZV9y
ZWFkKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlzdHJ1Y3QgbW94dGV0X2RldmljZSAqbWRldiA9
IHRvX21veHRldF9kZXZpY2UoZGV2KTsKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBtZGV2LT5t
b3h0ZXQ7CisJdTggYnVmW1RVUlJJU19NT1hfTUFYX01PRFVMRVNdOworCWludCByZXQ7CisKKwlp
ZiAobWRldi0+aWR4ID49IG1veHRldC0+Y291bnQpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0
ID0gbW94dGV0X3NwaV9yZWFkKG1veHRldCwgYnVmKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0dXJu
IHJldDsKKworCXJldHVybiBidWZbbWRldi0+aWR4ICsgMV0gPj4gNDsKK30KK0VYUE9SVF9TWU1C
T0xfR1BMKG1veHRldF9kZXZpY2VfcmVhZCk7CisKK2ludCBtb3h0ZXRfZGV2aWNlX3dyaXRlKHN0
cnVjdCBkZXZpY2UgKmRldiwgdTggdmFsKQoreworCXN0cnVjdCBtb3h0ZXRfZGV2aWNlICptZGV2
ID0gdG9fbW94dGV0X2RldmljZShkZXYpOworCXN0cnVjdCBtb3h0ZXQgKm1veHRldCA9IG1kZXYt
Pm1veHRldDsKKwlpbnQgcmV0OworCisJaWYgKG1kZXYtPmlkeCA+PSBtb3h0ZXQtPmNvdW50KQor
CQlyZXR1cm4gLUVJTlZBTDsKKworCW11dGV4X2xvY2soJm1veHRldC0+bG9jayk7CisKKwltb3h0
ZXQtPnR4W21veHRldC0+Y291bnQgLSBtZGV2LT5pZHhdID0gdmFsOworCisJcmV0ID0gc3BpX3dy
aXRlKHRvX3NwaV9kZXZpY2UobW94dGV0LT5kZXYpLCBtb3h0ZXQtPnR4LAorCQkJbW94dGV0LT5j
b3VudCArIDEpOworCisJbXV0ZXhfdW5sb2NrKCZtb3h0ZXQtPmxvY2spOworCisJcmV0dXJuIHJl
dDsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKG1veHRldF9kZXZpY2Vfd3JpdGUpOworCitpbnQgbW94
dGV0X2RldmljZV93cml0dGVuKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlzdHJ1Y3QgbW94dGV0
X2RldmljZSAqbWRldiA9IHRvX21veHRldF9kZXZpY2UoZGV2KTsKKwlzdHJ1Y3QgbW94dGV0ICpt
b3h0ZXQgPSBtZGV2LT5tb3h0ZXQ7CisKKwlpZiAobWRldi0+aWR4ID49IG1veHRldC0+Y291bnQp
CisJCXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIG1veHRldC0+dHhbbW94dGV0LT5jb3VudCAt
IG1kZXYtPmlkeF07Cit9CitFWFBPUlRfU1lNQk9MX0dQTChtb3h0ZXRfZGV2aWNlX3dyaXR0ZW4p
OworCisjaWZkZWYgQ09ORklHX0RFQlVHX0ZTCitzdGF0aWMgaW50IG1veHRldF9kZWJ1Z19vcGVu
KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQoreworCWZpbGUtPnByaXZh
dGVfZGF0YSA9IGlub2RlLT5pX3ByaXZhdGU7CisKKwlyZXR1cm4gbm9uc2Vla2FibGVfb3Blbihp
bm9kZSwgZmlsZSk7Cit9CisKK3N0YXRpYyBzc2l6ZV90IGlucHV0X3JlYWQoc3RydWN0IGZpbGUg
KmZpbGUsIGNoYXIgX191c2VyICpidWYsIHNpemVfdCBsZW4sCisJCQkgIGxvZmZfdCAqcHBvcykK
K3sKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBmaWxlLT5wcml2YXRlX2RhdGE7CisJdTggYmlu
W1RVUlJJU19NT1hfTUFYX01PRFVMRVNdOworCXU4IGhleFtzaXplb2YoYnVmKSAqIDIgKyAxXTsK
KwlpbnQgcmV0LCBuOworCisJcmV0ID0gbW94dGV0X3NwaV9yZWFkKG1veHRldCwgYmluKTsKKwlp
ZiAocmV0IDwgMCkKKwkJcmV0dXJuIHJldDsKKworCW4gPSBtb3h0ZXQtPmNvdW50ICsgMTsKKwli
aW4yaGV4KGhleCwgYmluLCBuKTsKKworCWhleFsyKm5dID0gJ1xuJzsKKworCXJldHVybiBzaW1w
bGVfcmVhZF9mcm9tX2J1ZmZlcihidWYsIGxlbiwgcHBvcywgaGV4LCAyKm4gKyAxKTsKK30KKwor
c3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgaW5wdXRfZm9wcyA9IHsKKwkub3du
ZXIJPSBUSElTX01PRFVMRSwKKwkub3Blbgk9IG1veHRldF9kZWJ1Z19vcGVuLAorCS5yZWFkCT0g
aW5wdXRfcmVhZCwKKwkubGxzZWVrCT0gbm9fbGxzZWVrLAorfTsKKworc3RhdGljIHNzaXplX3Qg
b3V0cHV0X3JlYWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2VyICpidWYsIHNpemVfdCBs
ZW4sCisJCQkgICBsb2ZmX3QgKnBwb3MpCit7CisJc3RydWN0IG1veHRldCAqbW94dGV0ID0gZmls
ZS0+cHJpdmF0ZV9kYXRhOworCXU4IGhleFtUVVJSSVNfTU9YX01BWF9NT0RVTEVTICogMiArIDFd
OworCXU4ICpwID0gaGV4OworCWludCBpOworCisJbXV0ZXhfbG9jaygmbW94dGV0LT5sb2NrKTsK
KworCWZvciAoaSA9IDA7IGkgPCBtb3h0ZXQtPmNvdW50OyArK2kpCisJCXAgPSBoZXhfYnl0ZV9w
YWNrKHAsIG1veHRldC0+dHhbbW94dGV0LT5jb3VudCAtIGldKTsKKworCW11dGV4X3VubG9jaygm
bW94dGV0LT5sb2NrKTsKKworCSpwKysgPSAnXG4nOworCisJcmV0dXJuIHNpbXBsZV9yZWFkX2Zy
b21fYnVmZmVyKGJ1ZiwgbGVuLCBwcG9zLCBoZXgsIHAgLSBoZXgpOworfQorCitzdGF0aWMgc3Np
emVfdCBvdXRwdXRfd3JpdGUoc3RydWN0IGZpbGUgKmZpbGUsIGNvbnN0IGNoYXIgX191c2VyICpi
dWYsCisJCQkgICAgc2l6ZV90IGxlbiwgbG9mZl90ICpwcG9zKQoreworCXN0cnVjdCBtb3h0ZXQg
Km1veHRldCA9IGZpbGUtPnByaXZhdGVfZGF0YTsKKwl1OCBiaW5bVFVSUklTX01PWF9NQVhfTU9E
VUxFU107CisJdTggaGV4W3NpemVvZihiaW4pICogMiArIDFdOworCXNpemVfdCByZXM7CisJbG9m
Zl90IGR1bW15ID0gMDsKKwlpbnQgZXJyLCBpOworCisJaWYgKGxlbiA+IDIgKiBtb3h0ZXQtPmNv
dW50ICsgMSB8fCBsZW4gPCAyICogbW94dGV0LT5jb3VudCkKKwkJcmV0dXJuIC1FSU5WQUw7CisK
KwlyZXMgPSBzaW1wbGVfd3JpdGVfdG9fYnVmZmVyKGhleCwgc2l6ZW9mKGhleCksICZkdW1teSwg
YnVmLCBsZW4pOworCWlmIChyZXMgPCAwKQorCQlyZXR1cm4gcmVzOworCisJaWYgKGxlbiAlIDIg
PT0gMSAmJiBoZXhbbGVuIC0gMV0gIT0gJ1xuJykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwllcnIg
PSBoZXgyYmluKGJpbiwgaGV4LCBtb3h0ZXQtPmNvdW50KTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0
dXJuIC1FSU5WQUw7CisKKwltdXRleF9sb2NrKCZtb3h0ZXQtPmxvY2spOworCisJZm9yIChpID0g
MDsgaSA8IG1veHRldC0+Y291bnQ7ICsraSkKKwkJbW94dGV0LT50eFttb3h0ZXQtPmNvdW50IC0g
aV0gPSBiaW5baV07CisKKwllcnIgPSBzcGlfd3JpdGUodG9fc3BpX2RldmljZShtb3h0ZXQtPmRl
diksIG1veHRldC0+dHgsCisJCQltb3h0ZXQtPmNvdW50ICsgMSk7CisKKwltdXRleF91bmxvY2so
Jm1veHRldC0+bG9jayk7CisKKwlyZXR1cm4gZXJyIDwgMCA/IGVyciA6IGxlbjsKK30KKworc3Rh
dGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgb3V0cHV0X2ZvcHMgPSB7CisJLm93bmVy
CT0gVEhJU19NT0RVTEUsCisJLm9wZW4JPSBtb3h0ZXRfZGVidWdfb3BlbiwKKwkucmVhZAk9IG91
dHB1dF9yZWFkLAorCS53cml0ZQk9IG91dHB1dF93cml0ZSwKKwkubGxzZWVrCT0gbm9fbGxzZWVr
LAorfTsKKworc3RhdGljIGludCBtb3h0ZXRfcmVnaXN0ZXJfZGVidWdmcyhzdHJ1Y3QgbW94dGV0
ICptb3h0ZXQpCit7CisJc3RydWN0IGRlbnRyeSAqcm9vdCwgKmVudHJ5OworCisJcm9vdCA9IGRl
YnVnZnNfY3JlYXRlX2RpcigibW94dGV0IiwgTlVMTCk7CisKKwlpZiAoSVNfRVJSKHJvb3QpKQor
CQlyZXR1cm4gUFRSX0VSUihyb290KTsKKworCWVudHJ5ID0gZGVidWdmc19jcmVhdGVfZmlsZV91
bnNhZmUoImlucHV0IiwgMDQ0NCwgcm9vdCwgbW94dGV0LAorCQkJCQkgICAmaW5wdXRfZm9wcyk7
CisJaWYgKElTX0VSUihlbnRyeSkpCisJCWdvdG8gZXJyX3JlbW92ZTsKKworCWVudHJ5ID0gZGVi
dWdmc19jcmVhdGVfZmlsZV91bnNhZmUoIm91dHB1dCIsIDA2NDQsIHJvb3QsIG1veHRldCwKKwkJ
CQkJICAgJm91dHB1dF9mb3BzKTsKKwlpZiAoSVNfRVJSKGVudHJ5KSkKKwkJZ290byBlcnJfcmVt
b3ZlOworCisJbW94dGV0LT5kZWJ1Z2ZzX3Jvb3QgPSByb290OworCisJcmV0dXJuIDA7CitlcnJf
cmVtb3ZlOgorCWRlYnVnZnNfcmVtb3ZlX3JlY3Vyc2l2ZShyb290KTsKKwlyZXR1cm4gUFRSX0VS
UihlbnRyeSk7Cit9CisKK3N0YXRpYyB2b2lkIG1veHRldF91bnJlZ2lzdGVyX2RlYnVnZnMoc3Ry
dWN0IG1veHRldCAqbW94dGV0KQoreworCWRlYnVnZnNfcmVtb3ZlX3JlY3Vyc2l2ZShtb3h0ZXQt
PmRlYnVnZnNfcm9vdCk7Cit9CisjZWxzZQorc3RhdGljIGlubGluZSBpbnQgbW94dGV0X3JlZ2lz
dGVyX2RlYnVnZnMoc3RydWN0IG1veHRldCAqbW94dGV0KQoreworCXJldHVybiAwOworfQorCitz
dGF0aWMgaW5saW5lIHZvaWQgbW94dGV0X3VucmVnaXN0ZXJfZGVidWdmcyhzdHJ1Y3QgbW94dGV0
ICptb3h0ZXQpCit7Cit9CisjZW5kaWYKKworc3RhdGljIGludCBtb3h0ZXRfaXJxX2RvbWFpbl9t
YXAoc3RydWN0IGlycV9kb21haW4gKmQsIHVuc2lnbmVkIGludCBpcnEsCisJCQkJIGlycV9od19u
dW1iZXJfdCBodykKK3sKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBkLT5ob3N0X2RhdGE7CisK
KwlpZiAoaHcgPj0gTU9YVEVUX05JUlFTIHx8ICEobW94dGV0LT5pcnEuZXhpc3RzICYgQklUKGh3
KSkpIHsKKwkJZGV2X2Vycihtb3h0ZXQtPmRldiwgIkludmFsaWQgaHcgaXJxIG51bWJlclxuIik7
CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWlycV9zZXRfY2hpcF9kYXRhKGlycSwgZC0+aG9z
dF9kYXRhKTsKKwlpcnFfc2V0X2NoaXBfYW5kX2hhbmRsZXIoaXJxLCAmbW94dGV0LT5pcnEuY2hp
cCwgaGFuZGxlX2xldmVsX2lycSk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBtb3h0
ZXRfaXJxX2RvbWFpbl94bGF0ZShzdHJ1Y3QgaXJxX2RvbWFpbiAqZCwKKwkJCQkgICBzdHJ1Y3Qg
ZGV2aWNlX25vZGUgKmN0cmxyLAorCQkJCSAgIGNvbnN0IHUzMiAqaW50c3BlYywgdW5zaWduZWQg
aW50IGludHNpemUsCisJCQkJICAgdW5zaWduZWQgbG9uZyAqb3V0X2h3aXJxLAorCQkJCSAgIHVu
c2lnbmVkIGludCAqb3V0X3R5cGUpCit7CisJc3RydWN0IG1veHRldCAqbW94dGV0ID0gZC0+aG9z
dF9kYXRhOworCWludCBpcnE7CisKKwlpZiAoV0FSTl9PTihpbnRzaXplIDwgMSkpCisJCXJldHVy
biAtRUlOVkFMOworCisJaXJxID0gaW50c3BlY1swXTsKKworCWlmIChpcnEgPj0gTU9YVEVUX05J
UlFTIHx8ICEobW94dGV0LT5pcnEuZXhpc3RzICYgQklUKGlycSkpKQorCQlyZXR1cm4gLUVJTlZB
TDsKKworCSpvdXRfaHdpcnEgPSBpcnE7CisJKm91dF90eXBlID0gSVJRX1RZUEVfTk9ORTsKKwly
ZXR1cm4gMDsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBpcnFfZG9tYWluX29wcyBtb3h0ZXRf
aXJxX2RvbWFpbiA9IHsKKwkubWFwID0gbW94dGV0X2lycV9kb21haW5fbWFwLAorCS54bGF0ZSA9
IG1veHRldF9pcnFfZG9tYWluX3hsYXRlLAorfTsKKworc3RhdGljIHZvaWQgbW94dGV0X2lycV9t
YXNrKHN0cnVjdCBpcnFfZGF0YSAqZCkKK3sKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBpcnFf
ZGF0YV9nZXRfaXJxX2NoaXBfZGF0YShkKTsKKworCW1veHRldC0+aXJxLm1hc2tlZCB8PSBCSVQo
ZC0+aHdpcnEpOworfQorCitzdGF0aWMgdm9pZCBtb3h0ZXRfaXJxX3VubWFzayhzdHJ1Y3QgaXJx
X2RhdGEgKmQpCit7CisJc3RydWN0IG1veHRldCAqbW94dGV0ID0gaXJxX2RhdGFfZ2V0X2lycV9j
aGlwX2RhdGEoZCk7CisKKwltb3h0ZXQtPmlycS5tYXNrZWQgJj0gfkJJVChkLT5od2lycSk7Cit9
CisKK3N0YXRpYyB2b2lkIG1veHRldF9pcnFfcHJpbnRfY2hpcChzdHJ1Y3QgaXJxX2RhdGEgKmQs
IHN0cnVjdCBzZXFfZmlsZSAqcCkKK3sKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBpcnFfZGF0
YV9nZXRfaXJxX2NoaXBfZGF0YShkKTsKKwlzdHJ1Y3QgbW94dGV0X2lycXBvcyAqcG9zID0gJm1v
eHRldC0+aXJxLnBvc2l0aW9uW2QtPmh3aXJxXTsKKwlpbnQgaWQ7CisKKwlpZCA9IG1veHRldC0+
bW9kdWxlc1twb3MtPmlkeF07CisKKwlzZXFfcHJpbnRmKHAsICIgbW94dGV0LSVzLiVpIyVpIiwg
bW94X21vZHVsZV9uYW1lKGlkKSwgcG9zLT5pZHgsCisJCSAgIHBvcy0+Yml0KTsKK30KKworc3Rh
dGljIGNvbnN0IHN0cnVjdCBpcnFfY2hpcCBtb3h0ZXRfaXJxX2NoaXAgPSB7CisJLm5hbWUJCQk9
ICJtb3h0ZXQiLAorCS5pcnFfbWFzawkJPSBtb3h0ZXRfaXJxX21hc2ssCisJLmlycV91bm1hc2sJ
CT0gbW94dGV0X2lycV91bm1hc2ssCisJLmlycV9wcmludF9jaGlwCQk9IG1veHRldF9pcnFfcHJp
bnRfY2hpcCwKK307CisKK3N0YXRpYyBpbnQgbW94dGV0X2lycV9yZWFkKHN0cnVjdCBtb3h0ZXQg
Km1veHRldCwgdW5zaWduZWQgbG9uZyAqbWFwKQoreworCXN0cnVjdCBtb3h0ZXRfaXJxcG9zICpw
b3MgPSBtb3h0ZXQtPmlycS5wb3NpdGlvbjsKKwl1OCBidWZbVFVSUklTX01PWF9NQVhfTU9EVUxF
U107CisJaW50IGksIHJldDsKKworCXJldCA9IG1veHRldF9zcGlfcmVhZChtb3h0ZXQsIGJ1Zik7
CisJaWYgKHJldCA8IDApCisJCXJldHVybiByZXQ7CisKKwkqbWFwID0gMDsKKworCWZvcl9lYWNo
X3NldF9iaXQoaSwgJm1veHRldC0+aXJxLmV4aXN0cywgTU9YVEVUX05JUlFTKSB7CisJCWlmICgh
KGJ1Zltwb3NbaV0uaWR4ICsgMV0gJiBCSVQoNCArIHBvc1tpXS5iaXQpKSkKKwkJCXNldF9iaXQo
aSwgbWFwKTsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlycXJldHVybl90IG1veHRl
dF9pcnFfdGhyZWFkX2ZuKGludCBpcnEsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IG1veHRldCAq
bW94dGV0ID0gZGF0YTsKKwl1bnNpZ25lZCBsb25nIHNldDsKKwlpbnQgbmhhbmRsZWQgPSAwLCBp
LCBzdWJfaXJxLCByZXQ7CisKKwlyZXQgPSBtb3h0ZXRfaXJxX3JlYWQobW94dGV0LCAmc2V0KTsK
KwlpZiAocmV0IDwgMCkKKwkJZ290byBvdXQ7CisKKwlzZXQgJj0gfm1veHRldC0+aXJxLm1hc2tl
ZDsKKworCWRvIHsKKwkJZm9yX2VhY2hfc2V0X2JpdChpLCAmc2V0LCBNT1hURVRfTklSUVMpIHsK
KwkJCXN1Yl9pcnEgPSBpcnFfZmluZF9tYXBwaW5nKG1veHRldC0+aXJxLmRvbWFpbiwgaSk7CisJ
CQloYW5kbGVfbmVzdGVkX2lycShzdWJfaXJxKTsKKwkJCWRldl9kYmcobW94dGV0LT5kZXYsICIl
aSBpcnFcbiIsIGkpOworCQkJKytuaGFuZGxlZDsKKwkJfQorCisJCXJldCA9IG1veHRldF9pcnFf
cmVhZChtb3h0ZXQsICZzZXQpOworCQlpZiAocmV0IDwgMCkKKwkJCWdvdG8gb3V0OworCisJCXNl
dCAmPSB+bW94dGV0LT5pcnEubWFza2VkOworCX0gd2hpbGUgKHNldCk7CisKK291dDoKKwlyZXR1
cm4gKG5oYW5kbGVkID4gMCA/IElSUV9IQU5ETEVEIDogSVJRX05PTkUpOworfQorCitzdGF0aWMg
dm9pZCBtb3h0ZXRfaXJxX2ZyZWUoc3RydWN0IG1veHRldCAqbW94dGV0KQoreworCWludCBpLCBp
cnE7CisKKwlmb3IgKGkgPSAwOyBpIDwgTU9YVEVUX05JUlFTOyArK2kpIHsKKwkJaWYgKG1veHRl
dC0+aXJxLmV4aXN0cyAmIEJJVChpKSkgeworCQkJaXJxID0gaXJxX2ZpbmRfbWFwcGluZyhtb3h0
ZXQtPmlycS5kb21haW4sIGkpOworCQkJaXJxX2Rpc3Bvc2VfbWFwcGluZyhpcnEpOworCQl9CisJ
fQorCisJaXJxX2RvbWFpbl9yZW1vdmUobW94dGV0LT5pcnEuZG9tYWluKTsKK30KKworc3RhdGlj
IGludCBtb3h0ZXRfaXJxX3NldHVwKHN0cnVjdCBtb3h0ZXQgKm1veHRldCkKK3sKKwlpbnQgaSwg
cmV0OworCisJbW94dGV0LT5pcnEuZG9tYWluID0gaXJxX2RvbWFpbl9hZGRfc2ltcGxlKG1veHRl
dC0+ZGV2LT5vZl9ub2RlLAorCQkJCQkJICAgTU9YVEVUX05JUlFTLCAwLAorCQkJCQkJICAgJm1v
eHRldF9pcnFfZG9tYWluLCBtb3h0ZXQpOworCWlmIChtb3h0ZXQtPmlycS5kb21haW4gPT0gTlVM
TCkgeworCQlkZXZfZXJyKG1veHRldC0+ZGV2LCAiQ291bGQgbm90IGFkZCBJUlEgZG9tYWluXG4i
KTsKKwkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJZm9yIChpID0gMDsgaSA8IE1PWFRFVF9OSVJR
UzsgKytpKQorCQlpZiAobW94dGV0LT5pcnEuZXhpc3RzICYgQklUKGkpKQorCQkJaXJxX2NyZWF0
ZV9tYXBwaW5nKG1veHRldC0+aXJxLmRvbWFpbiwgaSk7CisKKwltb3h0ZXQtPmlycS5jaGlwID0g
bW94dGV0X2lycV9jaGlwOworCW1veHRldC0+aXJxLm1hc2tlZCA9IH4wOworCisJcmV0ID0gcmVx
dWVzdF90aHJlYWRlZF9pcnEobW94dGV0LT5kZXZfaXJxLCBOVUxMLCBtb3h0ZXRfaXJxX3RocmVh
ZF9mbiwKKwkJCQkgICBJUlFGX09ORVNIT1QsICJtb3h0ZXQiLCBtb3h0ZXQpOworCWlmIChyZXQg
PCAwKQorCQlnb3RvIGVycl9mcmVlOworCisJcmV0dXJuIDA7CisKK2Vycl9mcmVlOgorCW1veHRl
dF9pcnFfZnJlZShtb3h0ZXQpOworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgbW94dGV0
X3Byb2JlKHN0cnVjdCBzcGlfZGV2aWNlICpzcGkpCit7CisJc3RydWN0IG1veHRldCAqbW94dGV0
OworCWludCByZXQ7CisKKwlyZXQgPSBzcGlfc2V0dXAoc3BpKTsKKwlpZiAocmV0IDwgMCkKKwkJ
cmV0dXJuIHJldDsKKworCW1veHRldCA9IGRldm1fa3phbGxvYygmc3BpLT5kZXYsIHNpemVvZihz
dHJ1Y3QgbW94dGV0KSwKKwkJCSAgICAgIEdGUF9LRVJORUwpOworCWlmICghbW94dGV0KQorCQly
ZXR1cm4gLUVOT01FTTsKKworCW1veHRldC0+ZGV2ID0gJnNwaS0+ZGV2OworCXNwaV9zZXRfZHJ2
ZGF0YShzcGksIG1veHRldCk7CisKKwltdXRleF9pbml0KCZtb3h0ZXQtPmxvY2spOworCisJbW94
dGV0LT5kZXZfaXJxID0gb2ZfaXJxX2dldChtb3h0ZXQtPmRldi0+b2Zfbm9kZSwgMCk7CisJaWYg
KG1veHRldC0+ZGV2X2lycSA9PSAtRVBST0JFX0RFRkVSKQorCQlyZXR1cm4gLUVQUk9CRV9ERUZF
UjsKKworCWlmIChtb3h0ZXQtPmRldl9pcnEgPD0gMCkgeworCQlkZXZfZXJyKG1veHRldC0+ZGV2
LCAiTm8gSVJRIHJlc291cmNlIGZvdW5kXG4iKTsKKwkJcmV0dXJuIC1FTlhJTzsKKwl9CisKKwly
ZXQgPSBtb3h0ZXRfZmluZF90b3BvbG9neShtb3h0ZXQpOworCWlmIChyZXQgPCAwKQorCQlyZXR1
cm4gcmV0OworCisJaWYgKG1veHRldC0+aXJxLmV4aXN0cykgeworCQlyZXQgPSBtb3h0ZXRfaXJx
X3NldHVwKG1veHRldCk7CisJCWlmIChyZXQgPCAwKQorCQkJcmV0dXJuIHJldDsKKwl9CisKKwlv
Zl9yZWdpc3Rlcl9tb3h0ZXRfZGV2aWNlcyhtb3h0ZXQpOworCW1veHRldF9yZWdpc3Rlcl9kZXZp
Y2VzX2Zyb21fdG9wb2xvZ3kobW94dGV0KTsKKworCXJldCA9IG1veHRldF9yZWdpc3Rlcl9kZWJ1
Z2ZzKG1veHRldCk7CisJaWYgKHJldCA8IDApCisJCWRldl93YXJuKG1veHRldC0+ZGV2LCAiRmFp
bGVkIGNyZWF0aW5nIGRlYnVnZnMgZW50cmllczogJWlcbiIsCisJCQkgcmV0KTsKKworCXJldHVy
biAwOworfQorCitzdGF0aWMgaW50IG1veHRldF9yZW1vdmUoc3RydWN0IHNwaV9kZXZpY2UgKnNw
aSkKK3sKKwlzdHJ1Y3QgbW94dGV0ICptb3h0ZXQgPSBzcGlfZ2V0X2RydmRhdGEoc3BpKTsKKwlp
bnQgZHVtbXk7CisKKwlmcmVlX2lycShtb3h0ZXQtPmRldl9pcnEsIG1veHRldCk7CisKKwltb3h0
ZXRfaXJxX2ZyZWUobW94dGV0KTsKKworCW1veHRldF91bnJlZ2lzdGVyX2RlYnVnZnMobW94dGV0
KTsKKworCWR1bW15ID0gZGV2aWNlX2Zvcl9lYWNoX2NoaWxkKG1veHRldC0+ZGV2LCBOVUxMLCBf
X3VucmVnaXN0ZXIpOworCisJbXV0ZXhfZGVzdHJveSgmbW94dGV0LT5sb2NrKTsKKworCXJldHVy
biAwOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCBtb3h0ZXRfZHRfaWRz
W10gPSB7CisJeyAuY29tcGF0aWJsZSA9ICJjem5pYyxtb3h0ZXQiIH0sCisJe30sCit9OworTU9E
VUxFX0RFVklDRV9UQUJMRShvZiwgbW94dGV0X2R0X2lkcyk7CisKK3N0YXRpYyBzdHJ1Y3Qgc3Bp
X2RyaXZlciBtb3h0ZXRfc3BpX2RyaXZlciA9IHsKKwkuZHJpdmVyID0geworCQkubmFtZQkJPSAi
bW94dGV0IiwKKwkJLm9mX21hdGNoX3RhYmxlID0gbW94dGV0X2R0X2lkcywKKwl9LAorCS5wcm9i
ZQkJPSBtb3h0ZXRfcHJvYmUsCisJLnJlbW92ZQkJPSBtb3h0ZXRfcmVtb3ZlLAorfTsKKworc3Rh
dGljIGludCBfX2luaXQgbW94dGV0X2luaXQodm9pZCkKK3sKKwlpbnQgcmV0OworCisJcmV0ID0g
YnVzX3JlZ2lzdGVyKCZtb3h0ZXRfYnVzX3R5cGUpOworCWlmIChyZXQgPCAwKSB7CisJCXByX2Vy
cigibW94dGV0IGJ1cyByZWdpc3RyYXRpb24gZmFpbGVkOiAlZFxuIiwgcmV0KTsKKwkJZ290byBl
cnJvcjsKKwl9CisKKwlyZXQgPSBzcGlfcmVnaXN0ZXJfZHJpdmVyKCZtb3h0ZXRfc3BpX2RyaXZl
cik7CisJaWYgKHJldCA8IDApIHsKKwkJcHJfZXJyKCJtb3h0ZXQgc3BpIGRyaXZlciByZWdpc3Ry
YXRpb24gZmFpbGVkOiAlZFxuIiwgcmV0KTsKKwkJZ290byBlcnJvcl9idXM7CisJfQorCisJcmV0
dXJuIDA7CisKK2Vycm9yX2J1czoKKwlidXNfdW5yZWdpc3RlcigmbW94dGV0X2J1c190eXBlKTsK
K2Vycm9yOgorCXJldHVybiByZXQ7Cit9Citwb3N0Y29yZV9pbml0Y2FsbF9zeW5jKG1veHRldF9p
bml0KTsKKworc3RhdGljIHZvaWQgX19leGl0IG1veHRldF9leGl0KHZvaWQpCit7CisJc3BpX3Vu
cmVnaXN0ZXJfZHJpdmVyKCZtb3h0ZXRfc3BpX2RyaXZlcik7CisJYnVzX3VucmVnaXN0ZXIoJm1v
eHRldF9idXNfdHlwZSk7Cit9Cittb2R1bGVfZXhpdChtb3h0ZXRfZXhpdCk7CisKK01PRFVMRV9B
VVRIT1IoIk1hcmVrIEJlaHVuIDxtYXJlay5iZWh1bkBuaWMuY3o+Iik7CitNT0RVTEVfREVTQ1JJ
UFRJT04oIkNaLk5JQydzIFR1cnJpcyBNb3ggbW9kdWxlIGNvbmZpZ3VyYXRpb24gYnVzIik7CitN
T0RVTEVfTElDRU5TRSgiR1BMIHYyIik7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2R0LWJpbmRpbmdz
L2J1cy9tb3h0ZXQuaCBiL2luY2x1ZGUvZHQtYmluZGluZ3MvYnVzL21veHRldC5oCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZGM5MzQ1NDQwZWJlCi0tLSAvZGV2L251
bGwKKysrIGIvaW5jbHVkZS9kdC1iaW5kaW5ncy9idXMvbW94dGV0LmgKQEAgLTAsMCArMSwxNiBA
QAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8KKy8qCisgKiBDb25zdGFu
dCBmb3IgZGV2aWNlIHRyZWUgYmluZGluZ3MgZm9yIFR1cnJpcyBNb3ggbW9kdWxlIGNvbmZpZ3Vy
YXRpb24gYnVzCisgKgorICogQ29weXJpZ2h0IChDKSAyMDE5IE1hcmVrIEJlaHVuIDxtYXJlay5i
ZWh1bkBuaWMuY3o+CisgKi8KKworI2lmbmRlZiBfRFRfQklORElOR1NfQlVTX01PWFRFVF9ICisj
ZGVmaW5lIF9EVF9CSU5ESU5HU19CVVNfTU9YVEVUX0gKKworI2RlZmluZSBNT1hURVRfSVJRX1BD
SQkJMAorI2RlZmluZSBNT1hURVRfSVJRX1VTQjMJCTQKKyNkZWZpbmUgTU9YVEVUX0lSUV9QRVJJ
RE9UKG4pCSg4ICsgKG4pKQorI2RlZmluZSBNT1hURVRfSVJRX1RPUEFaCTEyCisKKyNlbmRpZiAv
KiBfRFRfQklORElOR1NfQlVTX01PWFRFVF9IICovCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4
L21veHRldC5oIGIvaW5jbHVkZS9saW51eC9tb3h0ZXQuaApuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwMDAwMDAuLjQ5MGRiNjg4NmRjYwotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1
ZGUvbGludXgvbW94dGV0LmgKQEAgLTAsMCArMSwxMDkgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wICovCisvKgorICogVHVycmlzIE1veCBtb2R1bGUgY29uZmlndXJhdGlv
biBidXMgZHJpdmVyCisgKgorICogQ29weXJpZ2h0IChDKSAyMDE5IE1hcmVrIEJlaHVuIDxtYXJl
ay5iZWh1bkBuaWMuY3o+CisgKi8KKworI2lmbmRlZiBfX0xJTlVYX01PWFRFVF9ICisjZGVmaW5l
IF9fTElOVVhfTU9YVEVUX0gKKworI2luY2x1ZGUgPGxpbnV4L2RldmljZS5oPgorI2luY2x1ZGUg
PGxpbnV4L2lycS5oPgorI2luY2x1ZGUgPGxpbnV4L2lycWRvbWFpbi5oPgorI2luY2x1ZGUgPGxp
bnV4L211dGV4Lmg+CisKKyNkZWZpbmUgVFVSUklTX01PWF9NQVhfTU9EVUxFUwkxMAorCitlbnVt
IHR1cnJpc19tb3hfY3B1X21vZHVsZV9pZCB7CisJVFVSUklTX01PWF9DUFVfSURfRU1NQwk9IDB4
MDAsCisJVFVSUklTX01PWF9DUFVfSURfU0QJPSAweDEwLAorfTsKKworZW51bSB0dXJyaXNfbW94
X21vZHVsZV9pZCB7CisJVFVSUklTX01PWF9NT0RVTEVfRklSU1QJCT0gMHgwMSwKKworCVRVUlJJ
U19NT1hfTU9EVUxFX1NGUAkJPSAweDAxLAorCVRVUlJJU19NT1hfTU9EVUxFX1BDSQkJPSAweDAy
LAorCVRVUlJJU19NT1hfTU9EVUxFX1RPUEFaCQk9IDB4MDMsCisJVFVSUklTX01PWF9NT0RVTEVf
UEVSSURPVAk9IDB4MDQsCisJVFVSUklTX01PWF9NT0RVTEVfVVNCMwkJPSAweDA1LAorCVRVUlJJ
U19NT1hfTU9EVUxFX1BDSV9CUklER0UJPSAweDA2LAorCisJVFVSUklTX01PWF9NT0RVTEVfTEFT
VAkJPSAweDA2LAorfTsKKworI2RlZmluZSBNT1hURVRfTklSUVMJMTYKKworZXh0ZXJuIHN0cnVj
dCBidXNfdHlwZSBtb3h0ZXRfdHlwZTsKKworc3RydWN0IG1veHRldCB7CisJc3RydWN0IGRldmlj
ZQkJCSpkZXY7CisJc3RydWN0IG11dGV4CQkJbG9jazsKKwl1OAkJCQltb2R1bGVzW1RVUlJJU19N
T1hfTUFYX01PRFVMRVNdOworCWludAkJCQljb3VudDsKKwl1OAkJCQl0eFtUVVJSSVNfTU9YX01B
WF9NT0RVTEVTXTsKKwlpbnQJCQkJZGV2X2lycTsKKwlzdHJ1Y3QgeworCQlzdHJ1Y3QgaXJxX2Rv
bWFpbgkqZG9tYWluOworCQlzdHJ1Y3QgaXJxX2NoaXAJCWNoaXA7CisJCXVuc2lnbmVkIGxvbmcJ
CW1hc2tlZCwgZXhpc3RzOworCQlzdHJ1Y3QgbW94dGV0X2lycXBvcyB7CisJCQkJCXU4IGlkeDsK
KwkJCQkJdTggYml0OworCQl9IHBvc2l0aW9uW01PWFRFVF9OSVJRU107CisJfSBpcnE7CisjaWZk
ZWYgQ09ORklHX0RFQlVHX0ZTCisJc3RydWN0IGRlbnRyeQkJCSpkZWJ1Z2ZzX3Jvb3Q7CisjZW5k
aWYKK307CisKK3N0cnVjdCBtb3h0ZXRfZHJpdmVyIHsKKwljb25zdCBlbnVtIHR1cnJpc19tb3hf
bW9kdWxlX2lkCSppZF90YWJsZTsKKwlzdHJ1Y3QgZGV2aWNlX2RyaXZlcgkJZHJpdmVyOworfTsK
Kworc3RhdGljIGlubGluZSBzdHJ1Y3QgbW94dGV0X2RyaXZlciAqCit0b19tb3h0ZXRfZHJpdmVy
KHN0cnVjdCBkZXZpY2VfZHJpdmVyICpkcnYpCit7CisJaWYgKCFkcnYpCisJCXJldHVybiBOVUxM
OworCXJldHVybiBjb250YWluZXJfb2YoZHJ2LCBzdHJ1Y3QgbW94dGV0X2RyaXZlciwgZHJpdmVy
KTsKK30KKworZXh0ZXJuIGludCBfX21veHRldF9yZWdpc3Rlcl9kcml2ZXIoc3RydWN0IG1vZHVs
ZSAqb3duZXIsCisJCQkJICAgIHN0cnVjdCBtb3h0ZXRfZHJpdmVyICptZHJ2KTsKKworc3RhdGlj
IGlubGluZSB2b2lkIG1veHRldF91bnJlZ2lzdGVyX2RyaXZlcihzdHJ1Y3QgbW94dGV0X2RyaXZl
ciAqbWRydikKK3sKKwlpZiAobWRydikKKwkJZHJpdmVyX3VucmVnaXN0ZXIoJm1kcnYtPmRyaXZl
cik7Cit9CisKKyNkZWZpbmUgbW94dGV0X3JlZ2lzdGVyX2RyaXZlcihkcml2ZXIpIFwKKwlfX21v
eHRldF9yZWdpc3Rlcl9kcml2ZXIoVEhJU19NT0RVTEUsIGRyaXZlcikKKworI2RlZmluZSBtb2R1
bGVfbW94dGV0X2RyaXZlcihfX21veHRldF9kcml2ZXIpIFwKKwltb2R1bGVfZHJpdmVyKF9fbW94
dGV0X2RyaXZlciwgbW94dGV0X3JlZ2lzdGVyX2RyaXZlciwgXAorCQkJbW94dGV0X3VucmVnaXN0
ZXJfZHJpdmVyKQorCitzdHJ1Y3QgbW94dGV0X2RldmljZSB7CisJc3RydWN0IGRldmljZQkJCWRl
djsKKwlzdHJ1Y3QgbW94dGV0CQkJKm1veHRldDsKKwllbnVtIHR1cnJpc19tb3hfbW9kdWxlX2lk
CWlkOworCXVuc2lnbmVkIGludAkJCWlkeDsKK307CisKK2V4dGVybiBpbnQgbW94dGV0X2Rldmlj
ZV9yZWFkKHN0cnVjdCBkZXZpY2UgKmRldik7CitleHRlcm4gaW50IG1veHRldF9kZXZpY2Vfd3Jp
dGUoc3RydWN0IGRldmljZSAqZGV2LCB1OCB2YWwpOworZXh0ZXJuIGludCBtb3h0ZXRfZGV2aWNl
X3dyaXR0ZW4oc3RydWN0IGRldmljZSAqZGV2KTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3QgbW94
dGV0X2RldmljZSAqCit0b19tb3h0ZXRfZGV2aWNlKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlp
ZiAoIWRldikKKwkJcmV0dXJuIE5VTEw7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihkZXYsIHN0cnVj
dCBtb3h0ZXRfZGV2aWNlLCBkZXYpOworfQorCisjZW5kaWYgLyogX19MSU5VWF9NT1hURVRfSCAq
LwotLSAKMi4yMS4wCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KbGludXgtYXJtLWtlcm5lbCBtYWlsaW5nIGxpc3QKbGludXgtYXJtLWtlcm5lbEBsaXN0
cy5pbmZyYWRlYWQub3JnCmh0dHA6Ly9saXN0cy5pbmZyYWRlYWQub3JnL21haWxtYW4vbGlzdGlu
Zm8vbGludXgtYXJtLWtlcm5lbAo=
