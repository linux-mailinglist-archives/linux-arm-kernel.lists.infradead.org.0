Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 1259F170010
	for <lists+linux-arm-kernel@lfdr.de>; Wed, 26 Feb 2020 14:32:07 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:References:In-Reply-To:
	Message-Id:Date:Subject:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=UKMuxxFIHlohIecBQN8MiuNY49kx8/a8c6yCyNo0w28=; b=c+G31/AqziXNFM
	ASD/89g+ympH1gkV69GV1b0mbDQ5Y5luMyjZ5X+6L9arMU6XDt30mScfHOlBjCn0l+/OhO258Nvp8
	oWTBaPTvgORq3YKd9uCDFTV+W1OqXzLVbXYbtkilDpt86+omMMXSU6A413bxBlfBpBdjKmCNSdTKJ
	cc+WDnOARcLRv5RlVMkEO2+Acgg/iqdH7vlL8R0zPVbA28CmYxJePxdiSXHOOnQvtdogKIpYmU7OL
	bWQ+eEMojbpQf9t/lUuKjVpO7RR1UccbD/b5u06lqQF3UWc9ds+Q/vmQnUhcK5uSHGW/kKXq1glZF
	qLtzh4wsZiVI1NIax9rQ==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1j6wnF-0005Nt-Fu; Wed, 26 Feb 2020 13:32:05 +0000
Received: from foss.arm.com ([217.140.110.172])
 by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
 id 1j6wmD-0004SE-Bv
 for linux-arm-kernel@lists.infradead.org; Wed, 26 Feb 2020 13:31:05 +0000
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 827C030E;
 Wed, 26 Feb 2020 05:31:00 -0800 (PST)
Received: from e108754-lin.cambridge.arm.com (e108754-lin.cambridge.arm.com
 [10.1.198.53])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 1CDCD3FA00;
 Wed, 26 Feb 2020 05:30:58 -0800 (PST)
From: Ionela Voinescu <ionela.voinescu@arm.com>
To: catalin.marinas@arm.com, will@kernel.org, mark.rutland@arm.com,
 maz@kernel.org, suzuki.poulose@arm.com, sudeep.holla@arm.com,
 lukasz.luba@arm.com, valentin.schneider@arm.com, dietmar.eggemann@arm.com,
 rjw@rjwysocki.net, pkondeti@codeaurora.org, ionela.voinescu@arm.com
Subject: [PATCH v5 6/7] arm64: use activity monitors for frequency invariance
Date: Wed, 26 Feb 2020 13:29:46 +0000
Message-Id: <20200226132947.29738-7-ionela.voinescu@arm.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200226132947.29738-1-ionela.voinescu@arm.com>
References: <20200226132947.29738-1-ionela.voinescu@arm.com>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200226_053101_552369_1C334DD9 
X-CRM114-Status: GOOD (  22.74  )
X-Spam-Score: -2.3 (--)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-2.3 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [217.140.110.172 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: linux-doc@vger.kernel.org, peterz@infradead.org, viresh.kumar@linaro.org,
 linux-pm@vger.kernel.org, linux-kernel@vger.kernel.org, mingo@redhat.com,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

VGhlIEZyZXF1ZW5jeSBJbnZhcmlhbmNlIEVuZ2luZSAoRklFKSBpcyBwcm92aWRpbmcgYSBmcmVx
dWVuY3kKc2NhbGluZyBjb3JyZWN0aW9uIGZhY3RvciB0aGF0IGhlbHBzIGFjaGlldmUgbW9yZSBh
Y2N1cmF0ZQpsb2FkLXRyYWNraW5nLgoKU28gZmFyLCBmb3IgYXJtIGFuZCBhcm02NCBwbGF0Zm9y
bXMsIHRoaXMgc2NhbGUgZmFjdG9yIGhhcyBiZWVuCm9idGFpbmVkIGJhc2VkIG9uIHRoZSByYXRp
byBiZXR3ZWVuIHRoZSBjdXJyZW50IGZyZXF1ZW5jeSBhbmQgdGhlCm1heGltdW0gc3VwcG9ydGVk
IGZyZXF1ZW5jeSByZWNvcmRlZCBieSB0aGUgY3B1ZnJlcSBwb2xpY3kuIFRoZQpzZXR0aW5nIG9m
IHRoaXMgc2NhbGUgZmFjdG9yIGlzIHRyaWdnZXJlZCBmcm9tIGNwdWZyZXEgZHJpdmVycyBieQpj
YWxsaW5nIGFyY2hfc2V0X2ZyZXFfc2NhbGUuIFRoZSBjdXJyZW50IGZyZXF1ZW5jeSB1c2VkIGlu
IGNvbXB1dGF0aW9uCmlzIHRoZSBmcmVxdWVuY3kgcmVxdWVzdGVkIGJ5IGEgZ292ZXJub3IsIGJ1
dCBpdCBtYXkgbm90IGJlIHRoZQpmcmVxdWVuY3kgdGhhdCB3YXMgaW1wbGVtZW50ZWQgYnkgdGhl
IHBsYXRmb3JtLgoKVGhpcyBjb3JyZWN0aW9uIGZhY3RvciBjYW4gYWxzbyBiZSBvYnRhaW5lZCB1
c2luZyBhIGNvcmUgY291bnRlciBhbmQgYQpjb25zdGFudCBjb3VudGVyIHRvIGdldCBpbmZvcm1h
dGlvbiBvbiB0aGUgcGVyZm9ybWFuY2UgKGZyZXF1ZW5jeSBiYXNlZApvbmx5KSBvYnRhaW5lZCBp
biBhIHBlcmlvZCBvZiB0aW1lLiBUaGlzIHdpbGwgbW9yZSBhY2N1cmF0ZWx5IHJlZmxlY3QKdGhl
IGFjdHVhbCBjdXJyZW50IGZyZXF1ZW5jeSBvZiB0aGUgQ1BVLCBjb21wYXJlZCB3aXRoIHRoZSBh
bHRlcm5hdGl2ZQppbXBsZW1lbnRhdGlvbiB0aGF0IHJlZmxlY3RzIHRoZSByZXF1ZXN0IG9mIGEg
cGVyZm9ybWFuY2UgbGV2ZWwgZnJvbQp0aGUgT1MuCgpUaGVyZWZvcmUsIGltcGxlbWVudCBhcmNo
X3NjYWxlX2ZyZXFfdGljayB0byB1c2UgYWN0aXZpdHkgbW9uaXRvcnMsIGlmCnByZXNlbnQsIGZv
ciB0aGUgY29tcHV0YXRpb24gb2YgdGhlIGZyZXF1ZW5jeSBzY2FsZSBmYWN0b3IuCgpUaGUgdXNl
IG9mIEFNVSBjb3VudGVycyBkZXBlbmRzIG9uOgogLSBDT05GSUdfQVJNNjRfQU1VX0VYVE4gLSBk
ZXBlbnRzIG9uIHRoZSBBTVUgZXh0ZW5zaW9uIGJlaW5nIHByZXNlbnQKIC0gQ09ORklHX0NQVV9G
UkVRIC0gdGhlIGN1cnJlbnQgZnJlcXVlbmN5IG9idGFpbmVkIHVzaW5nIGNvdW50ZXIKICAgaW5m
b3JtYXRpb24gaXMgZGl2aWRlZCBieSB0aGUgbWF4aW11bSBmcmVxdWVuY3kgb2J0YWluZWQgZnJv
bSB0aGUKICAgY3B1ZnJlcSBwb2xpY3kuCgpXaGlsZSBpdCBpcyBwb3NzaWJsZSB0byBoYXZlIGEg
Y29tYmluYXRpb24gb2YgQ1BVcyBpbiB0aGUgc3lzdGVtIHdpdGgKYW5kIHdpdGhvdXQgc3VwcG9y
dCBmb3IgYWN0aXZpdHkgbW9uaXRvcnMsIHRoZSB1c2Ugb2YgY291bnRlcnMgZm9yCmZyZXF1ZW5j
eSBpbnZhcmlhbmNlIGlzIG9ubHkgZW5hYmxlZCBmb3IgYSBDUFUgaWYgYWxsIHJlbGF0ZWQgQ1BV
cwooQ1BVcyBpbiB0aGUgc2FtZSBmcmVxdWVuY3kgZG9tYWluKSBzdXBwb3J0IGFuZCBoYXZlIGVu
YWJsZWQgdGhlIGNvcmUKYW5kIGNvbnN0YW50IGFjdGl2aXR5IG1vbml0b3IgY291bnRlcnMuIElu
IHRoaXMgd2F5LCB0aGVyZSBpcyBhIGNsZWFyCnNlcGFyYXRpb24gYmV0d2VlbiB0aGUgcG9saWNp
ZXMgZm9yIHdoaWNoIGFyY2hfc2V0X2ZyZXFfc2NhbGUgKGNwdWZyZXEKYmFzZWQgRklFKSBpcyB1
c2VkLCBhbmQgdGhlIHBvbGljaWVzIGZvciB3aGljaCBhcmNoX3NjYWxlX2ZyZXFfdGljawooY291
bnRlciBiYXNlZCBGSUUpIGlzIHVzZWQgdG8gc2V0IHRoZSBmcmVxdWVuY3kgc2NhbGUgZmFjdG9y
LiBGb3IKdGhpcyBwdXJwb3NlLCBhIGxhdGVfaW5pdGNhbGxfc3luYyBpcyByZWdpc3RlcmVkIHRv
IHRyaWdnZXIgdmFsaWRhdGlvbgp3b3JrIGZvciBwb2xpY2llcyB0aGF0IHdpbGwgZW5hYmxlIG9y
IGRpc2FibGUgdGhlIHVzZSBvZiBBTVUgY291bnRlcnMKZm9yIGZyZXF1ZW5jeSBpbnZhcmlhbmNl
LiBJZiBDT05GSUdfQ1BVX0ZSRVEgaXMgbm90IGRlZmluZWQsIHRoZSB1c2UKb2YgY291bnRlcnMg
aXMgZW5hYmxlZCBvbiBhbGwgQ1BVcyBvbmx5IGlmIGFsbCBwb3NzaWJsZSBDUFVzIGNvcnJlY3Rs
eQpzdXBwb3J0IHRoZSBuZWNlc3NhcnkgY291bnRlcnMuCgpTaWduZWQtb2ZmLWJ5OiBJb25lbGEg
Vm9pbmVzY3UgPGlvbmVsYS52b2luZXNjdUBhcm0uY29tPgpDYzogQ2F0YWxpbiBNYXJpbmFzIDxj
YXRhbGluLm1hcmluYXNAYXJtLmNvbT4KQ2M6IFdpbGwgRGVhY29uIDx3aWxsQGtlcm5lbC5vcmc+
CkNjOiBTdWRlZXAgSG9sbGEgPHN1ZGVlcC5ob2xsYUBhcm0uY29tPgotLS0KIGFyY2gvYXJtNjQv
aW5jbHVkZS9hc20vdG9wb2xvZ3kuaCB8ICAgOSArKwogYXJjaC9hcm02NC9rZXJuZWwvY3B1ZmVh
dHVyZS5jICAgIHwgICA0ICsKIGFyY2gvYXJtNjQva2VybmVsL3RvcG9sb2d5LmMgICAgICB8IDE4
MCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvYmFzZS9hcmNoX3RvcG9s
b2d5LmMgICAgICB8ICAxMiArKwogaW5jbHVkZS9saW51eC9hcmNoX3RvcG9sb2d5LmggICAgIHwg
ICAyICsKIDUgZmlsZXMgY2hhbmdlZCwgMjA3IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9h
cmNoL2FybTY0L2luY2x1ZGUvYXNtL3RvcG9sb2d5LmggYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNt
L3RvcG9sb2d5LmgKaW5kZXggYTRkOTQ1ZGI5NWEyLi4yMWQ0ZDQwZDYyNDMgMTAwNjQ0Ci0tLSBh
L2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vdG9wb2xvZ3kuaAorKysgYi9hcmNoL2FybTY0L2luY2x1
ZGUvYXNtL3RvcG9sb2d5LmgKQEAgLTE2LDYgKzE2LDE1IEBAIGludCBwY2lidXNfdG9fbm9kZShz
dHJ1Y3QgcGNpX2J1cyAqYnVzKTsKIAogI2luY2x1ZGUgPGxpbnV4L2FyY2hfdG9wb2xvZ3kuaD4K
IAorI2lmZGVmIENPTkZJR19BUk02NF9BTVVfRVhUTgorLyoKKyAqIFJlcGxhY2UgdGFzayBzY2hl
ZHVsZXIncyBkZWZhdWx0IGNvdW50ZXItYmFzZWQKKyAqIGZyZXF1ZW5jeS1pbnZhcmlhbmNlIHNj
YWxlIGZhY3RvciBzZXR0aW5nLgorICovCit2b2lkIHRvcG9sb2d5X3NjYWxlX2ZyZXFfdGljayh2
b2lkKTsKKyNkZWZpbmUgYXJjaF9zY2FsZV9mcmVxX3RpY2sgdG9wb2xvZ3lfc2NhbGVfZnJlcV90
aWNrCisjZW5kaWYgLyogQ09ORklHX0FSTTY0X0FNVV9FWFROICovCisKIC8qIFJlcGxhY2UgdGFz
ayBzY2hlZHVsZXIncyBkZWZhdWx0IGZyZXF1ZW5jeS1pbnZhcmlhbnQgYWNjb3VudGluZyAqLwog
I2RlZmluZSBhcmNoX3NjYWxlX2ZyZXFfY2FwYWNpdHkgdG9wb2xvZ3lfZ2V0X2ZyZXFfc2NhbGUK
IApkaWZmIC0tZ2l0IGEvYXJjaC9hcm02NC9rZXJuZWwvY3B1ZmVhdHVyZS5jIGIvYXJjaC9hcm02
NC9rZXJuZWwvY3B1ZmVhdHVyZS5jCmluZGV4IDYwY2ViYzA3MTYwMy4uYjhlYzZjNTQ0ZDMyIDEw
MDY0NAotLS0gYS9hcmNoL2FybTY0L2tlcm5lbC9jcHVmZWF0dXJlLmMKKysrIGIvYXJjaC9hcm02
NC9rZXJuZWwvY3B1ZmVhdHVyZS5jCkBAIC0xMjQxLDEyICsxMjQxLDE2IEBAIGJvb2wgY3B1X2hh
c19hbXVfZmVhdChpbnQgY3B1KQogCXJldHVybiBjcHVtYXNrX3Rlc3RfY3B1KGNwdSwgJmFtdV9j
cHVzKTsKIH0KIAorLyogSW5pdGlhbGl6ZSB0aGUgdXNlIG9mIEFNVSBjb3VudGVycyBmb3IgZnJl
cXVlbmN5IGludmFyaWFuY2UgKi8KK2V4dGVybiB2b2lkIGluaXRfY3B1X2ZyZXFfaW52YXJpYW5j
ZV9jb3VudGVycyh2b2lkKTsKKwogc3RhdGljIHZvaWQgY3B1X2FtdV9lbmFibGUoc3RydWN0IGFy
bTY0X2NwdV9jYXBhYmlsaXRpZXMgY29uc3QgKmNhcCkKIHsKIAlpZiAoaGFzX2NwdWlkX2ZlYXR1
cmUoY2FwLCBTQ09QRV9MT0NBTF9DUFUpKSB7CiAJCXByX2luZm8oImRldGVjdGVkIENQVSVkOiBB
Y3Rpdml0eSBNb25pdG9ycyBVbml0IChBTVUpXG4iLAogCQkJc21wX3Byb2Nlc3Nvcl9pZCgpKTsK
IAkJY3B1bWFza19zZXRfY3B1KHNtcF9wcm9jZXNzb3JfaWQoKSwgJmFtdV9jcHVzKTsKKwkJaW5p
dF9jcHVfZnJlcV9pbnZhcmlhbmNlX2NvdW50ZXJzKCk7CiAJfQogfQogCmRpZmYgLS1naXQgYS9h
cmNoL2FybTY0L2tlcm5lbC90b3BvbG9neS5jIGIvYXJjaC9hcm02NC9rZXJuZWwvdG9wb2xvZ3ku
YwppbmRleCBmYTk1MjhkZmQwY2UuLjA4MDFhMGYzYzE1NiAxMDA2NDQKLS0tIGEvYXJjaC9hcm02
NC9rZXJuZWwvdG9wb2xvZ3kuYworKysgYi9hcmNoL2FybTY0L2tlcm5lbC90b3BvbG9neS5jCkBA
IC0xNCw2ICsxNCw3IEBACiAjaW5jbHVkZSA8bGludXgvYWNwaS5oPgogI2luY2x1ZGUgPGxpbnV4
L2FyY2hfdG9wb2xvZ3kuaD4KICNpbmNsdWRlIDxsaW51eC9jYWNoZWluZm8uaD4KKyNpbmNsdWRl
IDxsaW51eC9jcHVmcmVxLmg+CiAjaW5jbHVkZSA8bGludXgvaW5pdC5oPgogI2luY2x1ZGUgPGxp
bnV4L3BlcmNwdS5oPgogCkBAIC0xMjAsNCArMTIxLDE4MyBAQCBpbnQgX19pbml0IHBhcnNlX2Fj
cGlfdG9wb2xvZ3kodm9pZCkKIH0KICNlbmRpZgogCisjaWZkZWYgQ09ORklHX0FSTTY0X0FNVV9F
WFROCiAKKyN1bmRlZiBwcl9mbXQKKyNkZWZpbmUgcHJfZm10KGZtdCkgIkFNVTogIiBmbXQKKwor
c3RhdGljIERFRklORV9QRVJfQ1BVX1JFQURfTU9TVExZKHVuc2lnbmVkIGxvbmcsIGFyY2hfbWF4
X2ZyZXFfc2NhbGUpOworc3RhdGljIERFRklORV9QRVJfQ1BVKHU2NCwgYXJjaF9jb25zdF9jeWNs
ZXNfcHJldik7CitzdGF0aWMgREVGSU5FX1BFUl9DUFUodTY0LCBhcmNoX2NvcmVfY3ljbGVzX3By
ZXYpOworc3RhdGljIGNwdW1hc2tfdmFyX3QgYW11X2ZpZV9jcHVzOworCisvKiBJbml0aWFsaXpl
IGNvdW50ZXIgcmVmZXJlbmNlIHBlci1jcHUgdmFyaWFibGVzIGZvciB0aGUgY3VycmVudCBDUFUg
Ki8KK3ZvaWQgaW5pdF9jcHVfZnJlcV9pbnZhcmlhbmNlX2NvdW50ZXJzKHZvaWQpCit7CisJdGhp
c19jcHVfd3JpdGUoYXJjaF9jb3JlX2N5Y2xlc19wcmV2LAorCQkgICAgICAgcmVhZF9zeXNyZWdf
cyhTWVNfQU1FVkNOVFIwX0NPUkVfRUwwKSk7CisJdGhpc19jcHVfd3JpdGUoYXJjaF9jb25zdF9j
eWNsZXNfcHJldiwKKwkJICAgICAgIHJlYWRfc3lzcmVnX3MoU1lTX0FNRVZDTlRSMF9DT05TVF9F
TDApKTsKK30KKworc3RhdGljIGludCB2YWxpZGF0ZV9jcHVfZnJlcV9pbnZhcmlhbmNlX2NvdW50
ZXJzKGludCBjcHUpCit7CisJdTY0IG1heF9mcmVxX2h6LCByYXRpbzsKKworCWlmICghY3B1X2hh
c19hbXVfZmVhdChjcHUpKSB7CisJCXByX2RlYnVnKCJDUFUlZDogY291bnRlcnMgYXJlIG5vdCBz
dXBwb3J0ZWQuXG4iLCBjcHUpOworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlpZiAodW5saWtl
bHkoIXBlcl9jcHUoYXJjaF9jb25zdF9jeWNsZXNfcHJldiwgY3B1KSB8fAorCQkgICAgICFwZXJf
Y3B1KGFyY2hfY29yZV9jeWNsZXNfcHJldiwgY3B1KSkpIHsKKwkJcHJfZGVidWcoIkNQVSVkOiBj
eWNsZSBjb3VudGVycyBhcmUgbm90IGVuYWJsZWQuXG4iLCBjcHUpOworCQlyZXR1cm4gLUVJTlZB
TDsKKwl9CisKKwkvKiBDb252ZXJ0IG1heGltdW0gZnJlcXVlbmN5IGZyb20gS0h6IHRvIEh6IGFu
ZCB2YWxpZGF0ZSAqLworCW1heF9mcmVxX2h6ID0gY3B1ZnJlcV9nZXRfaHdfbWF4X2ZyZXEoY3B1
KSAqIDEwMDA7CisJaWYgKHVubGlrZWx5KCFtYXhfZnJlcV9oeikpIHsKKwkJcHJfZGVidWcoIkNQ
VSVkOiBpbnZhbGlkIG1heGltdW0gZnJlcXVlbmN5LlxuIiwgY3B1KTsKKwkJcmV0dXJuIC1FSU5W
QUw7CisJfQorCisJLyoKKwkgKiBQcmUtY29tcHV0ZSB0aGUgZml4ZWQgcmF0aW8gYmV0d2VlbiB0
aGUgZnJlcXVlbmN5IG9mIHRoZSBjb25zdGFudAorCSAqIGNvdW50ZXIgYW5kIHRoZSBtYXhpbXVt
IGZyZXF1ZW5jeSBvZiB0aGUgQ1BVLgorCSAqCisJICoJCQkgICAgICBjb25zdF9mcmVxCisJICog
YXJjaF9tYXhfZnJlcV9zY2FsZSA9ICAgLS0tLS0tLS0tLS0tLS0tLSAqIFNDSEVEX0NBUEFDSVRZ
X1NDQUxFwrIKKwkgKgkJCSAgIGNwdWluZm9fbWF4X2ZyZXEKKwkgKgorCSAqIFdlIHVzZSBhIGZh
Y3RvciBvZiAyICogU0NIRURfQ0FQQUNJVFlfU0hJRlQgLT4gU0NIRURfQ0FQQUNJVFlfU0NBTEXC
sgorCSAqIGluIG9yZGVyIHRvIGVuc3VyZSBhIGdvb2QgcmVzb2x1dGlvbiBmb3IgYXJjaF9tYXhf
ZnJlcV9zY2FsZSBmb3IKKwkgKiB2ZXJ5IGxvdyBhcmNoIHRpbWVyIGZyZXF1ZW5jaWVzIChkb3du
IHRvIHRoZSBLSHogcmFuZ2Ugd2hpY2ggc2hvdWxkCisJICogYmUgdW5saWtlbHkpLgorCSAqLwor
CXJhdGlvID0gKHU2NClhcmNoX3RpbWVyX2dldF9yYXRlKCkgPDwgKDIgKiBTQ0hFRF9DQVBBQ0lU
WV9TSElGVCk7CisJcmF0aW8gPSBkaXY2NF91NjQocmF0aW8sIG1heF9mcmVxX2h6KTsKKwlpZiAo
IXJhdGlvKSB7CisJCVdBUk5fT05DRSgxLCAiU3lzdGVtIHRpbWVyIGZyZXF1ZW5jeSB0b28gbG93
LlxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCXBlcl9jcHUoYXJjaF9tYXhfZnJlcV9z
Y2FsZSwgY3B1KSA9ICh1bnNpZ25lZCBsb25nKXJhdGlvOworCisJcmV0dXJuIDA7Cit9CisKK3N0
YXRpYyBpbmxpbmUgYm9vbAorZW5hYmxlX3BvbGljeV9mcmVxX2NvdW50ZXJzKGludCBjcHUsIGNw
dW1hc2tfdmFyX3QgdmFsaWRfY3B1cykKK3sKKwlzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSA9IGNwdWZyZXFfY3B1X2dldChjcHUpOworCisJaWYgKCFwb2xpY3kpIHsKKwkJcHJfZGVidWco
IkNQVSVkOiBObyBjcHVmcmVxIHBvbGljeSBmb3VuZC5cbiIsIGNwdSk7CisJCXJldHVybiBmYWxz
ZTsKKwl9CisKKwlpZiAoY3B1bWFza19zdWJzZXQocG9saWN5LT5yZWxhdGVkX2NwdXMsIHZhbGlk
X2NwdXMpKQorCQljcHVtYXNrX29yKGFtdV9maWVfY3B1cywgcG9saWN5LT5yZWxhdGVkX2NwdXMs
CisJCQkgICBhbXVfZmllX2NwdXMpOworCisJY3B1ZnJlcV9jcHVfcHV0KHBvbGljeSk7CisKKwly
ZXR1cm4gdHJ1ZTsKK30KKworc3RhdGljIERFRklORV9TVEFUSUNfS0VZX0ZBTFNFKGFtdV9maWVf
a2V5KTsKKyNkZWZpbmUgYW11X2ZyZXFfaW52YXJpYW50KCkgc3RhdGljX2JyYW5jaF91bmxpa2Vs
eSgmYW11X2ZpZV9rZXkpCisKK3N0YXRpYyBpbnQgX19pbml0IGluaXRfYW11X2ZpZSh2b2lkKQor
eworCWNwdW1hc2tfdmFyX3QgdmFsaWRfY3B1czsKKwlib29sIGhhdmVfcG9saWN5ID0gZmFsc2U7
CisJaW50IHJldCA9IDA7CisJaW50IGNwdTsKKworCWlmICghemFsbG9jX2NwdW1hc2tfdmFyKCZ2
YWxpZF9jcHVzLCBHRlBfS0VSTkVMKSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlpZiAoIXphbGxv
Y19jcHVtYXNrX3ZhcigmYW11X2ZpZV9jcHVzLCBHRlBfS0VSTkVMKSkgeworCQlyZXQgPSAtRU5P
TUVNOworCQlnb3RvIGZyZWVfdmFsaWRfbWFzazsKKwl9CisKKwlmb3JfZWFjaF9wcmVzZW50X2Nw
dShjcHUpIHsKKwkJaWYgKHZhbGlkYXRlX2NwdV9mcmVxX2ludmFyaWFuY2VfY291bnRlcnMoY3B1
KSkKKwkJCWNvbnRpbnVlOworCQljcHVtYXNrX3NldF9jcHUoY3B1LCB2YWxpZF9jcHVzKTsKKwkJ
aGF2ZV9wb2xpY3kgfD0gZW5hYmxlX3BvbGljeV9mcmVxX2NvdW50ZXJzKGNwdSwgdmFsaWRfY3B1
cyk7CisJfQorCisJLyoKKwkgKiBJZiB3ZSBhcmUgbm90IHJlc3RyaWN0ZWQgYnkgY3B1ZnJlcSBw
b2xpY2llcywgd2Ugb25seSBlbmFibGUKKwkgKiB0aGUgdXNlIG9mIHRoZSBBTVUgZmVhdHVyZSBm
b3IgRklFIGlmIGFsbCBDUFVzIHN1cHBvcnQgQU1VLgorCSAqIE90aGVyd2lzZSwgZW5hYmxlX3Bv
bGljeV9mcmVxX2NvdW50ZXJzIGhhcyBhbHJlYWR5IGVuYWJsZWQKKwkgKiBwb2xpY3kgY3B1cy4K
KwkgKi8KKwlpZiAoIWhhdmVfcG9saWN5ICYmIGNwdW1hc2tfZXF1YWwodmFsaWRfY3B1cywgY3B1
X3ByZXNlbnRfbWFzaykpCisJCWNwdW1hc2tfb3IoYW11X2ZpZV9jcHVzLCBhbXVfZmllX2NwdXMs
IHZhbGlkX2NwdXMpOworCisJaWYgKCFjcHVtYXNrX2VtcHR5KGFtdV9maWVfY3B1cykpIHsKKwkJ
cHJfaW5mbygiQ1BVc1slKnBibF06IGNvdW50ZXJzIHdpbGwgYmUgdXNlZCBmb3IgRklFLiIsCisJ
CQljcHVtYXNrX3ByX2FyZ3MoYW11X2ZpZV9jcHVzKSk7CisJCXN0YXRpY19icmFuY2hfZW5hYmxl
KCZhbXVfZmllX2tleSk7CisJfQorCitmcmVlX3ZhbGlkX21hc2s6CisJZnJlZV9jcHVtYXNrX3Zh
cih2YWxpZF9jcHVzKTsKKworCXJldHVybiByZXQ7Cit9CitsYXRlX2luaXRjYWxsX3N5bmMoaW5p
dF9hbXVfZmllKTsKKworYm9vbCBhcmNoX2ZyZXFfY291bnRlcnNfYXZhaWxhYmxlKHN0cnVjdCBj
cHVtYXNrICpjcHVzKQoreworCXJldHVybiBhbXVfZnJlcV9pbnZhcmlhbnQoKSAmJgorCSAgICAg
ICBjcHVtYXNrX3N1YnNldChjcHVzLCBhbXVfZmllX2NwdXMpOworfQorCit2b2lkIHRvcG9sb2d5
X3NjYWxlX2ZyZXFfdGljayh2b2lkKQoreworCXU2NCBwcmV2X2NvcmVfY250LCBwcmV2X2NvbnN0
X2NudDsKKwl1NjQgY29yZV9jbnQsIGNvbnN0X2NudCwgc2NhbGU7CisJaW50IGNwdSA9IHNtcF9w
cm9jZXNzb3JfaWQoKTsKKworCWlmICghYW11X2ZyZXFfaW52YXJpYW50KCkpCisJCXJldHVybjsK
KworCWlmICghY3B1bWFza190ZXN0X2NwdShjcHUsIGFtdV9maWVfY3B1cykpCisJCXJldHVybjsK
KworCWNvbnN0X2NudCA9IHJlYWRfc3lzcmVnX3MoU1lTX0FNRVZDTlRSMF9DT05TVF9FTDApOwor
CWNvcmVfY250ID0gcmVhZF9zeXNyZWdfcyhTWVNfQU1FVkNOVFIwX0NPUkVfRUwwKTsKKwlwcmV2
X2NvbnN0X2NudCA9IHRoaXNfY3B1X3JlYWQoYXJjaF9jb25zdF9jeWNsZXNfcHJldik7CisJcHJl
dl9jb3JlX2NudCA9IHRoaXNfY3B1X3JlYWQoYXJjaF9jb3JlX2N5Y2xlc19wcmV2KTsKKworCWlm
ICh1bmxpa2VseShjb3JlX2NudCA8PSBwcmV2X2NvcmVfY250IHx8CisJCSAgICAgY29uc3RfY250
IDw9IHByZXZfY29uc3RfY250KSkKKwkJZ290byBzdG9yZV9hbmRfZXhpdDsKKworCS8qCisJICoJ
ICAgIC9cY29yZSAgICBhcmNoX21heF9mcmVxX3NjYWxlCisJICogc2NhbGUgPSAgLS0tLS0tLSAq
IC0tLS0tLS0tLS0tLS0tLS0tLS0tCisJICoJICAgIC9cY29uc3QgICBTQ0hFRF9DQVBBQ0lUWV9T
Q0FMRQorCSAqCisJICogU2VlIHZhbGlkYXRlX2NwdV9mcmVxX2ludmFyaWFuY2VfY291bnRlcnMo
KSBmb3IgZGV0YWlscyBvbgorCSAqIGFyY2hfbWF4X2ZyZXFfc2NhbGUgYW5kIHRoZSB1c2Ugb2Yg
U0NIRURfQ0FQQUNJVFlfU0hJRlQuCisJICovCisJc2NhbGUgPSBjb3JlX2NudCAtIHByZXZfY29y
ZV9jbnQ7CisJc2NhbGUgKj0gdGhpc19jcHVfcmVhZChhcmNoX21heF9mcmVxX3NjYWxlKTsKKwlz
Y2FsZSA9IGRpdjY0X3U2NChzY2FsZSA+PiBTQ0hFRF9DQVBBQ0lUWV9TSElGVCwKKwkJCSAgY29u
c3RfY250IC0gcHJldl9jb25zdF9jbnQpOworCisJc2NhbGUgPSBtaW5fdCh1bnNpZ25lZCBsb25n
LCBzY2FsZSwgU0NIRURfQ0FQQUNJVFlfU0NBTEUpOworCXRoaXNfY3B1X3dyaXRlKGZyZXFfc2Nh
bGUsICh1bnNpZ25lZCBsb25nKXNjYWxlKTsKKworc3RvcmVfYW5kX2V4aXQ6CisJdGhpc19jcHVf
d3JpdGUoYXJjaF9jb3JlX2N5Y2xlc19wcmV2LCBjb3JlX2NudCk7CisJdGhpc19jcHVfd3JpdGUo
YXJjaF9jb25zdF9jeWNsZXNfcHJldiwgY29uc3RfY250KTsKK30KKyNlbmRpZiAvKiBDT05GSUdf
QVJNNjRfQU1VX0VYVE4gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvYmFzZS9hcmNoX3RvcG9sb2d5
LmMgYi9kcml2ZXJzL2Jhc2UvYXJjaF90b3BvbG9neS5jCmluZGV4IDYxMTllMTFhOWY5NS4uOGQ2
MzY3M2MxNjg5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2Jhc2UvYXJjaF90b3BvbG9neS5jCisrKyBi
L2RyaXZlcnMvYmFzZS9hcmNoX3RvcG9sb2d5LmMKQEAgLTIxLDYgKzIxLDEwIEBACiAjaW5jbHVk
ZSA8bGludXgvc2NoZWQuaD4KICNpbmNsdWRlIDxsaW51eC9zbXAuaD4KIAorX193ZWFrIGJvb2wg
YXJjaF9mcmVxX2NvdW50ZXJzX2F2YWlsYWJsZShzdHJ1Y3QgY3B1bWFzayAqY3B1cykKK3sKKwly
ZXR1cm4gZmFsc2U7Cit9CiBERUZJTkVfUEVSX0NQVSh1bnNpZ25lZCBsb25nLCBmcmVxX3NjYWxl
KSA9IFNDSEVEX0NBUEFDSVRZX1NDQUxFOwogCiB2b2lkIGFyY2hfc2V0X2ZyZXFfc2NhbGUoc3Ry
dWN0IGNwdW1hc2sgKmNwdXMsIHVuc2lnbmVkIGxvbmcgY3VyX2ZyZXEsCkBAIC0yOSw2ICszMywx
NCBAQCB2b2lkIGFyY2hfc2V0X2ZyZXFfc2NhbGUoc3RydWN0IGNwdW1hc2sgKmNwdXMsIHVuc2ln
bmVkIGxvbmcgY3VyX2ZyZXEsCiAJdW5zaWduZWQgbG9uZyBzY2FsZTsKIAlpbnQgaTsKIAorCS8q
CisJICogSWYgdGhlIHVzZSBvZiBjb3VudGVycyBmb3IgRklFIGlzIGVuYWJsZWQsIGp1c3QgcmV0
dXJuIGFzIHdlIGRvbid0CisJICogd2FudCB0byB1cGRhdGUgdGhlIHNjYWxlIGZhY3RvciB3aXRo
IGluZm9ybWF0aW9uIGZyb20gQ1BVRlJFUS4KKwkgKiBJbnN0ZWFkIHRoZSBzY2FsZSBmYWN0b3Ig
d2lsbCBiZSB1cGRhdGVkIGZyb20gYXJjaF9zY2FsZV9mcmVxX3RpY2suCisJICovCisJaWYgKGFy
Y2hfZnJlcV9jb3VudGVyc19hdmFpbGFibGUoY3B1cykpCisJCXJldHVybjsKKwogCXNjYWxlID0g
KGN1cl9mcmVxIDw8IFNDSEVEX0NBUEFDSVRZX1NISUZUKSAvIG1heF9mcmVxOwogCiAJZm9yX2Vh
Y2hfY3B1KGksIGNwdXMpCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2FyY2hfdG9wb2xvZ3ku
aCBiL2luY2x1ZGUvbGludXgvYXJjaF90b3BvbG9neS5oCmluZGV4IDMwMTVlY2JiOTBiMS4uMWNj
ZGRkYjU0MWE3IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2FyY2hfdG9wb2xvZ3kuaAorKysg
Yi9pbmNsdWRlL2xpbnV4L2FyY2hfdG9wb2xvZ3kuaApAQCAtMzMsNiArMzMsOCBAQCB1bnNpZ25l
ZCBsb25nIHRvcG9sb2d5X2dldF9mcmVxX3NjYWxlKGludCBjcHUpCiAJcmV0dXJuIHBlcl9jcHUo
ZnJlcV9zY2FsZSwgY3B1KTsKIH0KIAorYm9vbCBhcmNoX2ZyZXFfY291bnRlcnNfYXZhaWxhYmxl
KHN0cnVjdCBjcHVtYXNrICpjcHVzKTsKKwogc3RydWN0IGNwdV90b3BvbG9neSB7CiAJaW50IHRo
cmVhZF9pZDsKIAlpbnQgY29yZV9pZDsKLS0gCjIuMTcuMQoKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmxpbnV4LWFybS1rZXJuZWwgbWFpbGluZyBsaXN0
CmxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpodHRwOi8vbGlzdHMuaW5mcmFk
ZWFkLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LWFybS1rZXJuZWwK
