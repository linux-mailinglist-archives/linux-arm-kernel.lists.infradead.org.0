Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 87546F8FFD
	for <lists+linux-arm-kernel@lfdr.de>; Tue, 12 Nov 2019 13:52:12 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:In-Reply-To:MIME-Version:Date:
	Message-ID:From:References:To:Subject:Reply-To:Content-ID:Content-Description
	:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=gVoJ5qT19rGT5XUWYQKBiRH3YqNZVjEQ+I+BGdpTDig=; b=jxKVvsd1b3vpkh
	aFIBOmVmxRFWT/B8vGUO6rCAPBOVLP+zCy+HZcpxVz7F7DeyG+xrWBxLNxMg6LES9tQDz0YqLi9G2
	ZgPfC4XLRky8cF+jV+RlWOdPqsvC3nEs+EO20jQL0qgRl0TjyQHNvrJrU2luOvJRBfcTkU6FnmmEk
	M6WLwgV3vbTfVWUI2iiyXIrSahFBJ6ydkAvg8ELkhMf0Uzb3VOefIrtbJcOMmuSjXSjGmuV7rIFEr
	NTuFFEU1Ex2QQbggsVwTc5rIjm8ATN+dtotPh2NCtnpWmDSUx2mF4VaKwXDdyBnB3VZJWKionZoFr
	YhvQ5RroRxOwRKOsVtXw==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1iUVeU-0004Q1-LY; Tue, 12 Nov 2019 12:52:10 +0000
Received: from foss.arm.com ([217.140.110.172])
 by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iUVeJ-0004PC-FR
 for linux-arm-kernel@lists.infradead.org; Tue, 12 Nov 2019 12:52:01 +0000
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 3375C30E;
 Tue, 12 Nov 2019 04:51:58 -0800 (PST)
Received: from [10.1.196.63] (e123195-lin.cambridge.arm.com [10.1.196.63])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 433503F6C4;
 Tue, 12 Nov 2019 04:51:57 -0800 (PST)
Subject: Re: [kvm-unit-tests PATCH 03/17] arm: gic: Provide per-IRQ helper
 functions
To: Andre Przywara <andre.przywara@arm.com>, Andrew Jones
 <drjones@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>
References: <20191108144240.204202-1-andre.przywara@arm.com>
 <20191108144240.204202-4-andre.przywara@arm.com>
From: Alexandru Elisei <alexandru.elisei@arm.com>
Message-ID: <9cc460d1-c01f-6b0a-c6be-292a63174d68@arm.com>
Date: Tue, 12 Nov 2019 12:51:55 +0000
User-Agent: Mozilla/5.0 (X11; Linux aarch64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <20191108144240.204202-4-andre.przywara@arm.com>
Content-Language: en-US
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191112_045159_602720_07EE456E 
X-CRM114-Status: GOOD (  26.08  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: Marc Zyngier <maz@kernel.org>, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

SGksCgpPbiAxMS84LzE5IDI6NDIgUE0sIEFuZHJlIFByenl3YXJhIHdyb3RlOgo+IEEgY29tbW9u
IHRoZW1lIHdoZW4gYWNjZXNzaW5nIHBlci1JUlEgcGFyYW1ldGVycyBpbiB0aGUgR0lDIGRpc3Ry
aWJ1dG9yCj4gaXMgdG8gc2V0IGZpZWxkcyBvZiBhIGNlcnRhaW4gYml0IHdpZHRoIGluIGEgcmFu
Z2Ugb2YgTU1JTyByZWdpc3RlcnMuCj4gRXhhbXBsZXMgYXJlIHRoZSBlbmFibGVkIHN0YXR1cyAo
b25lIGJpdCBwZXIgSVJRKSwgdGhlIGxldmVsL2VkZ2UKPiBjb25maWd1cmF0aW9uICgyIGJpdHMg
cGVyIElSUSkgb3IgdGhlIHByaW9yaXR5ICg4IGJpdHMgcGVyIElSUSkuCj4KPiBBZGQgYSBnZW5l
cmljIGhlbHBlciBmdW5jdGlvbiB3aGljaCBpcyBhYmxlIHRvIG1hc2sgYW5kIHNldCB0aGUKPiBy
ZXNwZWN0aXZlIG51bWJlciBvZiBiaXRzLCBnaXZlbiB0aGUgSVJRIG51bWJlciBhbmQgdGhlIE1N
SU8gb2Zmc2V0Lgo+IFByb3ZpZGUgd3JhcHBlcnMgdXNpbmcgdGhpcyBmdW5jdGlvbiB0byBlYXNp
bHkgYWxsb3cgY29uZmlndXJpbmcgYW4gSVJRLgo+Cj4gRm9yIG5vdyBhc3N1bWUgdGhhdCBwcml2
YXRlIElSUSBudW1iZXJzIGFsd2F5cyByZWZlciB0byB0aGUgY3VycmVudCBDUFUuCj4gSW4gYSBH
SUN2MiBhY2Nlc3NpbmcgdGhlICJvdGhlciIgcHJpdmF0ZSBJUlFzIGlzIG5vdCBlYXNpbHkgZG9h
YmxlICh0aGUKPiByZWdpc3RlcnMgYXJlIGJhbmtlZCBwZXIgQ1BVIG9uIHRoZSBzYW1lIE1NSU8g
YWRkcmVzcyksIHNvIHdlIGltcG9zZSB0aGUKPiBzYW1lIGxpbWl0YXRpb24gb24gR0lDdjMsIGV2
ZW4gdGhvdWdoIHRob3NlIHJlZ2lzdGVycyBhcmUgbm90IGJhbmtlZAo+IHRoZXJlIGFueW1vcmUu
Cj4KPiBTaWduZWQtb2ZmLWJ5OiBBbmRyZSBQcnp5d2FyYSA8YW5kcmUucHJ6eXdhcmFAYXJtLmNv
bT4KPiAtLS0KPiAgbGliL2FybS9hc20vZ2ljLXYzLmggfCAgMSArCj4gIGxpYi9hcm0vYXNtL2dp
Yy5oICAgIHwgIDkgKysrKysKPiAgbGliL2FybS9naWMuYyAgICAgICAgfCA5MCArKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwo+ICAzIGZpbGVzIGNoYW5nZWQsIDEw
MCBpbnNlcnRpb25zKCspCj4KPiBkaWZmIC0tZ2l0IGEvbGliL2FybS9hc20vZ2ljLXYzLmggYi9s
aWIvYXJtL2FzbS9naWMtdjMuaAo+IGluZGV4IGVkNmE1YWQuLjhjZmFlZDEgMTAwNjQ0Cj4gLS0t
IGEvbGliL2FybS9hc20vZ2ljLXYzLmgKPiArKysgYi9saWIvYXJtL2FzbS9naWMtdjMuaAo+IEBA
IC0yMyw2ICsyMyw3IEBACj4gICNkZWZpbmUgR0lDRF9DVExSX0VOQUJMRV9HMUEJCSgxVSA8PCAx
KQo+ICAjZGVmaW5lIEdJQ0RfQ1RMUl9FTkFCTEVfRzEJCSgxVSA8PCAwKQo+ICAKPiArI2RlZmlu
ZSBHSUNEX0lST1VURVIJCQkweDYwMDAKPiAgI2RlZmluZSBHSUNEX1BJRFIyCQkJMHhmZmU4Cj4g
IAo+ICAvKiBSZS1EaXN0cmlidXRvciByZWdpc3RlcnMsIG9mZnNldHMgZnJvbSBSRF9iYXNlICov
Cj4gZGlmZiAtLWdpdCBhL2xpYi9hcm0vYXNtL2dpYy5oIGIvbGliL2FybS9hc20vZ2ljLmgKPiBp
bmRleCAxZmMxMGEwLi4yMWNkYjU4IDEwMDY0NAo+IC0tLSBhL2xpYi9hcm0vYXNtL2dpYy5oCj4g
KysrIGIvbGliL2FybS9hc20vZ2ljLmgKPiBAQCAtMTUsNiArMTUsNyBAQAo+ICAjZGVmaW5lIEdJ
Q0RfSUlEUgkJCTB4MDAwOAo+ICAjZGVmaW5lIEdJQ0RfSUdST1VQUgkJCTB4MDA4MAo+ICAjZGVm
aW5lIEdJQ0RfSVNFTkFCTEVSCQkJMHgwMTAwCj4gKyNkZWZpbmUgR0lDRF9JQ0VOQUJMRVIJCQkw
eDAxODAKPiAgI2RlZmluZSBHSUNEX0lTUEVORFIJCQkweDAyMDAKPiAgI2RlZmluZSBHSUNEX0lD
UEVORFIJCQkweDAyODAKPiAgI2RlZmluZSBHSUNEX0lTQUNUSVZFUgkJCTB4MDMwMAo+IEBAIC03
Myw1ICs3NCwxMyBAQCBleHRlcm4gdm9pZCBnaWNfd3JpdGVfZW9pcih1MzIgaXJxc3RhdCk7Cj4g
IGV4dGVybiB2b2lkIGdpY19pcGlfc2VuZF9zaW5nbGUoaW50IGlycSwgaW50IGNwdSk7Cj4gIGV4
dGVybiB2b2lkIGdpY19pcGlfc2VuZF9tYXNrKGludCBpcnEsIGNvbnN0IGNwdW1hc2tfdCAqZGVz
dCk7Cj4gIAo+ICt2b2lkIGdpY19zZXRfaXJxX2JpdChpbnQgaXJxLCBpbnQgb2Zmc2V0KTsKPiAr
dm9pZCBnaWNfZW5hYmxlX2lycShpbnQgaXJxKTsKPiArdm9pZCBnaWNfZGlzYWJsZV9pcnEoaW50
IGlycSk7Cj4gK3ZvaWQgZ2ljX3NldF9pcnFfcHJpb3JpdHkoaW50IGlycSwgdTggcHJpbyk7Cj4g
K3ZvaWQgZ2ljX3NldF9pcnFfdGFyZ2V0KGludCBpcnEsIGludCBjcHUpOwo+ICt2b2lkIGdpY19z
ZXRfaXJxX2dyb3VwKGludCBpcnEsIGludCBncm91cCk7Cj4gK2ludCBnaWNfZ2V0X2lycV9ncm91
cChpbnQgaXJxKTsKPiArCj4gICNlbmRpZiAvKiAhX19BU1NFTUJMWV9fICovCj4gICNlbmRpZiAv
KiBfQVNNQVJNX0dJQ19IXyAqLwo+IGRpZmYgLS1naXQgYS9saWIvYXJtL2dpYy5jIGIvbGliL2Fy
bS9naWMuYwo+IGluZGV4IDk0MzAxMTYuLmNmNGU4MTEgMTAwNjQ0Cj4gLS0tIGEvbGliL2FybS9n
aWMuYwo+ICsrKyBiL2xpYi9hcm0vZ2ljLmMKPiBAQCAtMTQ2LDMgKzE0Niw5MyBAQCB2b2lkIGdp
Y19pcGlfc2VuZF9tYXNrKGludCBpcnEsIGNvbnN0IGNwdW1hc2tfdCAqZGVzdCkKPiAgCWFzc2Vy
dChnaWNfY29tbW9uX29wcyAmJiBnaWNfY29tbW9uX29wcy0+aXBpX3NlbmRfbWFzayk7Cj4gIAln
aWNfY29tbW9uX29wcy0+aXBpX3NlbmRfbWFzayhpcnEsIGRlc3QpOwo+ICB9Cj4gKwo+ICtlbnVt
IGdpY19iaXRfYWNjZXNzIHsKPiArCUFDQ0VTU19SRUFELAo+ICsJQUNDRVNTX1NFVCwKPiArCUFD
Q0VTU19STVcKPiArfTsKPiArCj4gK3N0YXRpYyB1OCBnaWNfbWFza2VkX2lycV9iaXRzKGludCBp
cnEsIGludCBvZmZzZXQsIGludCBiaXRzLCB1OCB2YWx1ZSwKPiArCQkJICAgICAgZW51bSBnaWNf
Yml0X2FjY2VzcyBhY2Nlc3MpCj4gK3sKPiArCXZvaWQgKmJhc2U7Cj4gKwlpbnQgc3BsaXQgPSAz
MiAvIGJpdHM7Cj4gKwlpbnQgc2hpZnQgPSAoaXJxICUgc3BsaXQpICogYml0czsKPiArCXUzMiBy
ZWcsIG1hc2sgPSAoKDFVIDw8IGJpdHMpIC0gMSkgPDwgc2hpZnQ7Cj4gKwo+ICsJc3dpdGNoIChn
aWNfdmVyc2lvbigpKSB7Cj4gKwljYXNlIDI6Cj4gKwkJYmFzZSA9IGdpY3YyX2Rpc3RfYmFzZSgp
Owo+ICsJCWJyZWFrOwo+ICsJY2FzZSAzOgo+ICsJCWlmIChpcnEgPCAzMikKPiArCQkJYmFzZSA9
IGdpY3YzX3NnaV9iYXNlKCk7Cj4gKwkJZWxzZQo+ICsJCQliYXNlID0gZ2ljdjNfZGlzdF9iYXNl
KCk7Cj4gKwkJYnJlYWs7Cj4gKwlkZWZhdWx0Ogo+ICsJCXJldHVybiAwOwo+ICsJfQo+ICsJYmFz
ZSArPSBvZmZzZXQgKyAoaXJxIC8gc3BsaXQpICogNDsKClRoaXMgaXMgcHJvYmFibHkgbm90IHdo
YXQgeW91IGludGVuZGVkLCBpZiBpcnEgPSA0IGFuZCBzcGxpdCA9IDgsIChpcnEgLyBzcGxpdCkg
Kgo0ID0gMC4gT24gdGhlIG90aGVyIGhhbmQsIGlycSAqIDQgLyBzcGxpdCA9IDIuCgo+ICsKPiAr
CXN3aXRjaCAoYWNjZXNzKSB7Cj4gKwljYXNlIEFDQ0VTU19SRUFEOgo+ICsJCXJldHVybiAocmVh
ZGwoYmFzZSkgJiBtYXNrKSA+PiBzaGlmdDsKPiArCWNhc2UgQUNDRVNTX1NFVDoKPiArCQlyZWcg
PSAwOwo+ICsJCWJyZWFrOwo+ICsJY2FzZSBBQ0NFU1NfUk1XOgo+ICsJCXJlZyA9IHJlYWRsKGJh
c2UpICYgfm1hc2s7Cj4gKwkJYnJlYWs7Cj4gKwl9Cj4gKwo+ICsJd3JpdGVsKHJlZyB8ICgodTMy
KXZhbHVlIDw8IHNoaWZ0KSwgYmFzZSk7Cj4gKwo+ICsJcmV0dXJuIDA7Cj4gK30KVGhpcyBmdW5j
dGlvbiBsb29rcyBhIGJpdCBvdXQgb2YgcGxhY2U6Ci0gdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGEg
dmVyYiBpbiB0aGUgcGFzdCB0ZW5zZSAoJ21hc2tlZCcpLCB3aGljaCBtYWtlcyBtZSB0aGluawpp
dCBzaG91bGQgcmV0dXJuIGEgYm9vbCwgYnV0IHRoZSBmdW5jdGlvbiBhY3R1YWxseSBwZXJmb3Jt
cyBhbiBhY2Nlc3MgdG8gYSBHSUMKcmVnaXN0ZXIuCi0gdGhlIHJldHVybiB2YWx1ZSBpcyBhbiB1
OCwgYnV0IGl0IHJldHVybnMgYW4gdTMyIG9uIGEgcmVhZCwgYmVjYXVzZSByZWFkbApyZXR1cm5z
IGFuIHUzMi4KLSB0aGUgc2VtYW50aWNzIG9mIHRoZSBmdW5jdGlvbiBhbmQgdGhlIHJldHVybiB2
YWx1ZSBjaGFuZ2UgYmFzZWQgb24gdGhlIGFjY2VzcwpwYXJhbWV0ZXI7IHdvcnNlIHlldCwgdGhl
IHJldHVybiB2YWx1ZSBvbiBhIHdyaXRlIGlzIGNvbXBsZXRlbHkgaWdub3JlZCBieSB0aGUKY2Fs
bGVycyBhbmQgdGhlIHZhbHVlIHBhcmFtZXRlciBpcyBpZ25vcmVkIG9uIHJlYWRzLgoKWW91IGNv
dWxkIHNwbGl0IGl0IGludG8gc2VwYXJhdGUgZnVuY3Rpb25zIC0gc2VlIGJlbG93LgoKPiArCj4g
K3ZvaWQgZ2ljX3NldF9pcnFfYml0KGludCBpcnEsIGludCBvZmZzZXQpCj4gK3sKPiArCWdpY19t
YXNrZWRfaXJxX2JpdHMoaXJxLCBvZmZzZXQsIDEsIDEsIEFDQ0VTU19TRVQpOwo+ICt9Cj4gKwo+
ICt2b2lkIGdpY19lbmFibGVfaXJxKGludCBpcnEpCj4gK3sKPiArCWdpY19zZXRfaXJxX2JpdChp
cnEsIEdJQ0RfSVNFTkFCTEVSKTsKPiArfQo+ICsKPiArdm9pZCBnaWNfZGlzYWJsZV9pcnEoaW50
IGlycSkKPiArewo+ICsJZ2ljX3NldF9pcnFfYml0KGlycSwgR0lDRF9JQ0VOQUJMRVIpOwo+ICt9
Cj4gKwo+ICt2b2lkIGdpY19zZXRfaXJxX3ByaW9yaXR5KGludCBpcnEsIHU4IHByaW8pCj4gK3sK
PiArCWdpY19tYXNrZWRfaXJxX2JpdHMoaXJxLCBHSUNEX0lQUklPUklUWVIsIDgsIHByaW8sIEFD
Q0VTU19STVcpOwo+ICt9Cj4gKwo+ICt2b2lkIGdpY19zZXRfaXJxX3RhcmdldChpbnQgaXJxLCBp
bnQgY3B1KQo+ICt7Cj4gKwlpZiAoaXJxIDwgMzIpCj4gKwkJcmV0dXJuOwo+ICsKPiArCWlmIChn
aWNfdmVyc2lvbigpID09IDIpIHsKPiArCQlnaWNfbWFza2VkX2lycV9iaXRzKGlycSwgR0lDRF9J
VEFSR0VUU1IsIDgsIDFVIDw8IGNwdSwKPiArCQkJCSAgICBBQ0NFU1NfUk1XKTsKPiArCj4gKwkJ
cmV0dXJuOwo+ICsJfQo+ICsKPiArCXdyaXRlcShjcHVzW2NwdV0sIGdpY3YzX2Rpc3RfYmFzZSgp
ICsgR0lDRF9JUk9VVEVSICsgaXJxICogOCk7Cj4gK30KPiArCj4gK3ZvaWQgZ2ljX3NldF9pcnFf
Z3JvdXAoaW50IGlycSwgaW50IGdyb3VwKQo+ICt7Cj4gKwlnaWNfbWFza2VkX2lycV9iaXRzKGly
cSwgR0lDRF9JR1JPVVBSLCAxLCBncm91cCwgQUNDRVNTX1JNVyk7Cj4gK30KPiArCj4gK2ludCBn
aWNfZ2V0X2lycV9ncm91cChpbnQgaXJxKQo+ICt7Cj4gKwlyZXR1cm4gZ2ljX21hc2tlZF9pcnFf
Yml0cyhpcnEsIEdJQ0RfSUdST1VQUiwgMSwgMCwgQUNDRVNTX1JFQUQpOwo+ICt9CgpUaGUgcGF0
dGVybiBmb3IgdGhlIHB1YmxpYyBmdW5jdGlvbnMgaW4gdGhpcyBmaWxlIGlzIHRvIGNoZWNrIHRo
YXQgdGhlIEdJQyBoYXMKYmVlbiBpbml0aWFsaXplZCAoYXNzZXJ0KGdpY19jb21tb25fb3BzKSku
CgpJIHByb3Bvc2Ugd2UgcmV3cml0ZSB0aGUgZnVuY3Rpb25zIGxpa2UgdGhpcyAoY29tcGlsZSB0
ZXN0ZWQgb25seSk6CgpkaWZmIC0tZ2l0IGEvbGliL2FybS9naWMuYyBiL2xpYi9hcm0vZ2ljLmMK
aW5kZXggOTQzMDExNjkyMTVjLi4xZjVhYTdiNDg4MjggMTAwNjQ0Ci0tLSBhL2xpYi9hcm0vZ2lj
LmMKKysrIGIvbGliL2FybS9naWMuYwpAQCAtMTQ2LDMgKzE0Niw4OSBAQCB2b2lkIGdpY19pcGlf
c2VuZF9tYXNrKGludCBpcnEsIGNvbnN0IGNwdW1hc2tfdCAqZGVzdCkKwqDCoMKgwqDCoMKgwqAg
YXNzZXJ0KGdpY19jb21tb25fb3BzICYmIGdpY19jb21tb25fb3BzLT5pcGlfc2VuZF9tYXNrKTsK
wqDCoMKgwqDCoMKgwqAgZ2ljX2NvbW1vbl9vcHMtPmlwaV9zZW5kX21hc2soaXJxLCBkZXN0KTsK
wqB9CisKK3N0YXRpYyB2b2lkICpnaWNfZ2V0X2lycV9yZWcoaW50IGlycSwgaW50IG9mZnNldCwg
aW50IHdpZHRoKQoreworwqDCoMKgwqDCoMKgIHZvaWQgKmJhc2U7CisKK8KgwqDCoMKgwqDCoCBz
d2l0Y2ggKGdpY192ZXJzaW9uKCkpIHsKK8KgwqDCoMKgwqDCoCBjYXNlIDI6CivCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIGJhc2UgPSBnaWN2Ml9kaXN0X2Jhc2UoKTsKK8KgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgYnJlYWs7CivCoMKgwqDCoMKgwqAgY2FzZSAzOgorwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCBpZiAoaXJxIDwgMzIpCivCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBiYXNlID0gZ2ljdjNfc2dpX2Jhc2UoKTsKK8KgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgZWxzZQorwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgYmFzZSA9IGdpY3YzX2Rpc3RfYmFzZSgpOworwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCBicmVhazsKK8KgwqDCoMKgwqDCoCBkZWZhdWx0OgorwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCByZXR1cm4gMDsKK8KgwqDCoMKgwqDCoCB9CisKK8KgwqDCoMKgwqDC
oCByZXR1cm4gYmFzZSArIG9mZnNldCArIChpcnEgKiB3aWR0aCAvIDMyKTsKK30KKworc3RhdGlj
IHZvaWQgZ2ljX3NldF9pcnFfZmllbGQoaW50IGlycSwgaW50IG9mZnNldCwgaW50IHdpZHRoLCB1
MzIgdmFsdWUpCit7CivCoMKgwqDCoMKgwqAgdm9pZCAqcmVnOworwqDCoMKgwqDCoMKgIHUzMiB2
YWw7CivCoMKgwqDCoMKgwqAgaW50IHNoaWZ0ID0gKGlycSAqIHdpZHRoKSAlIDMyOworwqDCoMKg
wqDCoMKgIHUzMiBtYXNrID0gKCgxVSA8PCB3aWR0aCkgLSAxKSA8PCBzaGlmdDsKKworwqDCoMKg
wqDCoMKgIHJlZyA9IGdpY19nZXRfaXJxX3JlZyhpcnEsIG9mZnNldCwgd2lkdGgpOworwqDCoMKg
wqDCoMKgIHZhbCA9IHJlYWRsKHJlZyk7CivCoMKgwqDCoMKgwqAgdmFsID0gKHZhbCAmIH5tYXNr
KSB8ICh2YWx1ZSA8PCBzaGlmdCk7CivCoMKgwqDCoMKgwqAgd3JpdGVsKHZhbCwgcmVnKTsKK30K
Kwordm9pZCBnaWNfZW5hYmxlX2lycShpbnQgaXJxKQoreworwqDCoMKgwqDCoMKgIGFzc2VydChn
aWNfY29tbW9uX29wcyk7CivCoMKgwqDCoMKgwqAgZ2ljX3NldF9pcnFfZmllbGQoaXJxLCBHSUNE
X0lTRU5BQkxFUiwgMSwgMSk7Cit9CisKK3ZvaWQgZ2ljX2Rpc2FibGVfaXJxKGludCBpcnEpCit7
CivCoMKgwqDCoMKgwqAgYXNzZXJ0KGdpY19jb21tb25fb3BzKTsKK8KgwqDCoMKgwqDCoCBnaWNf
c2V0X2lycV9maWVsZChpcnEsIEdJQ0RfSUNFTkFCTEVSLCAxLCAxKTsKK30KKwordm9pZCBnaWNf
c2V0X2lycV9wcmlvcml0eShpbnQgaXJxLCB1OCBwcmlvKQoreworwqDCoMKgwqDCoMKgIGFzc2Vy
dChnaWNfY29tbW9uX29wcyk7CivCoMKgwqDCoMKgwqAgZ2ljX3NldF9pcnFfZmllbGQoaXJxLCBH
SUNEX0lQUklPUklUWVIsIDgsIHByaW8pOworfQorCit2b2lkIGdpY19zZXRfaXJxX3RhcmdldChp
bnQgaXJxLCBpbnQgY3B1KQoreworwqDCoMKgwqDCoMKgIGFzc2VydChnaWNfY29tbW9uX29wcyk7
CisKK8KgwqDCoMKgwqDCoCBpZiAoaXJxIDwgMzIpCivCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIHJldHVybjsKKworwqDCoMKgwqDCoMKgIGlmIChnaWNfdmVyc2lvbigpID09IDIpIHsKK8Kg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZ2ljX3NldF9pcnFfZmllbGQoaXJxLCBHSUNEX0lU
QVJHRVRTUiwgOCwgMVUgPDwgY3B1KTsKK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0
dXJuOworwqDCoMKgwqDCoMKgIH0KKworwqDCoMKgwqDCoMKgIHdyaXRlcShjcHVzW2NwdV0sIGdp
Y3YzX2Rpc3RfYmFzZSgpICsgR0lDRF9JUk9VVEVSICsgaXJxICogOCk7Cit9CisKK3ZvaWQgZ2lj
X3NldF9pcnFfZ3JvdXAoaW50IGlycSwgaW50IGdyb3VwKQoreworwqDCoMKgwqDCoMKgIGFzc2Vy
dChnaWNfY29tbW9uX29wcyk7CivCoMKgwqDCoMKgwqAgZ2ljX3NldF9pcnFfZmllbGQoaXJxLCBH
SUNEX0lHUk9VUFIsIDEsIDEpOworfQorCitpbnQgZ2ljX2dldF9pcnFfZ3JvdXAoaW50IGlycSkK
K3sKK8KgwqDCoMKgwqDCoCB2b2lkICpyZWc7CivCoMKgwqDCoMKgwqAgdTMyIHZhbDsKK8KgwqDC
oMKgwqDCoCBpbnQgc2hpZnQgPSBpcnEgJSAzMjsKKworwqDCoMKgwqDCoMKgIGFzc2VydChnaWNf
Y29tbW9uX29wcyk7CivCoMKgwqDCoMKgwqAgcmVnID0gZ2ljX2dldF9pcnFfcmVnKGlycSwgR0lD
RF9JR1JPVVBSLCAxKTsKK8KgwqDCoMKgwqDCoCB2YWwgPSByZWFkbChyZWcpOworCivCoMKgwqDC
oMKgwqAgcmV0dXJuICh2YWwgPj4gc2hpZnQpICYgMHgxOworfQoKQSBiaXQgbW9yZSBsaW5lcyBv
ZiBjb2RlLCBidXQgdG8gbWUgbW9yZSByZWFkYWJsZS4gV2hhdCBkbyB5b3UgdGhpbms/CgoKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmxpbnV4LWFybS1r
ZXJuZWwgbWFpbGluZyBsaXN0CmxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpo
dHRwOi8vbGlzdHMuaW5mcmFkZWFkLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LWFybS1rZXJu
ZWwK
