Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 145AB11C44E
	for <lists+linux-arm-kernel@lfdr.de>; Thu, 12 Dec 2019 04:45:49 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:Message-Id:Date:Subject:To
	:From:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
	Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:
	List-Owner; bh=mersxsU4biPKhY7r6z9ikLompg04pMEM1Bcbxif5loc=; b=fCGT+97pm4za8R
	qVl9N/PLCDxAaqyvpOavHTTfs+xTW7WtRuhnY0oPRs/ZRoctBHnMWL9UeJIlQAdIe+Qvo3c8Ag2LF
	0RQwYYxb5Np3E28kAfpd5xv80xMtEpE5kf0muzQQnY22dL0R6GFy+xUXW8QPoBgK/eFneQl5Pj3yJ
	JVHZbLNw+qp1mzxmCuP5/VWkhx/841u0TkCiWu5TdS/4xgQx1VreGrA375riiDyFFakgEp3xhOebV
	07PX3vcv+DT9jYhBt6+/5cDrMgHA6nTDloee8g3TwvLgOvx09e0TKd4JLj3h8UiTf+R3oadNB4dAZ
	u8jFvmWFvDxNc13OQa9A==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1ifFQ8-0007vb-Np; Thu, 12 Dec 2019 03:45:44 +0000
Received: from mx2.suse.de ([195.135.220.15] helo=mx1.suse.de)
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1ifFKb-0000OZ-0D; Thu, 12 Dec 2019 03:40:11 +0000
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id EA039AE34;
 Thu, 12 Dec 2019 03:39:58 +0000 (UTC)
From: =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>
To: linux-realtek-soc@lists.infradead.org,
	linux-leds@vger.kernel.org
Subject: [RFC 00/25] arm64: realtek: Add Xnano X5 and implement
 TM1628/FD628/AiP1618 LED controllers
Date: Thu, 12 Dec 2019 04:39:27 +0100
Message-Id: <20191212033952.5967-1-afaerber@suse.de>
X-Mailer: git-send-email 2.16.4
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191211_194001_367703_32E23402 
X-CRM114-Status: GOOD (  24.09  )
X-Spam-Score: -1.8 (-)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (-1.8 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [195.135.220.15 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.5 URI_NOVOWEL            URI: URI hostname has long non-vowel sequence
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: linux-rtc@vger.kernel.org, Alessandro Zummo <a.zummo@towertech.it>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>, Roc He <hepeng@zidoo.tv>,
 csd@princeton.com.tw, devicetree@vger.kernel.org, sales@fdhisi.com,
 Mark Brown <broonie@kernel.org>, linux-kernel@vger.kernel.org,
 linux-spi@vger.kernel.org, Rob Herring <robh+dt@kernel.org>,
 Jacek Anaszewski <jacek.anaszewski@gmail.com>, Pavel Machek <pavel@ucw.cz>,
 zypeng@titanmec.com, linux-amlogic@lists.infradead.org,
 =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>,
 linux-arm-kernel@lists.infradead.org, Dan Murphy <dmurphy@ti.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

SGVsbG8sCgpUaGlzIHBhdGNoIHNlcmllcyBpbXBsZW1lbnRzIHRoZSBMRUQgY29udHJvbGxlcnMg
Zm91bmQgaW4gc29tZSBSVEQxMjk1IGJhc2VkClRWIHNldC10b3AgYm94ZXMuCgpFdmVyIHNpbmNl
IEkndmUgaGFkIG1haW5saW5lIExpbnV4IGtlcm5lbHMgYm9vdGluZyBvbiBteSBaaWRvbyBYOVMg
VFYgYm94LAppdCdzIGJlZW4gYnVnZ2luZyBtZSB0aGF0IGl0IGtlcHQgZGlzcGxheWluZyAiYm9v
dCIgb24gaXRzIGZyb250IGRpc3BsYXkuCkEgaG90IGxlYWQgd2FzIGEgVE0xNjI4IGNoaXAgb24g
dGhlIGZyb250IGRpc3BsYXkncyBkYXVnaHRlcmJvYXJkLCB3aGljaApFbmdsaXNoIGFuZCBDaGlu
ZXNlIGRhdGFzaGVldHMgd2VyZSBhdmFpbGFibGUgZm9yLiBUaGUgYmlnZ2VzdCBodXJkbGUKdG8g
b3ZlcmNvbWUgd2FzIHdoZXRoZXIgYW5kIGhvdyB0aGlzIGNoaXAgd2FzIGNvbm5lY3RlZCB0byB0
aGUgU29DLgpDb25mdXNpbmdseSB0aGUgZGF0YXNoZWV0IHRhbGtzIGFib3V0ICJTZXJpYWwgSW50
ZXJmYWNlIiBhbmQgc2hvd3MgcGlucwpESU8sIFNDTEsgYW5kIFNUQjsgd2hlcmVhcyBuZWl0aGVy
IFVBUlQgbm9yIFNQSSBEVCBub2RlcyBzZWVtZWQgdG8gYmUgaW4gdXNlCmZvciB0aGlzLCBubyBt
ZW50aW9uIG9mIHN1Y2ggY2hpcHNldCBpbiB0aGUgYmluYXJ5IHZlbmRvciBEVCwgYW5kIG9ubHkg
b25lCnNlZW1pbmdseSB1bnJlbGF0ZWQgZXhwb3J0ZWQgR1BJTy4gU2FkbHkgWmlkb28gaGF2ZSBy
ZWZ1c2VkIHRvIHNoYXJlIEdQTApzb3VyY2Vjb2RlIHdpdGggbWUsIGFuZCB0aGUgcHVibGljIEdQ
TCBjb2RlIGRyb3BzIGZyb20gTkFTIGFuZCBTQkMgdmVuZG9ycwpkaWRuJ3Qgc2VlbSB0byBpbmNs
dWRlIGRyaXZlcnMgZm9yIHRoaXMgY2hpcC4gTGFzdCB3ZWVrZW5kLCByZXZpZXcgb2YgdmVuZG9y
CkRUIHBpbmN0cmwgbm9kZXMgcmV2ZWFsZWQgYSAic3BpQDEiIHBpbmN0cmwgbm9kZSBpbiB1c2Ug
YnkgdGhlIHBpbmN0cmwgbm9kZQppdHNlbGYsIGRlc3BpdGUgdGhlcmUgYmVpbmcgb25seSBvbmUg
R1NQSSBibG9jayBvbiB0aGUgU29DLiBkZWJ1Z2ZzIHVuZGVyCkFuZHJvaWQgcmV2ZWFsZWQgR1BJ
TyBwaW5zIG5hbWVkICJmcF9zdGIiLCAiZnBfZGF0YSIgYW5kICJmcF9jbGsiIChvbiBYNToKM3gg
InZmZHRlc3QiLCB1bmhlbHBmdWxseSkuIFNvIEkgaGVyZWJ5IHByZXNlbnQgbXkgZmlyc3QgMy13
aXJlIFNQSSBzbGF2ZSwKdXNpbmcgc3RhbmRhcmQgc3BpLWdwaW8gZHJpdmVyLgoKVGhpcyByZXF1
aXJlZCB0byBleHRlbmQgdGhlIHNwaS1ncGlvIGRyaXZlciB3aXRoIExpdHRsZSBFbmRpYW4gc3Vw
cG9ydC4KClRNMTYyOCBhbmQgcmVsYXRlZCBjaGlwc2V0cyBoYXZlIGFuIGludGVybmFsIERpc3Bs
YXkgUkFNLCBmcm9tIHdoaWNoIHRoZXkKY29udHJvbCBhIHR3by1kaW1lbnNpb25hbCBhcnJheSBv
ZiBMRUQgY29tcG9uZW50cywgb2Z0ZW4gdXNlZCBmb3IKc2V2ZW4tc2VnbWVudCBkaXNwbGF5cywg
aS5lLiBjbG9jayBkaXNwbGF5LCBidXQgYWxzbyBmb3IgaW5kaWNhdG9ycy4KSW5kaXZpZHVhbCBM
RURzIGNhbiBiZSB0dXJuZWQgb24vb2ZmLCBidXQgYnJpZ2h0bmVzcyBpcyBhcHBsaWVkIGdsb2Jh
bGx5LgpTb21lIGNoaXBzZXRzIGFsc28gc3VwcG9ydCBwb2xsaW5nIGEgdHdvLWRpbWVuc2lvbmFs
IGtleSBwYWQuCgpUaGlzIGluaXRpYWwgUkZDIGltcGxlbWVudHMgYSBTUEkgc2xhdmUgZHJpdmVy
IHdpdGhpbiBMaW51eCBsZWRzIHN1YnN5c3RlbQphbmQgbGV0cyBEVCBleHBvc2UgaW5kaXZpZHVh
bCBMRUQgY29tcG9uZW50cyBhcyB0d28tc3RhdGUgTEVEcywgYWxsb3dpbmcKdG8gYXNzaWduIHN0
YW5kYXJkIExpbnV4IExFRCB0cmlnZ2VycyBhbmQgdG8gY29udHJvbCB0aGVtIHZpYSBzeXNmcy4K
Ckl0IGdvZXMgb24gdG8gYWRkIGEgInRleHQiIGF0dHJpYnV0ZSB0byB0aGUgZHJpdmVyIHRoYXQg
ZW5hYmxlcyBEVC1jb25maWd1cmVkCnNldmVuLXNlZ21lbnQgZGlzcGxheXM7IEkgd2FzIGV4cGVj
dGluZyB0byBmaW5kIHByZWNlZGVuY2UgaW4gYXV4ZGlzcGxheQpzdWJzeXN0ZW0gYnV0IGNhbWUg
dXAgZW1wdHkuIFNvIG15IGRyaXZlciBjdXJyZW50bHkgaW50ZWdyYXRlcyBpdHMgb3duCmdlbmVy
aWMgKGJ1dCBpbmNvbXBsZXRlKSBjaGFyYWN0ZXItdG8tOC1zZWdtZW50cyBtYXBwaW5nLCBhcyB3
ZWxsIGFzIGluIGEKc2Vjb25kIHN0ZXAgYSBjb21iaW5lZC1jaGFyYWN0ZXJzLXRvLTgtc2VnbWVu
dHMgbWFwcGluZywgd2hpY2ggdGhlbiBnZXRzCm1hcHBlZCB0byB0aGUgY2hpcHNldCdzIGF2YWls
YWJsZSBvdXRwdXQgbGluZXMuIERvaW5nIHRoaXMgYXMgc3lzZnMgZGV2aWNlCmF0dHJpYnV0ZSBo
YWQgdGhlIGFkdmFudGFnZSBvZiBiZWluZyBhYmxlIHRvIHRlc3QgaXQgcXVpY2tseTsgaXQgYWxz
byBsZWF2ZXMKdGltZXpvbmUgbWFuYWdlbWVudCB0byB1c2Vyc3BhY2UgYW5kIGxldHMgaXQgY2hv
b3NlIGJldHdlZW4gd2FsbCBjbG9jayBhbmQKcGxheWJhY2sgdGltZSBhcyBuZWVkZWQuIExFRCB0
cmlnZ2VycyBhcHBlYXJlZCB0byBiZSBwZXItTEVEOyBvdGhlcndpc2UgYW4KUlRDLWltcGxlbWVu
dGVkIGludGVycnVwdCBiYXNlZCBMRUQgdHJpZ2dlciB3b3VsZCd2ZSBiZWVuIG5pY2UgZm9yIFJU
RDExOTUrLApzaW5jZSBteSBwZW5kaW5nIGlycWNoaXAgZHJpdmVyIGV4cG9zZXMgaW50ZXJydXB0
cyBkb3duIHRvIGhhbGYtc2Vjb25kIHRoYXQKd291bGQgc2VlbSBpZGVhbCBmb3IgYWNjdXJhdGVs
eSBkcml2aW5nIHN1Y2ggYSBkaXNwbGF5LCB3aXRoIGJsaW5raW5nIGNvbG9uLgoKRmluYWxseSwg
aXQgc2tldGNoZXMgaG93IGtleXBhZCBoYW5kbGluZyBjb3VsZCBiZSBpbnRlZ3JhdGVkIGludG8g
dGhlIGxlZHMKZHJpdmVyLCBidXQgSSBhbSBsYWNraW5nIGEgdGVzdCBjYXNlIGZvciB0aGF0IGZ1
bmN0aW9uYWxpdHkuCkRpc3Rpbmd1aXNoaW5nIExFRHMgYW5kIGtleSBpbnB1dHMgaW4gRFQgbWF5
IGdldCBkaWZmaWN1bHQuLi4KCkZvciBicmlnaHRuZXNzIGNvbnRyb2wgSSBhbSBzdGlsbCBpbnZl
c3RpZ2F0aW5nIHRoZSBiYWNrbGlnaHQgQVBJIGFuZApkZWZhdWx0aW5nIHRvIHRoZSBjaGlwc2V0
J3MgZGVmYXVsdCAobG93ZXN0KSBicmlnaHRuZXNzLgoKUHJlcGVuZGVkIGlzIGEgbmV3IERUIGZv
ciBYbmFubyBYNSBPVFQgVFYgQm94LCBmZWF0dXJpbmcgYW4gRkQ2MjggZGlzcGxheS4KCkRpc3Bs
YXlzIGNvbm5lY3RlZCB0byB0aGVzZSBjb250cm9sbGVycyBkaWRuJ3QgaGF2ZSBhbnkgbW9kZWwg
b3IgdmVuZG9yCnVzdWFsbHksIGFuZCBmb3IgdGhlIGxlbmd0aHkgbnVtYmVycyBmcm9tIG15IFg5
UywgR29vZ2xlIGZvdW5kIG5vIGhpdHMuClRoZXJlZm9yZSBJJ3ZlIGJlZW4gdW5hYmxlIHRvIGNv
bWUgdXAgd2l0aCBjb21wYXRpYmxlIHN0cmluZ3MgZm9yIHRob3NlCmRpc3BsYXlzIGFuZCBuZWVk
IHRvIGNvbmZpZ3VyZSBpdCBwZXIgLmR0cywgZXZlbiB0aG91Z2ggc29tZSBtYXkgYmUgdXNpbmcK
dGhlIHNhbWUsIGUuZy4sICI4ODo4OCIgdHlwZSBkaXNwbGF5IG1vZGVsLgpXaGVyZWFzIHRoZSBz
YW1lIGRpc3BsYXkgbWlnaHQgYmUgY29ubmVjdGVkIHRvIGRpZmZlcmVudCBMRUQgY29udHJvbGxl
cnMsCnRodXMgaXMgb3J0aG9nb25hbCB0byB0aGUgY29udHJvbGxlcidzIGNvbXBhdGlibGUgc3Ry
aW5nLgoKQW5vdGhlciBhc3BlY3QgaGVyZSBpcyB0aGF0IHRoZSBsZWRzIGJpbmRpbmcgZXhwZWN0
cyB0byBoYXZlIGNoaWxkIG5vZGVzCnBlciBMRUQgZGlyZWN0bHkgb24gdGhlIExFRCBjb250cm9s
bGVyIG5vZGUuIFNvIEkndmUgZ29uZSB0byBsZW5ndGhzIHRvCnNob2Vob3JuIG15IGRpc3BsYXkg
Y2hpbGQgbm9kZSBpbnRvIHRoYXQgc2NoZW1lIHZpYSB3aWxkY2FyZCByZWcgcHJvcGVydHkuCgpU
aGUgYWx0ZXJuYXRpdmUgd291bGQgYmUgdG8gZGVmaW5lIHNvbWUgc3BlY2lhbCBjaGlsZCBub2Rl
LCBhcyBkb25lIGZvciB0aGUKU1BJIGNvbnRyb2xsZXIncyAic2xhdmUiIG5vZGUsIHRvIHVzZSBh
cyBkaXNwbGF5LiBCdXQgaW4gdGhlb3J5IHRoZXJlIG1pZ2h0CmJlIG11bHRpcGxlIGRpc3BsYXlz
IGNvbm5lY3RlZCB0byBvbmUgY29udHJvbGxlciAod2hpY2ggaXMgbmVnbGVjdGVkIGhlcmUpLgpB
bmQgaW4gdGhlb3J5IHRoZSBzYW1lIGRpc3BsYXkgbWlnaHQgYmUgd2lyZWQgdXAgZGlmZmVyZW50
bHksIHNvIGF0IG1vc3QKdGhlIGRpc3BsYXkgbW9kZWwgY291bGQgdGVsbCB1cyBhYm91dCBsYXlv
dXQgYW5kIGF2YWlsYWJpbGl0eSBvZiBMRURzLCBidXQKd2UnZCBzdGlsbCBuZWVkIGEgbWFwcGlu
ZyBmcm9tIHRoZSBMRUQgY29udHJvbGxlcidzIHRvIHRoZSBkaXNwbGF5J3MgcGlucy4KU28gZmFy
IG5laXRoZXIgb2YgdGhlIHR3byBkaXNwbGF5cyB0ZXN0ZWQgYWN0dWFsbHkgdXNlIHRoZSBzZWdt
ZW50IGxpbmVzCmZvciB0aGUgc2VnbWVudHMsIGJ1dCByYXRoZXIgc3dpdGNoIHNlZ21lbnQgYW5k
IGdyaWQgbGluZXMuCgpTbyBpbiB0aGVvcnkgd2UgbWlnaHQgY29uc2lkZXIgdGhlIGRpc3BsYXkg
YXMgTEVEIGNvbnRyb2xsZXIgYW5kIGltcGxlbWVudApiaW5kaW5nL2RyaXZlciBvbiB0aGF0IGxl
dmVsIChtb3ZpbmcgaXQgdG8gRFQgcm9vdCBub2RlIGxpa2UgZ3Bpby1sZWRzKSwKaWYgd2UgY2Fu
IGhvb2sgaXQgdXAgdG8gdGhlIGFjdHVhbCBMRUQgY29udHJvbGxlciBpbiB0aGlzIGNhc2Ugb24g
U1BJIGJ1cz8KQXNzdW1pbmcgd2UgY2FuIGFjdHVhbGx5IGlkZW50aWZ5IHRoZSBkaXNwbGF5IHdp
dGggc29tZSBjb21wYXRpYmxlIHN0cmluZywKdGhhdCBpcy4KSG93ZXZlciwgdXBkYXRlIGVmZmlj
aWVuY3kgaGFzIGJlZW4gYSBjb25jZXJuLCB3aXRoIGNsb2NrIGRpc3BsYXkgaW4gbWluZC4KVGh1
cywgZm9yY2luZyB0d28gU1BJIGNvbW1hbmRzICh0aHJlZSBTUEkgdHJhbnNmZXJzKSBwZXIgTEVE
IHNlZ21lbnQsIGFzIHRoZQp0aGUgY3VycmVudCBMRUQgQVBJIHdvdWxkIGVudGFpbCwgc2hvdWxk
IGJldHRlciBiZSBhdm9pZGVkLiBUaGlzIGxlZCB0byB0aGUKY3VycmVudCBkZXNpZ24gb2YgaGF2
aW5nIGV2ZXJ5dGhpbmcgaW4gdG0xNjI4IGRyaXZlciwgc28gdGhhdCB3ZSBjYW4gZWFzaWx5CmRl
dGVybWluZSB0aGUgc2NvcGUgb2YgYW4gdXBkYXRlIG9wZXJhdGlvbiB0aGVyZSAob25lIHBlciBM
RUQ7IGFsbCBmb3IgdGV4dCwKdG8gYmUgb3B0aW1pemVkIHRocm91Z2ggYml0IGZpZWxkIG9mIGRp
cnRpZWQgYnl0ZXMpLgoKTG9ja2luZyBpcyBjb21wbGV0ZWx5IG1pc3Npbmcgc3RpbGwuIFdlJ2xs
IG5lZWQgYXQgbGVhc3QgYSBtdXRleCB0byBhdm9pZCwKZS5nLiwgYSBoZWFydGJlYXQgTEVEIHRy
aWdnZXIgYW5kIGEgdGV4dCB1cGRhdGUgY29uZmxpY3Rpbmcgb24gU1BJIGJ1cyBvcgoiaGF6YXJk
cyIgYmVjb21pbmcgdmlzaWJsZSBvbiB0aGUgZGlzcGxheSBkdXJpbmcgY29uZmxpY3RpbmcgYnl0
ZSB1cGRhdGVzLgoKTW9kdWxlIHJlbW92ZSBzdXBwb3J0IGlzIG1pc3NpbmcsIHRvby4KCldlIG1h
eSBhbHNvIG5lZWQgdG8gcmV2aXNpdCBteSBlcnJvciBjaGVja2luZyBhbmQgZWl0aGVyIGlubGlu
ZSBmdW5jdGlvbnMKb3IgZHJvcCBjaGVja3Mgb24gdGhlIExFRCBiaXQgbGV2ZWwsIGlmIGl0IGJl
Y29tZXMgYSBwZXJmb3JtYW5jZSBib3R0bGVuZWNrLgoKT24gdGhlIGNvc21ldGljIHNpZGUsIHNv
bWUgbGluZXMgYXJlIHN0aWxsIGJleW9uZCA4MCBjaGFyYWN0ZXJzLgoKU29tZSBtb3JlIG5vdGVz
OgoqIFB1YmxpYyBUTTE2MjggVjEuMSBkYXRhc2hlZXQgaXMgaW4gQ2hpbmVzZSBvbmx5IGFuZCBk
aWZmZXJzIGZyb20gdGhlCiAgdW52ZXJzaW9uZWQgRW5nbGlzaCB2ZXJzaW9uIGZvdW5kIGVsc2V3
aGVyZSBvbiBkYXRhc2hlZXQgc2l0ZXMgYnkKICBkb2N1bWVudGluZyBtb3JlIGRpc3BsYXkgbW9k
ZXMsIGluY2x1ZGVkIGhlcmUgKGd1ZXNzZWQgZnJvbSBBcmFiaWMgbnVtYmVycykuCiogUHVibGlj
IEZENjI4IGRhdGFzaGVldCBpcyBDaGluZXNlIG9ubHkgKGd1ZXNzZXMgYmFzZWQgb24gQXJhYmlj
IG51bWJlcnMpLgogIEZENjIzIGFwcGVhcnMgdG8gaGF2ZSBtb3JlIG91dHB1dCBsaW5lcywgd2hp
Y2ggd291bGQgZml0IGN1cnJlbnQgZGF0YSB0eXBlcy4KKiBBaVAxNjE4IGxpbmtzIHdlcmUgYWxs
IGJyb2tlbiAoNDA0KTsgdHJ5IEdvb2dsZSAic2l0ZTpzemZkd2R6LmNvbSIgc2VhcmNoCiAgdG8g
YWN0dWFsbHkgZmluZCB0aGUgZG9jdW1lbnRzIGF2YWlsYWJsZSBvbiB0aGVpciBzaXRlLgoqIFBy
aW5jZXRvbiBQVDY5NjQgaXMgYW5vdGhlciByZWxhdGVkIExFRCBjb250cm9sbGVyIHdpdGggcHVi
bGljIGRhdGFzaGVldAogIHRoYXQgSSBkaWQgbm90IGVuY291bnRlciBpbiBteSBUViBib3hlcyB5
ZXQsIHRodXMgbm90IGluY2x1ZGVkIGhlcmUuCiAgRGF0YXNoZWV0cyBhcmUgbGlua2VkIG9ubHkg
Zm9yIFBUNjk1OSBhbmQgUFQ2OTY3LCBidXQgUFQ2OTY0IFYxLjMgYW5kIFYxLjQKICBhcmUgYXZh
aWxhYmxlIGVsc2V3aGVyZS4gUFQ2OTY3IGhhcyBtb3JlIG91dHB1dCBsaW5lcywgd2hpY2ggbXkg
Y3VycmVudAogIGRhdGEgdHlwZXMgY291bGQgYmFyZWx5IGhvbGQuIE1heWJlIGJ1bXAgdGhlbSBh
bGwgdG8gdTMyIHR5cGUgcmlnaHQgYXdheT8KKiBUTTE2MjggaXMgYWxzbyBmb3VuZCBvbiBNZUxF
IFY5IFRWIGJveCwgdG8gYmUgdGVzdGVkLgoqIEZENjI4IGlzIGFsc28gZm91bmQgb24gQW1sb2dp
YyBTOTA1WDIgYmFzZWQgVm9udGFyIFg5NiBNYXggVFYgYm94LAogIHRvIGJlIHRlc3RlZCAob25j
ZSBVQVJUIGlzIHNvbGRlcmVkKS4KKiBBaVAxNjE4IHdhcyBmb3VuZCBvbiBBdmEgYW5kIExha2Ug
SSBUViBib3hlcywgdG8gYmUgdGVzdGVkLgoqIEl0IHJlbWFpbmVkIHVuY2xlYXIgdG8gbWUgd2hp
Y2ggb2YgdGhlc2UgbWFueSBzaW1pbGFyIGNoaXBzZXRzIHdhcyBmaXJzdC4KICBNeSBkcml2ZXIg
bmFtZSBpcyB0aGVyZWZvcmUgYmFzZWQgb24gdGhlIGNoaXAgSSBlbmNvdW50ZXJlZCBmaXJzdC4K
ClRoaXMgc2VyaWVzIGlzIGJhc2VkIG9uIG15IG5vdC15ZXQtcG9zdGVkIFJURDEyOTUgcGluY3Ry
bCBhbmQgR1BJTyBkcml2ZXJzLgoKTGF0ZXN0IGV4cGVyaW1lbnRhbCBwYXRjaGVzIGF0OgpodHRw
czovL2dpdGh1Yi5jb20vYWZhZXJiZXIvbGludXgvY29tbWl0cy9ydGQxMjk1LW5leHQKCkhhdmUg
YSBsb3Qgb2YgZnVuIQoKQ2hlZXJzLApBbmRyZWFzCgpDYzogbGludXgtbGVkc0B2Z2VyLmtlcm5l
bC5vcmcKQ2M6IEphY2VrIEFuYXN6ZXdza2kgPGphY2VrLmFuYXN6ZXdza2lAZ21haWwuY29tPgpD
YzogUGF2ZWwgTWFjaGVrIDxwYXZlbEB1Y3cuY3o+CkNjOiBEYW4gTXVycGh5IDxkbXVycGh5QHRp
LmNvbT4KCkNjOiBsaW51eC1ydGNAdmdlci5rZXJuZWwub3JnCkNjOiBBbGVzc2FuZHJvIFp1bW1v
IDxhLnp1bW1vQHRvd2VydGVjaC5pdD4KQ2M6IEFsZXhhbmRyZSBCZWxsb25pIDxhbGV4YW5kcmUu
YmVsbG9uaUBib290bGluLmNvbT4KCkNjOiBkZXZpY2V0cmVlQHZnZXIua2VybmVsLm9yZwpDYzog
Um9iIEhlcnJpbmcgPHJvYmgrZHRAa2VybmVsLm9yZz4KCkNjOiBsaW51eC1zcGlAdmdlci5rZXJu
ZWwub3JnCkNjOiBNYXJrIEJyb3duIDxicm9vbmllQGtlcm5lbC5vcmc+CgpDYzogbGludXgtYW1s
b2dpY0BsaXN0cy5pbmZyYWRlYWQub3JnCgpDYzogUm9jIEhlIDxoZXBlbmdAemlkb28udHY+CiMg
Tm8gZW1haWwgZm9yIFhuYW5vCgpDYzogenlwZW5nQHRpdGFubWVjLmNvbQpDYzogc2FsZXNAZmRo
aXNpLmNvbQojIE5vIGVtYWlsIGZvciBzemZkd2R6LmNvbQpDYzogY3NkQHByaW5jZXRvbi5jb20u
dHcKCkFuZHJlYXMgRsOkcmJlciAoMjUpOgogIGR0LWJpbmRpbmdzOiB2ZW5kb3ItcHJlZml4ZXM6
IEFkZCBYbmFubwogIGR0LWJpbmRpbmdzOiBhcm06IHJlYWx0ZWs6IEFkZCBYbmFubyBYNQogIGFy
bTY0OiBkdHM6IHJlYWx0ZWs6IHJ0ZDEyOTU6IEFkZCBYbmFubyBYNQogIHNwaTogZ3BpbzogSW1w
bGVtZW50IExTQiBGaXJzdCBiaXRiYW5nIHN1cHBvcnQKICBkdC1iaW5kaW5nczogdmVuZG9yLXBy
ZWZpeGVzOiBBZGQgVGl0YW4gTWljcm8gRWxlY3Ryb25pY3MKICBkdC1iaW5kaW5nczogbGVkczog
QWRkIFRpdGFuIE1pY3JvIEVsZWN0cm9uaWNzIFRNMTYyOAogIGxlZHM6IEFkZCBUaXRhbiBNaWNy
byBFbGVjdHJvbmljcyBUTTE2MjgKICBhcm02NDogZHRzOiByZWFsdGVrOiBydGQxMjl4LXppZG9v
LXg5czogQWRkIFRNMTYyOCBMRUQgY29udHJvbGxlcgogIGFybTY0OiBkdHM6IHJlYWx0ZWs6IHJ0
ZDEyOTUtemlkb28teDlzOiBBZGQgcmVndWxhciBMRURzIHRvIFRNMTYyOAogIGR0LWJpbmRpbmdz
OiB2ZW5kb3ItcHJlZml4ZXM6IEFkZCBGdWRhIEhpc2kgTWljcm9lbGVjdHJvbmljcwogIGR0LWJp
bmRpbmdzOiBsZWRzOiB0bTE2Mjg6IEFkZCBGdWRhIEhpc2kgTWljcm9lbGVjdHJvbmljcyBGRDYy
OAogIGxlZHM6IHRtMTYyODogQWRkIEZ1ZGEgSGlzaSBNaWNyb2VsZWN0cm9uaWNzIEZENjI4CiAg
YXJtNjQ6IGR0czogcmVhbHRlazogcnRkMTI5NS14bmFuby14NTogQWRkIEZENjI4IExFRCBjb250
cm9sbGVyCiAgYXJtNjQ6IGR0czogcmVhbHRlazogcnRkMTI5NS14bmFuby14NTogQWRkIHJlZ3Vs
YXIgTEVEcyB0byBGRDYyOAogIGR0LWJpbmRpbmdzOiB2ZW5kb3ItcHJlZml4ZXM6IEFkZCBGdWRl
IE1pY3JvZWxlY3Ryb25pY3MKICBkdC1iaW5kaW5nczogbGVkczogdG0xNjI4OiBBZGQgRnVkZSBN
aWNyb2VsZWN0cm9uaWNzIEFpUDE2MTgKICBsZWRzOiB0bTE2Mjg6IFByZXBhcmUgRnVkZSBNaWNy
b2VsZWN0cm9uaWNzIEFpUDE2MTgKICBkdC1iaW5kaW5nczogbGVkczogdG0xNjI4OiBEZWZpbmUg
ZGlzcGxheSBjaGlsZCBub2RlcwogIGxlZHM6IHRtMTYyODogQWRkIDctc2VnbWVudCBkaXNwbGF5
IHN1cHBvcnQKICBhcm02NDogZHRzOiByZWFsdGVrOiBydGQxMjk1LXppZG9vLXg5czogQWRkIGRp
c3BsYXkgdG8gVE0xNjI4CiAgYXJtNjQ6IGR0czogcmVhbHRlazogcnRkMTI5NS14bmFuby14NTog
QWRkIGRpc3BsYXkgdG8gRkQ2MjgKICBsZWRzOiB0bTE4MjY6IEFkZCBjb21iaW5lZCBnbHlwaCBz
dXBwb3J0CiAgV0lQOiBsZWRzOiB0bTE2Mjg6IFByZXBhcmUgVE0xNjI4IGtleXMKICBXSVA6IGxl
ZHM6IHRtMTYyODogUHJlcGFyZSBGRDYyOCBrZXlzCiAgV0lQOiBsZWRzOiB0bTE2Mjg6IFByZXBh
cmUgQWlQMTYxOCBrZXlzCgogRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL2FybS9y
ZWFsdGVrLnlhbWwgfCAgIDEgKwogLi4uL2RldmljZXRyZWUvYmluZGluZ3MvbGVkcy90aXRhbm1l
Yyx0bTE2MjgueWFtbCAgfCAxMzQgKysrKwogLi4uL2RldmljZXRyZWUvYmluZGluZ3MvdmVuZG9y
LXByZWZpeGVzLnlhbWwgICAgICAgfCAgIDggKwogYXJjaC9hcm02NC9ib290L2R0cy9yZWFsdGVr
L01ha2VmaWxlICAgICAgICAgICAgICAgfCAgIDEgKwogYXJjaC9hcm02NC9ib290L2R0cy9yZWFs
dGVrL3J0ZDEyOTUteG5hbm8teDUuZHRzICAgfCAxMDggKysrCiBhcmNoL2FybTY0L2Jvb3QvZHRz
L3JlYWx0ZWsvcnRkMTI5NS16aWRvby14OXMuZHRzICB8ICAzNiArLQogZHJpdmVycy9sZWRzL0tj
b25maWcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMTIgKwogZHJpdmVycy9sZWRz
L01ha2VmaWxlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9s
ZWRzL2xlZHMtdG0xNjI4LmMgICAgICAgICAgICAgICAgICAgICAgICAgfCA3MjcgKysrKysrKysr
KysrKysrKysrKysrCiBkcml2ZXJzL3NwaS9zcGktYml0YmFuZy10eHJ4LmggICAgICAgICAgICAg
ICAgICAgICB8ICA2OCArLQogZHJpdmVycy9zcGkvc3BpLWdwaW8uYyAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgNDIgKy0KIDExIGZpbGVzIGNoYW5nZWQsIDExMjYgaW5zZXJ0aW9ucygr
KSwgMTIgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgRG9jdW1lbnRhdGlvbi9kZXZp
Y2V0cmVlL2JpbmRpbmdzL2xlZHMvdGl0YW5tZWMsdG0xNjI4LnlhbWwKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBhcmNoL2FybTY0L2Jvb3QvZHRzL3JlYWx0ZWsvcnRkMTI5NS14bmFuby14NS5kdHMKIGNy
ZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2xlZHMvbGVkcy10bTE2MjguYwoKLS0gCjIuMTYuNAoK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmxpbnV4LWFy
bS1rZXJuZWwgbWFpbGluZyBsaXN0CmxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9y
ZwpodHRwOi8vbGlzdHMuaW5mcmFkZWFkLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LWFybS1r
ZXJuZWwK
