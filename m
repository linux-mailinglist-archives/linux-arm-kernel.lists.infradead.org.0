Return-Path: <linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-arm-kernel@lfdr.de
Delivered-To: lists+linux-arm-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id C9F70190D00
	for <lists+linux-arm-kernel@lfdr.de>; Tue, 24 Mar 2020 13:04:06 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:In-Reply-To:MIME-Version:Date:
	Message-ID:References:To:Subject:From:Reply-To:Content-ID:Content-Description
	:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=YgoARxw63dYM+qVoDt/NRUgt2zDE9vdxIn/7hYvsh44=; b=CEZjVwVnbORhyo
	6g2ekSVVfyImvvAmE8DoT4KCgawMRF9yfe7HRMCLWT8b7obQS+I+BDa0A9jAXoaJ5qCRdUR+0bOzT
	ckrq0kdSv7HBHw0PuurS6t0dr9arQHuTOjXnD0Ewd21ATrMMDzuRL+/sEEIOKSqGY9zEkL1jhGIl4
	VSNN/7KvN+LZ8VUQDRDNBvOHbj352bOFMQzrpycr9A66KGf0K2FVYUV5RyqIv7qA6pyO/QW6GAWKL
	9oYaDDWAncvAyEpE4e6hhRsofngN+lTW1KP7hsaWeETyXA92C5K4DpEU6X1mygeoiH07lqdf8bkfW
	VPOvX/4/uiLvrCOHB7UQ==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jGiHj-0001O0-8h; Tue, 24 Mar 2020 12:03:55 +0000
Received: from foss.arm.com ([217.140.110.172])
 by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jGiHR-0001NS-4V
 for linux-arm-kernel@lists.infradead.org; Tue, 24 Mar 2020 12:03:39 +0000
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9E6CE1FB;
 Tue, 24 Mar 2020 05:03:35 -0700 (PDT)
Received: from [10.163.1.71] (unknown [10.163.1.71])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 27AAE3F792;
 Tue, 24 Mar 2020 05:03:30 -0700 (PDT)
From: Anshuman Khandual <anshuman.khandual@arm.com>
Subject: Re: [PATCH V2 2/2] arm64/mm: Enable vmem_altmap support for vmemmap
 mappings
To: Robin Murphy <robin.murphy@arm.com>, linux-mm@kvack.org
References: <1583331030-7335-1-git-send-email-anshuman.khandual@arm.com>
 <1583331030-7335-3-git-send-email-anshuman.khandual@arm.com>
 <d428e636-0f48-6738-2296-91dba8fc6404@arm.com>
Message-ID: <57af8e0a-5e47-cf3f-19dc-ce047793cd1f@arm.com>
Date: Tue, 24 Mar 2020 17:33:26 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <d428e636-0f48-6738-2296-91dba8fc6404@arm.com>
Content-Language: en-US
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200324_050337_265325_D829053B 
X-CRM114-Status: GOOD (  25.12  )
X-Spam-Score: -2.3 (--)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-2.3 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -2.3 RCVD_IN_DNSWL_MED      RBL: Sender listed at https://www.dnswl.org/,
 medium trust [217.140.110.172 listed in list.dnswl.org]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
X-BeenThere: linux-arm-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-arm-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-arm-kernel/>
List-Post: <mailto:linux-arm-kernel@lists.infradead.org>
List-Help: <mailto:linux-arm-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-arm-kernel>, 
 <mailto:linux-arm-kernel-request@lists.infradead.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, Yu Zhao <yuzhao@google.com>,
 Steve Capper <steve.capper@arm.com>, Catalin Marinas <catalin.marinas@arm.com>,
 David Hildenbrand <david@redhat.com>, linux-kernel@vger.kernel.org,
 Hsin-Yi Wang <hsinyi@chromium.org>, Thomas Gleixner <tglx@linutronix.de>,
 Will Deacon <will@kernel.org>, Andrew Morton <akpm@linux-foundation.org>,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-arm-kernel" <linux-arm-kernel-bounces@lists.infradead.org>
Errors-To: linux-arm-kernel-bounces+lists+linux-arm-kernel=lfdr.de@lists.infradead.org

Ck9uIDAzLzIxLzIwMjAgMDE6MDUgQU0sIFJvYmluIE11cnBoeSB3cm90ZToKPiBPbiAyMDIwLTAz
LTA0IDI6MTAgcG0sIEFuc2h1bWFuIEtoYW5kdWFsIHdyb3RlOgo+PiBEZXZpY2UgbWVtb3J5IHJh
bmdlcyB3aGVuIGdldHRpbmcgaG90IGFkZGVkIGludG8gWk9ORV9ERVZJQ0UsIG1pZ2h0IHJlcXVp
cmUKPj4gdGhlaXIgdm1lbW1hcCBtYXBwaW5nJ3MgYmFja2luZyBtZW1vcnkgdG8gYmUgYWxsb2Nh
dGVkIGZyb20gdGhlaXIgb3duIHJhbmdlCj4+IGluc3RlYWQgb2YgY29uc3VtaW5nIHN5c3RlbSBt
ZW1vcnkuIFRoaXMgcHJldmVudHMgbGFyZ2Ugc3lzdGVtIG1lbW9yeSB1c2FnZQo+PiBmb3IgcG90
ZW50aWFsbHkgbGFyZ2UgZGV2aWNlIG1lbW9yeSByYW5nZXMuIERldmljZSBkcml2ZXIgY29tbXVu
aWNhdGVzIHRoaXMKPj4gcmVxdWVzdCB2aWEgdm1lbV9hbHRtYXAgc3RydWN0dXJlLiBBcmNoaXRl
Y3R1cmUgbmVlZHMgdG8gdGFrZSB0aGlzIHJlcXVlc3QKPj4gaW50byBhY2NvdW50IHdoaWxlIGNy
ZWF0aW5nIGFuZCB0ZWFyaW5nIGRvd24gdmVtbW1hcCBtYXBwaW5ncy4KPj4KPj4gVGhpcyBlbmFi
bGVzIHZtZW1fYWx0bWFwIHN1cHBvcnQgaW4gdm1lbW1hcF9wb3B1bGF0ZSgpIGFuZCB2bWVtbWFw
X2ZyZWUoKQo+PiB3aGljaCBpbmNsdWRlcyB2bWVtbWFwX3BvcHVsYXRlX2Jhc2VwYWdlcygpIHVz
ZWQgZm9yIEFSTTY0XzE2S19QQUdFUyBhbmQKPj4gQVJNNjRfNjRLX1BBR0VTIGNvbmZpZ3MuCj4+
Cj4+IENjOiBDYXRhbGluIE1hcmluYXMgPGNhdGFsaW4ubWFyaW5hc0Bhcm0uY29tPgo+PiBDYzog
V2lsbCBEZWFjb24gPHdpbGxAa2VybmVsLm9yZz4KPj4gQ2M6IE1hcmsgUnV0bGFuZCA8bWFyay5y
dXRsYW5kQGFybS5jb20+Cj4+IENjOiBTdGV2ZSBDYXBwZXIgPHN0ZXZlLmNhcHBlckBhcm0uY29t
Pgo+PiBDYzogRGF2aWQgSGlsZGVuYnJhbmQgPGRhdmlkQHJlZGhhdC5jb20+Cj4+IENjOiBZdSBa
aGFvIDx5dXpoYW9AZ29vZ2xlLmNvbT4KPj4gQ2M6IEhzaW4tWWkgV2FuZyA8aHNpbnlpQGNocm9t
aXVtLm9yZz4KPj4gQ2M6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51dHJvbml4LmRlPgo+PiBD
YzogQW5kcmV3IE1vcnRvbiA8YWtwbUBsaW51eC1mb3VuZGF0aW9uLm9yZz4KPj4gQ2M6IGxpbnV4
LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwo+PiBDYzogbGludXgta2VybmVsQHZnZXIu
a2VybmVsLm9yZwo+Pgo+PiBTaWduZWQtb2ZmLWJ5OiBBbnNodW1hbiBLaGFuZHVhbCA8YW5zaHVt
YW4ua2hhbmR1YWxAYXJtLmNvbT4KPj4gLS0tCj4+IMKgIGFyY2gvYXJtNjQvbW0vbW11LmMgfCA3
MSArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0KPj4gwqAgMSBm
aWxlIGNoYW5nZWQsIDUxIGluc2VydGlvbnMoKyksIDIwIGRlbGV0aW9ucygtKQo+Pgo+PiBkaWZm
IC0tZ2l0IGEvYXJjaC9hcm02NC9tbS9tbXUuYyBiL2FyY2gvYXJtNjQvbW0vbW11LmMKPj4gaW5k
ZXggMjdjYjk1YzQ3MWViLi4wZTBhMGVjYzgxMmUgMTAwNjQ0Cj4+IC0tLSBhL2FyY2gvYXJtNjQv
bW0vbW11LmMKPj4gKysrIGIvYXJjaC9hcm02NC9tbS9tbXUuYwo+PiBAQCAtNzI3LDE1ICs3Mjcs
MzAgQEAgaW50IGtlcm5fYWRkcl92YWxpZCh1bnNpZ25lZCBsb25nIGFkZHIpCj4+IMKgIH0KPj4g
wqAgwqAgI2lmZGVmIENPTkZJR19NRU1PUllfSE9UUExVRwo+PiAtc3RhdGljIHZvaWQgZnJlZV9o
b3RwbHVnX3BhZ2VfcmFuZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsIHNpemVfdCBzaXplKQo+PiArc3Rh
dGljIHZvaWQgZnJlZV9ob3RwbHVnX3BhZ2VfcmFuZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsIHNpemVf
dCBzaXplLAo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0
IHZtZW1fYWx0bWFwICphbHRtYXApCj4+IMKgIHsKPj4gLcKgwqDCoCBXQVJOX09OKFBhZ2VSZXNl
cnZlZChwYWdlKSk7Cj4+IC3CoMKgwqAgZnJlZV9wYWdlcygodW5zaWduZWQgbG9uZylwYWdlX2Fk
ZHJlc3MocGFnZSksIGdldF9vcmRlcihzaXplKSk7Cj4+ICvCoMKgwqAgaWYgKGFsdG1hcCkgewo+
PiArwqDCoMKgwqDCoMKgwqAgLyoKPj4gK8KgwqDCoMKgwqDCoMKgwqAgKiBUaG91Z2ggdW5tYXBf
aG90cGx1Z19yYW5nZSgpIHdpbGwgdGVhciBkb3duIGFsdG1hcCBiYXNlZAo+PiArwqDCoMKgwqDC
oMKgwqDCoCAqIHZtZW1tYXAgbWFwcGluZ3MgYXQgYWxsIHBhZ2UgdGFibGUgbGV2ZWxzLCB0aGVz
ZSBtYXBwaW5ncwo+PiArwqDCoMKgwqDCoMKgwqDCoCAqIHNob3VsZCBvbmx5IGhhdmUgYmVlbiBj
cmVhdGVkIGVpdGhlciBhdCBQVEUgb3IgUE1EIGxldmVsCj4+ICvCoMKgwqDCoMKgwqDCoMKgICog
d2l0aCB2bWVtbWFwX3BvcHVsYXRlX2Jhc2VwYWdlcygpIG9yIHZtZW1tYXBfcG9wdWxhdGUoKQo+
PiArwqDCoMKgwqDCoMKgwqDCoCAqIHJlc3BlY3RpdmVseS4gVW5tYXBwaW5nIHJlcXVlc3RzIGF0
IGFueSBvdGhlciBsZXZlbCB3aWxsCj4+ICvCoMKgwqDCoMKgwqDCoMKgICogYmUgcHJvYmxlbWF0
aWMuIERyb3AgdGhlc2Ugd2FybmluZ3Mgd2hlbiB2bWVtbWFwIG1hcHBpbmcKPj4gK8KgwqDCoMKg
wqDCoMKgwqAgKiBpcyBzdXBwb3J0ZWQgYXQgUFVEIChldmVuIHBlcmhhcHMgUDREKSBsZXZlbC4K
Pj4gK8KgwqDCoMKgwqDCoMKgwqAgKi8KPj4gK8KgwqDCoMKgwqDCoMKgIFdBUk5fT04oKHNpemUg
IT0gUEFHRV9TSVpFKSAmJiAoc2l6ZSAhPSBQTURfU0laRSkpOwo+IAo+IElzbid0IHRoYXQgY29t
bWVudCBlcXVhbGx5IHRydWUgb2YgdGhlIHJlZ3VsYXIgY2FzZT8gQUZBSUNTIHdlIGRvbid0IGNh
bGwgdm1lbW1hcF9hbGxvY19ibG9ja19idWYoKSB3aXRoIGxhcmdlciB0aGFuIFBNRF9TSVpFIGVp
dGhlci4gSWYgdGhlIHdhcm5pbmdzIGFyZSB1c2VmdWwsIHNob3VsZG4ndCB0aGV5IGNvdmVyIGJv
dGggY2FzZXMgZXF1YWxseT8gSG93ZXZlciwgZ2l2ZW4gdGhhdCB3ZSBuZXZlciB3YXJuZWQgYmVm
b3JlLCBhbmQgdGhlIGNvZGUgaGVyZSBhcHBlYXJzIHRoYXQgaXQgd291bGQgd29yayBmaW5lIGFu
eXdheSwgKmFyZSogdGhleSByZWFsbHkgdXNlZnVsPwoKU3VyZSwgdGhpcyBpcyBub3Qgc29tZXRo
aW5nIGV4Y2x1c2l2ZWx5IGFwcGxpY2FibGUgZm9yIGFsdG1hcCBiYXNlZAp2bWVtbWFwIG1hcHBp
bmdzIGFsb25lLiBXaWxsIGRyb3AgaXQgZnJvbSBoZXJlLgoKPiAKPj4gK8KgwqDCoMKgwqDCoMKg
IHZtZW1fYWx0bWFwX2ZyZWUoYWx0bWFwLCBzaXplID4+IFBBR0VfU0hJRlQpOwo+PiArwqDCoMKg
IH0gZWxzZSB7Cj4+ICvCoMKgwqDCoMKgwqDCoCBXQVJOX09OKFBhZ2VSZXNlcnZlZChwYWdlKSk7
Cj4+ICvCoMKgwqDCoMKgwqDCoCBmcmVlX3BhZ2VzKCh1bnNpZ25lZCBsb25nKXBhZ2VfYWRkcmVz
cyhwYWdlKSwgZ2V0X29yZGVyKHNpemUpKTsKPj4gK8KgwqDCoCB9Cj4+IMKgIH0KPj4gwqAgwqAg
c3RhdGljIHZvaWQgZnJlZV9ob3RwbHVnX3BndGFibGVfcGFnZShzdHJ1Y3QgcGFnZSAqcGFnZSkK
Pj4gwqAgewo+PiAtwqDCoMKgIGZyZWVfaG90cGx1Z19wYWdlX3JhbmdlKHBhZ2UsIFBBR0VfU0la
RSk7Cj4+ICvCoMKgwqAgZnJlZV9ob3RwbHVnX3BhZ2VfcmFuZ2UocGFnZSwgUEFHRV9TSVpFLCBO
VUxMKTsKPj4gwqAgfQo+PiDCoCDCoCBzdGF0aWMgYm9vbCBwZ3RhYmxlX3JhbmdlX2FsaWduZWQo
dW5zaWduZWQgbG9uZyBzdGFydCwgdW5zaWduZWQgbG9uZyBlbmQsCj4+IEBAIC03NTgsNyArNzcz
LDggQEAgc3RhdGljIGJvb2wgcGd0YWJsZV9yYW5nZV9hbGlnbmVkKHVuc2lnbmVkIGxvbmcgc3Rh
cnQsIHVuc2lnbmVkIGxvbmcgZW5kLAo+PiDCoCB9Cj4+IMKgIMKgIHN0YXRpYyB2b2lkIHVubWFw
X2hvdHBsdWdfcHRlX3JhbmdlKHBtZF90ICpwbWRwLCB1bnNpZ25lZCBsb25nIGFkZHIsCj4+IC3C
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCB1bnNpZ25lZCBsb25nIGVuZCwg
Ym9vbCBmcmVlX21hcHBlZCkKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIHVuc2lnbmVkIGxvbmcgZW5kLCBib29sIGZyZWVfbWFwcGVkLAo+PiArwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0IHZtZW1fYWx0bWFwICphbHRtYXApCj4+
IMKgIHsKPj4gwqDCoMKgwqDCoCBwdGVfdCAqcHRlcCwgcHRlOwo+PiDCoCBAQCAtNzcyLDEyICs3
ODgsMTQgQEAgc3RhdGljIHZvaWQgdW5tYXBfaG90cGx1Z19wdGVfcmFuZ2UocG1kX3QgKnBtZHAs
IHVuc2lnbmVkIGxvbmcgYWRkciwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIHB0ZV9jbGVhcigmaW5p
dF9tbSwgYWRkciwgcHRlcCk7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBmbHVzaF90bGJfa2VybmVs
X3JhbmdlKGFkZHIsIGFkZHIgKyBQQUdFX1NJWkUpOwo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgaWYg
KGZyZWVfbWFwcGVkKQo+PiAtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBmcmVlX2hvdHBsdWdfcGFn
ZV9yYW5nZShwdGVfcGFnZShwdGUpLCBQQUdFX1NJWkUpOwo+PiArwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCBmcmVlX2hvdHBsdWdfcGFnZV9yYW5nZShwdGVfcGFnZShwdGUpLAo+PiArwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBQQUdFX1NJWkUsIGFsdG1hcCk7
Cj4+IMKgwqDCoMKgwqAgfSB3aGlsZSAoYWRkciArPSBQQUdFX1NJWkUsIGFkZHIgPCBlbmQpOwo+
PiDCoCB9Cj4+IMKgIMKgIHN0YXRpYyB2b2lkIHVubWFwX2hvdHBsdWdfcG1kX3JhbmdlKHB1ZF90
ICpwdWRwLCB1bnNpZ25lZCBsb25nIGFkZHIsCj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCB1bnNpZ25lZCBsb25nIGVuZCwgYm9vbCBmcmVlX21hcHBlZCkKPj4gK8Kg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHVuc2lnbmVkIGxvbmcgZW5kLCBi
b29sIGZyZWVfbWFwcGVkLAo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgc3RydWN0IHZtZW1fYWx0bWFwICphbHRtYXApCj4+IMKgIHsKPj4gwqDCoMKgwqDCoCB1bnNp
Z25lZCBsb25nIG5leHQ7Cj4+IMKgwqDCoMKgwqAgcG1kX3QgKnBtZHAsIHBtZDsKPj4gQEAgLTgw
MCwxNiArODE4LDE3IEBAIHN0YXRpYyB2b2lkIHVubWFwX2hvdHBsdWdfcG1kX3JhbmdlKHB1ZF90
ICpwdWRwLCB1bnNpZ25lZCBsb25nIGFkZHIsCj4+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IGZsdXNoX3RsYl9rZXJuZWxfcmFuZ2UoYWRkciwgYWRkciArIFBBR0VfU0laRSk7Cj4+IMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIGlmIChmcmVlX21hcHBlZCkKPj4gwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCBmcmVlX2hvdHBsdWdfcGFnZV9yYW5nZShwbWRfcGFnZShwbWQp
LAo+PiAtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIFBNRF9TSVpFKTsKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBQTURfU0laRSwgYWx0bWFwKTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgY29udGludWU7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCB9Cj4+IMKgwqDCoMKgwqDC
oMKgwqDCoCBXQVJOX09OKCFwbWRfdGFibGUocG1kKSk7Cj4+IC3CoMKgwqDCoMKgwqDCoCB1bm1h
cF9ob3RwbHVnX3B0ZV9yYW5nZShwbWRwLCBhZGRyLCBuZXh0LCBmcmVlX21hcHBlZCk7Cj4+ICvC
oMKgwqDCoMKgwqDCoCB1bm1hcF9ob3RwbHVnX3B0ZV9yYW5nZShwbWRwLCBhZGRyLCBuZXh0LCBm
cmVlX21hcHBlZCwgYWx0bWFwKTsKPj4gwqDCoMKgwqDCoCB9IHdoaWxlIChhZGRyID0gbmV4dCwg
YWRkciA8IGVuZCk7Cj4+IMKgIH0KPj4gwqAgwqAgc3RhdGljIHZvaWQgdW5tYXBfaG90cGx1Z19w
dWRfcmFuZ2UocDRkX3QgKnA0ZHAsIHVuc2lnbmVkIGxvbmcgYWRkciwKPj4gLcKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHVuc2lnbmVkIGxvbmcgZW5kLCBib29sIGZyZWVf
bWFwcGVkKQo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgdW5zaWdu
ZWQgbG9uZyBlbmQsIGJvb2wgZnJlZV9tYXBwZWQsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3Qgdm1lbV9hbHRtYXAgKmFsdG1hcCkKPj4gwqAgewo+PiDC
oMKgwqDCoMKgIHVuc2lnbmVkIGxvbmcgbmV4dDsKPj4gwqDCoMKgwqDCoCBwdWRfdCAqcHVkcCwg
cHVkOwo+PiBAQCAtODMyLDE2ICs4NTEsMTcgQEAgc3RhdGljIHZvaWQgdW5tYXBfaG90cGx1Z19w
dWRfcmFuZ2UocDRkX3QgKnA0ZHAsIHVuc2lnbmVkIGxvbmcgYWRkciwKPj4gwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgZmx1c2hfdGxiX2tlcm5lbF9yYW5nZShhZGRyLCBhZGRyICsgUEFHRV9T
SVpFKTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgaWYgKGZyZWVfbWFwcGVkKQo+PiDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGZyZWVfaG90cGx1Z19wYWdlX3Jhbmdl
KHB1ZF9wYWdlKHB1ZCksCj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgUFVEX1NJWkUpOwo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFBVRF9TSVpFLCBhbHRtYXApOwo+PiDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBjb250aW51ZTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIH0K
Pj4gwqDCoMKgwqDCoMKgwqDCoMKgIFdBUk5fT04oIXB1ZF90YWJsZShwdWQpKTsKPj4gLcKgwqDC
oMKgwqDCoMKgIHVubWFwX2hvdHBsdWdfcG1kX3JhbmdlKHB1ZHAsIGFkZHIsIG5leHQsIGZyZWVf
bWFwcGVkKTsKPj4gK8KgwqDCoMKgwqDCoMKgIHVubWFwX2hvdHBsdWdfcG1kX3JhbmdlKHB1ZHAs
IGFkZHIsIG5leHQsIGZyZWVfbWFwcGVkLCBhbHRtYXApOwo+PiDCoMKgwqDCoMKgIH0gd2hpbGUg
KGFkZHIgPSBuZXh0LCBhZGRyIDwgZW5kKTsKPj4gwqAgfQo+PiDCoCDCoCBzdGF0aWMgdm9pZCB1
bm1hcF9ob3RwbHVnX3A0ZF9yYW5nZShwZ2RfdCAqcGdkcCwgdW5zaWduZWQgbG9uZyBhZGRyLAo+
PiAtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgdW5zaWduZWQgbG9uZyBl
bmQsIGJvb2wgZnJlZV9tYXBwZWQpCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCB1bnNpZ25lZCBsb25nIGVuZCwgYm9vbCBmcmVlX21hcHBlZCwKPj4gK8KgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHN0cnVjdCB2bWVtX2FsdG1hcCAqYWx0bWFw
KQo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAgdW5zaWduZWQgbG9uZyBuZXh0Owo+PiDCoMKgwqDCoMKg
IHA0ZF90ICpwNGRwLCBwNGQ7Cj4+IEBAIC04NTQsMTYgKzg3NCwyNCBAQCBzdGF0aWMgdm9pZCB1
bm1hcF9ob3RwbHVnX3A0ZF9yYW5nZShwZ2RfdCAqcGdkcCwgdW5zaWduZWQgbG9uZyBhZGRyLAo+
PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBjb250aW51ZTsKPj4gwqAgwqDCoMKgwqDCoMKg
wqDCoMKgIFdBUk5fT04oIXA0ZF9wcmVzZW50KHA0ZCkpOwo+PiAtwqDCoMKgwqDCoMKgwqAgdW5t
YXBfaG90cGx1Z19wdWRfcmFuZ2UocDRkcCwgYWRkciwgbmV4dCwgZnJlZV9tYXBwZWQpOwo+PiAr
wqDCoMKgwqDCoMKgwqAgdW5tYXBfaG90cGx1Z19wdWRfcmFuZ2UocDRkcCwgYWRkciwgbmV4dCwg
ZnJlZV9tYXBwZWQsIGFsdG1hcCk7Cj4+IMKgwqDCoMKgwqAgfSB3aGlsZSAoYWRkciA9IG5leHQs
IGFkZHIgPCBlbmQpOwo+PiDCoCB9Cj4+IMKgIMKgIHN0YXRpYyB2b2lkIHVubWFwX2hvdHBsdWdf
cmFuZ2UodW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIGVuZCwKPj4gLcKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBib29sIGZyZWVfbWFwcGVkKQo+PiArwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIGJvb2wgZnJlZV9tYXBwZWQsIHN0cnVjdCB2bWVtX2FsdG1hcCAq
YWx0bWFwKQo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAgdW5zaWduZWQgbG9uZyBuZXh0Owo+PiDCoMKg
wqDCoMKgIHBnZF90ICpwZ2RwLCBwZ2Q7Cj4+IMKgICvCoMKgwqAgLyoKPj4gK8KgwqDCoMKgICog
dm1lbV9hbHRtYXAgY2FuIG9ubHkgYmUgdXNlZCBhcyBiYWNraW5nIG1lbW9yeSBpbiBhIGdpdmVu
Cj4+ICvCoMKgwqDCoCAqIHBhZ2UgdGFibGUgbWFwcGluZy4gSW4gY2FzZSBiYWNraW5nIG1lbW9y
eSBpdHNlbGYgaXMgbm90Cj4+ICvCoMKgwqDCoCAqIGJlaW5nIGZyZWVkLCB0aGVuIGFsdG1hcCBp
cyBpcnJlbGV2YW50LiBXYXJuIGFib3V0IHRoaXMKPj4gK8KgwqDCoMKgICogaW5jb25zaXN0ZW5j
eSB3aGVuIGVuY291bnRlcmVkLgo+PiArwqDCoMKgwqAgKi8KPj4gK8KgwqDCoCBXQVJOX09OKCFm
cmVlX21hcHBlZCAmJiBhbHRtYXApOwo+IAo+IFBlcnNvbmFsbHkgSSBmaW5kIHRoYXQgY29tbWVu
dCBhIGJpdCB1bmNsZWFyIChwYXJ0aWN1bGFybHkgdGhlIGZpcnN0IHNlbnRlbmNlIHdoaWNoIGp1
c3Qgc2VlbXMgbGlrZSBhIGNvbmZ1c2luZyB0YXV0b2xvZ3kpLiBJcyB0aGUgb3ZlcmFsbCBwb2lu
dCB0aGF0IHRoZSBhbHRtYXAgb25seSBtYXR0ZXJzIHdoZW4gd2UncmUgdW5tYXBwaW5nIGFuZCBm
cmVlaW5nIHZtZW1tYXAgcGFnZXMgKHN1Y2ggdGhhdCB3ZSBmcmVlIHRoZW0gdG8gdGhlIHJpZ2h0
IGFsbG9jYXRvcik/IEF0IGZhY2UgdmFsdWUgaXQgZG9lc24ndCBzZWVtIHRvIHdhcnJhbnQgYSB3
YXJuaW5nIC0gaXQncyBub3QgbmVjZXNzYXJ5IHRvIGtub3cgd2hpY2ggYWxsb2NhdG9yIG93bnMg
cGFnZXMgdGhhdCB3ZSBhcmVuJ3QgZnJlZWluZywgYnV0IGl0IGlzbid0IGhhcm1mdWwgZWl0aGVy
LgoKUHJvYmFibHkgd2lsbCBjaGFuZ2UgdGhlIGNvbW1lbnQgdG8gc29tZXRoaW5nIGxpa2UgdGhp
cyBpbnN0ZWFkLgoKICAgICAgICAvKgogICAgICAgICAqIGFsdG1hcCBjYW4gb25seSBiZSB1c2Vk
IGFzIHZtZW1tYXAgbWFwcGluZyBiYWNraW5nIG1lbW9yeS4KICAgICAgICAgKiBJbiBjYXNlIHRo
ZSBiYWNraW5nIG1lbW9yeSBpdHNlbGYgaXMgbm90IGJlaW5nIGZyZWVkLCB0aGVuCiAgICAgICAg
ICogYWx0bWFwIGlzIGp1c3QgaXJyZWxldmFudC4gV2FybiBhYm91dCB0aGlzIGluY29uc2lzdGVu
Y3kKCSAqIHdoZW4gZW5jb3VudGVyZWQuCiAgICAgICAgICovCgphbHRtYXAgZG9lcyBkZWNpZGUg
d2hpY2ggYWxsb2NhdG9yLCB0aGUgYmFja2luZyBwYWdlcyB3aWxsIGdldCBmcmVlZAppbnRvLiBU
aGUgcHJpbWFyeSBwdXJwb3NlIGhlcmUgaXMgdG8ganVzdCB3YXJuIGFib3V0IHRoaXMgaW52YWxp
ZApjb21iaW5hdGlvbiBpLmUgKCFmcmVlX21hcHBlZCAmJiBhbHRtYXApIHdoaWNoIHRoZSBmdW5j
dGlvbiBzaG91bGQKbmV2ZXIgYmUgY2FsbGVkIHdpdGguCgo+IAo+IFRoYXQgc2FpZCwgaG93ZXZl
ciwgYWZ0ZXIgcHV6emxpbmcgdGhyb3VnaCB0aGUgY29kZSBJIGdldCB0aGUgZGlzdGluY3QgZmVl
bGluZyBpdCB3b3VsZCBiZSBtb3JlIHVzZWZ1bCBpZiBhbGwgdGhvc2UgImZyZWVfbWFwcGVkIiBh
cmd1bWVudHMgd2VyZSBhY3R1YWxseSBuYW1lZCAiaXNfdm1lbW1hcCIgaW5zdGVhZC4gQSB0aGF0
IHBvaW50LCB0aGUgY29uY2VwdHVhbCBpbmNvbnNpc3RlbmN5IHdvdWxkIGJlIGEgbGl0dGxlIG1v
cmUgb2J2aW91cyAoYW5kIGFyZ3VhYmx5IG1pZ2h0IG5vdCBldmVuIG5lZWQgY29tbWVudGluZyku
CgonZnJlZV9tYXBwZWQnIHdhcyBhIGNvbnNjaW91cyBkZWNpc2lvbiBbMV0gdGhhdCBnb3QgYWRk
ZWQgZHVyaW5nIGhvdApyZW1vdmUgc2VyaWVzIFY5LiBJdCBhdm9pZGVkIHRoZSBuYW1lIHRvIGJl
IGp1c3Qgdm1lbW1hcCBzcGVjaWZpYyBhcwp0aGUgdW5tYXBwaW5nIGFuZCBmcmVlaW5nIGZ1bmN0
aW9ucyBhcmUgdmVyeSBnZW5lcmljIGluIG5hdHVyZS4KClsxXSBodHRwczovL2xrbWwub3JnL2xr
bWwvMjAxOS8xMC84LzMxMAoKPiAKPiBBbGwgdGhlIGFsdG1hcCBwbHVtYmluZyBpdHNlbGYgbG9v
a3MgcHJldHR5IG1lY2hhbmljYWwgYW5kIGhhcmQgdG8gZGlzYWdyZWUgd2l0aCA6KQoKT2theS4K
Cj4gCj4gUm9iaW4uCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpsaW51eC1hcm0ta2VybmVsIG1haWxpbmcgbGlzdApsaW51eC1hcm0ta2VybmVsQGxpc3Rz
LmluZnJhZGVhZC5vcmcKaHR0cDovL2xpc3RzLmluZnJhZGVhZC5vcmcvbWFpbG1hbi9saXN0aW5m
by9saW51eC1hcm0ta2VybmVsCg==
